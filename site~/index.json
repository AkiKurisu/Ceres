{
  "api/Ceres.Annotations.CeresGroup.html": {
    "href": "api/Ceres.Annotations.CeresGroup.html",
    "title": "Class CeresGroup | Ceres Documentation",
    "keywords": "Class CeresGroup Inheritance object CeresGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax public static class CeresGroup Fields Hidden Declaration public const string Hidden = \"Hidden\" Field Value Type Description string"
  },
  "api/Ceres.Annotations.CeresGroupAttribute.html": {
    "href": "api/Ceres.Annotations.CeresGroupAttribute.html",
    "title": "Class CeresGroupAttribute | Ceres Documentation",
    "keywords": "Class CeresGroupAttribute Class or methods are categorized in the editor dropdown menu. Can be sub-categorized with the '/' symbol. Inheritance object System.Attribute CeresGroupAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, Inherited = false)] public sealed class CeresGroupAttribute : Attribute Constructors CeresGroupAttribute(string) Declaration public CeresGroupAttribute(string group) Parameters Type Name Description string group Properties Group Declaration public string Group { get; } Property Value Type Description string"
  },
  "api/Ceres.Annotations.CeresLabel.html": {
    "href": "api/Ceres.Annotations.CeresLabel.html",
    "title": "Class CeresLabel | Ceres Documentation",
    "keywords": "Class CeresLabel Inheritance object CeresLabel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax public static class CeresLabel Methods GetLabel(FieldInfo, bool) Declaration public static string GetLabel(FieldInfo fieldInfo, bool richText = true) Parameters Type Name Description FieldInfo fieldInfo bool richText Returns Type Description string GetLabel(string) Declaration public static string GetLabel(string name) Parameters Type Name Description string name Returns Type Description string GetLabel(Type, bool) Declaration public static string GetLabel(Type type, bool richText = true) Parameters Type Name Description System.Type type bool richText Returns Type Description string GetTypeName(Type) Declaration public static string GetTypeName(Type type) Parameters Type Name Description System.Type type Returns Type Description string"
  },
  "api/Ceres.Annotations.CeresLabelAttribute.html": {
    "href": "api/Ceres.Annotations.CeresLabelAttribute.html",
    "title": "Class CeresLabelAttribute | Ceres Documentation",
    "keywords": "Class CeresLabelAttribute Overwrite the display text in Ceres Graph Editor Inheritance object System.Attribute CeresLabelAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Field|AttributeTargets.Parameter|AttributeTargets.ReturnValue, Inherited = false)] public sealed class CeresLabelAttribute : Attribute Constructors CeresLabelAttribute(string) Declaration public CeresLabelAttribute(string label) Parameters Type Name Description string label Properties FontSize Declaration public int FontSize { get; set; } Property Value Type Description int Methods GetLabel(bool) Declaration public string GetLabel(bool richText = true) Parameters Type Name Description bool richText Returns Type Description string"
  },
  "api/Ceres.Annotations.CeresMetadata.html": {
    "href": "api/Ceres.Annotations.CeresMetadata.html",
    "title": "Class CeresMetadata | Ceres Documentation",
    "keywords": "Class CeresMetadata Util class for parsing ceres metadata Inheritance object CeresMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax public static class CeresMetadata Methods GetMetadata(MemberInfo, string) Declaration public static string[] GetMetadata(MemberInfo memberInfo, string tag) Parameters Type Name Description MemberInfo memberInfo string tag Returns Type Description string[] GetMetadata(ParameterInfo, string) Declaration public static string[] GetMetadata(ParameterInfo parameterInfo, string tag) Parameters Type Name Description ParameterInfo parameterInfo string tag Returns Type Description string[] GetMetadata(Type, string) Declaration public static string[] GetMetadata(Type type, string tag) Parameters Type Name Description System.Type type string tag Returns Type Description string[] IsDefined(MemberInfo, string, string) Declaration public static bool IsDefined(MemberInfo memberInfo, string tag, string metadata) Parameters Type Name Description MemberInfo memberInfo string tag string metadata Returns Type Description bool IsDefined(MemberInfo, string) Declaration public static bool IsDefined(MemberInfo memberInfo, string metadata) Parameters Type Name Description MemberInfo memberInfo string metadata Returns Type Description bool IsDefined(ParameterInfo, string) Declaration public static bool IsDefined(ParameterInfo parameterInfo, string metadata) Parameters Type Name Description ParameterInfo parameterInfo string metadata Returns Type Description bool IsDefined(Type, string, string) Declaration public static bool IsDefined(Type type, string tag, string metadata) Parameters Type Name Description System.Type type string tag string metadata Returns Type Description bool IsDefined(Type, string) Declaration public static bool IsDefined(Type type, string metadata) Parameters Type Name Description System.Type type string metadata Returns Type Description bool"
  },
  "api/Ceres.Annotations.CeresMetadataAttribute.html": {
    "href": "api/Ceres.Annotations.CeresMetadataAttribute.html",
    "title": "Class CeresMetadataAttribute | Ceres Documentation",
    "keywords": "Class CeresMetadataAttribute Describe metadata for Ceres Graph Editor Inheritance object System.Attribute CeresMetadataAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Field|AttributeTargets.Parameter|AttributeTargets.ReturnValue)] public sealed class CeresMetadataAttribute : Attribute Constructors CeresMetadataAttribute(params string[]) Declaration public CeresMetadataAttribute(params string[] meta) Parameters Type Name Description string[] meta Properties Meta Declaration public string[] Meta { get; } Property Value Type Description string[]"
  },
  "api/Ceres.Annotations.DisableCopyValueAttribute.html": {
    "href": "api/Ceres.Annotations.DisableCopyValueAttribute.html",
    "title": "Class DisableCopyValueAttribute | Ceres Documentation",
    "keywords": "Class DisableCopyValueAttribute Disable field value to be copied in Ceres Graph Editor Inheritance object System.Attribute DisableCopyValueAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class DisableCopyValueAttribute : Attribute"
  },
  "api/Ceres.Annotations.ForceSharedAttribute.html": {
    "href": "api/Ceres.Annotations.ForceSharedAttribute.html",
    "title": "Class ForceSharedAttribute | Ceres Documentation",
    "keywords": "Class ForceSharedAttribute Force field with type SharedVariable in the editor to use sharing mode Inheritance object System.Attribute ForceSharedAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class ForceSharedAttribute : Attribute"
  },
  "api/Ceres.Annotations.HideInGraphEditorAttribute.html": {
    "href": "api/Ceres.Annotations.HideInGraphEditorAttribute.html",
    "title": "Class HideInGraphEditorAttribute | Ceres Documentation",
    "keywords": "Class HideInGraphEditorAttribute Notify field not be displayed in the Ceres Graph Editor. Inheritance object System.Attribute HideInGraphEditorAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Field|AttributeTargets.Parameter)] public sealed class HideInGraphEditorAttribute : Attribute Remarks Hide port's internal field if this attribute is annotated on CeresPort"
  },
  "api/Ceres.Annotations.html": {
    "href": "api/Ceres.Annotations.html",
    "title": "Namespace Ceres.Annotations | Ceres Documentation",
    "keywords": "Namespace Ceres.Annotations Classes CeresGroup CeresGroupAttribute Class or methods are categorized in the editor dropdown menu. Can be sub-categorized with the '/' symbol. CeresLabel CeresLabelAttribute Overwrite the display text in Ceres Graph Editor CeresMetadata Util class for parsing ceres metadata CeresMetadataAttribute Describe metadata for Ceres Graph Editor DisableCopyValueAttribute Disable field value to be copied in Ceres Graph Editor ForceSharedAttribute Force field with type SharedVariable in the editor to use sharing mode HideInGraphEditorAttribute Notify field not be displayed in the Ceres Graph Editor. InputPortAttribute Notify editor port direction is input LayerAttribute NodeInfo NodeInfoAttribute Describe node description in the editor OutputPortAttribute Notify editor port direction is output RequirePortAttribute Notify editor that this node require input port and validate its value type TagAttribute WrapFieldAttribute Wrap field to use legacy IMGUI property drawer"
  },
  "api/Ceres.Annotations.InputPortAttribute.html": {
    "href": "api/Ceres.Annotations.InputPortAttribute.html",
    "title": "Class InputPortAttribute | Ceres Documentation",
    "keywords": "Class InputPortAttribute Notify editor port direction is input Inheritance object System.Attribute InputPortAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class InputPortAttribute : Attribute Constructors InputPortAttribute(bool) Declaration public InputPortAttribute(bool alwaysConnected = false) Parameters Type Name Description bool alwaysConnected Properties AlwaysConnected Whether the port should always be connected Declaration public bool AlwaysConnected { get; } Property Value Type Description bool"
  },
  "api/Ceres.Annotations.LayerAttribute.html": {
    "href": "api/Ceres.Annotations.LayerAttribute.html",
    "title": "Class LayerAttribute | Ceres Documentation",
    "keywords": "Class LayerAttribute Inheritance object System.Attribute LayerAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class LayerAttribute : Attribute"
  },
  "api/Ceres.Annotations.NodeInfo.html": {
    "href": "api/Ceres.Annotations.NodeInfo.html",
    "title": "Class NodeInfo | Ceres Documentation",
    "keywords": "Class NodeInfo Inheritance object NodeInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax public static class NodeInfo Methods GetInfo(Type) Declaration public static string GetInfo(Type type) Parameters Type Name Description System.Type type Returns Type Description string"
  },
  "api/Ceres.Annotations.NodeInfoAttribute.html": {
    "href": "api/Ceres.Annotations.NodeInfoAttribute.html",
    "title": "Class NodeInfoAttribute | Ceres Documentation",
    "keywords": "Class NodeInfoAttribute Describe node description in the editor Inheritance object System.Attribute NodeInfoAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public sealed class NodeInfoAttribute : Attribute Constructors NodeInfoAttribute(string) Declaration public NodeInfoAttribute(string description) Parameters Type Name Description string description Properties Description Declaration public string Description { get; } Property Value Type Description string"
  },
  "api/Ceres.Annotations.OutputPortAttribute.html": {
    "href": "api/Ceres.Annotations.OutputPortAttribute.html",
    "title": "Class OutputPortAttribute | Ceres Documentation",
    "keywords": "Class OutputPortAttribute Notify editor port direction is output Inheritance object System.Attribute OutputPortAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class OutputPortAttribute : Attribute Constructors OutputPortAttribute(bool) Declaration public OutputPortAttribute(bool allowMulti = true) Parameters Type Name Description bool allowMulti Properties AllowMulti Whether allow multi connections Declaration public bool AllowMulti { get; } Property Value Type Description bool"
  },
  "api/Ceres.Annotations.RequirePortAttribute.html": {
    "href": "api/Ceres.Annotations.RequirePortAttribute.html",
    "title": "Class RequirePortAttribute | Ceres Documentation",
    "keywords": "Class RequirePortAttribute Notify editor that this node require input port and validate its value type Inheritance object System.Attribute RequirePortAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public sealed class RequirePortAttribute : Attribute Constructors RequirePortAttribute(Type, bool) Declaration public RequirePortAttribute(Type portType = null, bool allowSubclass = true) Parameters Type Name Description System.Type portType bool allowSubclass Properties AllowSubclass Whether allow input port type is subclass of PortType Declaration public bool AllowSubclass { get; } Property Value Type Description bool PortType Require port type constraint Declaration public Type PortType { get; } Property Value Type Description System.Type"
  },
  "api/Ceres.Annotations.TagAttribute.html": {
    "href": "api/Ceres.Annotations.TagAttribute.html",
    "title": "Class TagAttribute | Ceres Documentation",
    "keywords": "Class TagAttribute Inheritance object System.Attribute TagAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class TagAttribute : Attribute"
  },
  "api/Ceres.Annotations.WrapFieldAttribute.html": {
    "href": "api/Ceres.Annotations.WrapFieldAttribute.html",
    "title": "Class WrapFieldAttribute | Ceres Documentation",
    "keywords": "Class WrapFieldAttribute Wrap field to use legacy IMGUI property drawer Inheritance object System.Attribute WrapFieldAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class WrapFieldAttribute : Attribute"
  },
  "api/Ceres.CeresLogger.html": {
    "href": "api/Ceres.CeresLogger.html",
    "title": "Class CeresLogger | Ceres Documentation",
    "keywords": "Class CeresLogger Logger of Ceres Inheritance object CeresLogger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres Assembly: cs.temp.dll.dll Syntax public static class CeresLogger Properties LogLevel The global in Ceres Declaration public static LogType LogLevel { get; set; } Property Value Type Description LogType LogUObjectRelink Whether to log relink details Declaration public static bool LogUObjectRelink { get; set; } Property Value Type Description bool Methods Assert(bool, string) Declaration public static void Assert(bool condition, string message) Parameters Type Name Description bool condition string message Log(string) Declaration public static void Log(string message) Parameters Type Name Description string message LogError(string) Declaration public static void LogError(string message) Parameters Type Name Description string message LogScope(LogType) Create a log scope in specific level Declaration public static CeresLogger.LogLevelAutoScope LogScope(LogType logLevel) Parameters Type Name Description LogType logLevel Returns Type Description CeresLogger.LogLevelAutoScope LogWarning(string) Declaration public static void LogWarning(string message) Parameters Type Name Description string message"
  },
  "api/Ceres.CeresLogger.LogLevelAutoScope.html": {
    "href": "api/Ceres.CeresLogger.LogLevelAutoScope.html",
    "title": "Struct CeresLogger.LogLevelAutoScope | Ceres Documentation",
    "keywords": "Struct CeresLogger.LogLevelAutoScope Implements System.IDisposable Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Ceres Assembly: cs.temp.dll.dll Syntax public readonly struct CeresLogger.LogLevelAutoScope : IDisposable Constructors LogLevelAutoScope(LogType) Declaration public LogLevelAutoScope(LogType scopeLogLevel) Parameters Type Name Description LogType scopeLogLevel Methods Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/Ceres.Editor.APIUpdateConfigEditor.html": {
    "href": "api/Ceres.Editor.APIUpdateConfigEditor.html",
    "title": "Class APIUpdateConfigEditor | Ceres Documentation",
    "keywords": "Class APIUpdateConfigEditor Inheritance object APIUpdateConfigEditor Namespace: Ceres.Editor Assembly: cs.temp.dll.dll Syntax public class APIUpdateConfigEditor : UEditor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Ceres.Editor.APIUpdater.html": {
    "href": "api/Ceres.Editor.APIUpdater.html",
    "title": "Class APIUpdater | Ceres Documentation",
    "keywords": "Class APIUpdater Inheritance object APIUpdater Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor Assembly: cs.temp.dll.dll Syntax public static class APIUpdater Methods UpdateAPI(Type, APIUpdateConfig) Declaration public static void UpdateAPI(Type filterAssetType, APIUpdateConfig updateConfig) Parameters Type Name Description System.Type filterAssetType APIUpdateConfig updateConfig"
  },
  "api/Ceres.Editor.CeresGroupSelectorAttribute.html": {
    "href": "api/Ceres.Editor.CeresGroupSelectorAttribute.html",
    "title": "Class CeresGroupSelectorAttribute | Ceres Documentation",
    "keywords": "Class CeresGroupSelectorAttribute Inheritance object CeresGroupSelectorAttribute Namespace: Ceres.Editor Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Field)] public class CeresGroupSelectorAttribute : PropertyAttribute Constructors CeresGroupSelectorAttribute(params Type[]) Declaration public CeresGroupSelectorAttribute(params Type[] types) Parameters Type Name Description System.Type[] types Properties Types Declaration public Type[] Types { get; } Property Value Type Description System.Type[]"
  },
  "api/Ceres.Editor.CeresGroupSelectorPropertyDrawer.html": {
    "href": "api/Ceres.Editor.CeresGroupSelectorPropertyDrawer.html",
    "title": "Class CeresGroupSelectorPropertyDrawer | Ceres Documentation",
    "keywords": "Class CeresGroupSelectorPropertyDrawer Inheritance object CeresGroupSelectorPropertyDrawer Namespace: Ceres.Editor Assembly: cs.temp.dll.dll Syntax public class CeresGroupSelectorPropertyDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Ceres.Editor.CeresSettings.GraphEditorDisplayMode.html": {
    "href": "api/Ceres.Editor.CeresSettings.GraphEditorDisplayMode.html",
    "title": "Enum CeresSettings.GraphEditorDisplayMode | Ceres Documentation",
    "keywords": "Enum CeresSettings.GraphEditorDisplayMode Namespace: Ceres.Editor Assembly: cs.temp.dll.dll Syntax public enum CeresSettings.GraphEditorDisplayMode Fields Name Description Debug Normal"
  },
  "api/Ceres.Editor.CeresSettings.html": {
    "href": "api/Ceres.Editor.CeresSettings.html",
    "title": "Class CeresSettings | Ceres Documentation",
    "keywords": "Class CeresSettings Inheritance object CeresSettings Namespace: Ceres.Editor Assembly: cs.temp.dll.dll Syntax public class CeresSettings : ScriptableSingleton<CeresSettings> Properties DisplayDebug Ceres graph editor will display in debug mode Declaration public static bool DisplayDebug { get; } Property Value Type Description bool DisplayMode Ceres graph editor view display mode Declaration public static CeresSettings.GraphEditorDisplayMode DisplayMode { get; } Property Value Type Description CeresSettings.GraphEditorDisplayMode Methods SaveSettings() Declaration public static void SaveSettings()"
  },
  "api/Ceres.Editor.CustomNodeViewAttribute.html": {
    "href": "api/Ceres.Editor.CustomNodeViewAttribute.html",
    "title": "Class CustomNodeViewAttribute | Ceres Documentation",
    "keywords": "Class CustomNodeViewAttribute Tells a node view class which run-time node type it's an editor for. Inheritance object System.Attribute CustomNodeViewAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor Assembly: cs.temp.dll.dll Syntax public sealed class CustomNodeViewAttribute : Attribute Constructors CustomNodeViewAttribute(Type, bool) Declaration public CustomNodeViewAttribute(Type nodeType, bool canInherit) Parameters Type Name Description System.Type nodeType bool canInherit CustomNodeViewAttribute(Type) Declaration public CustomNodeViewAttribute(Type nodeType) Parameters Type Name Description System.Type nodeType Properties CanInherit Whether this view can be used for inherit types of NodeType Declaration public bool CanInherit { get; } Property Value Type Description bool NodeType View bound node type, leave null to treat node view as hidden in factory Declaration public Type NodeType { get; } Property Value Type Description System.Type"
  },
  "api/Ceres.Editor.FlowGraphValidator.html": {
    "href": "api/Ceres.Editor.FlowGraphValidator.html",
    "title": "Class FlowGraphValidator | Ceres Documentation",
    "keywords": "Class FlowGraphValidator Validate flow graph whether it can be compiled Inheritance object FlowGraphValidator Implements System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor Assembly: cs.temp.dll.dll Syntax public class FlowGraphValidator : IDisposable Methods Dispose() Declaration public void Dispose() MarkAsInvalid(ExecutableNodeView, string) Declaration public void MarkAsInvalid(ExecutableNodeView nodeView, string reason = null) Parameters Type Name Description ExecutableNodeView nodeView string reason Implements System.IDisposable"
  },
  "api/Ceres.Editor.GameVariableScopeEditor.html": {
    "href": "api/Ceres.Editor.GameVariableScopeEditor.html",
    "title": "Class GameVariableScopeEditor | Ceres Documentation",
    "keywords": "Class GameVariableScopeEditor Inheritance object GameVariableScopeEditor Namespace: Ceres.Editor Assembly: cs.temp.dll.dll Syntax public class GameVariableScopeEditor : UnityEditor.Editor Methods CreateInspectorGUI() Declaration public override VisualElement CreateInspectorGUI() Returns Type Description VisualElement"
  },
  "api/Ceres.Editor.Graph.BoolResolver.html": {
    "href": "api/Ceres.Editor.Graph.BoolResolver.html",
    "title": "Class BoolResolver | Ceres Documentation",
    "keywords": "Class BoolResolver Inheritance object FieldResolver<Toggle, bool> BoolResolver Implements IFieldResolver Inherited Members FieldResolver<Toggle, bool>.EditorField FieldResolver<Toggle, bool>.BaseField FieldResolver<Toggle, bool>.Value FieldResolver<Toggle, bool>.CreateField() FieldResolver<Toggle, bool>.Copy(IFieldResolver) FieldResolver<Toggle, bool>.Restore(object) FieldResolver<Toggle, bool>.Commit(object) FieldResolver<Toggle, bool>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<Toggle, bool>.IsAcceptable(Type, FieldInfo) FieldResolver<Toggle, bool>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class BoolResolver : FieldResolver<Toggle, bool>, IFieldResolver Constructors BoolResolver(FieldInfo) Declaration public BoolResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override Toggle CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description Toggle Overrides Ceres.Editor.Graph.FieldResolver<Toggle, bool>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Toggle, bool>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.BoundsIntResolver.html": {
    "href": "api/Ceres.Editor.Graph.BoundsIntResolver.html",
    "title": "Class BoundsIntResolver | Ceres Documentation",
    "keywords": "Class BoundsIntResolver Inheritance object FieldResolver<BoundsIntField, BoundsInt> BoundsIntResolver Implements IFieldResolver Inherited Members FieldResolver<BoundsIntField, BoundsInt>.EditorField FieldResolver<BoundsIntField, BoundsInt>.BaseField FieldResolver<BoundsIntField, BoundsInt>.Value FieldResolver<BoundsIntField, BoundsInt>.CreateField() FieldResolver<BoundsIntField, BoundsInt>.Copy(IFieldResolver) FieldResolver<BoundsIntField, BoundsInt>.Restore(object) FieldResolver<BoundsIntField, BoundsInt>.Commit(object) FieldResolver<BoundsIntField, BoundsInt>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<BoundsIntField, BoundsInt>.IsAcceptable(Type, FieldInfo) FieldResolver<BoundsIntField, BoundsInt>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class BoundsIntResolver : FieldResolver<BoundsIntField, BoundsInt>, IFieldResolver Constructors BoundsIntResolver(FieldInfo) Declaration public BoundsIntResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override BoundsIntField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description BoundsIntField Overrides Ceres.Editor.Graph.FieldResolver<BoundsIntField, BoundsInt>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<BoundsIntField, BoundsInt>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.BoundsResolver.html": {
    "href": "api/Ceres.Editor.Graph.BoundsResolver.html",
    "title": "Class BoundsResolver | Ceres Documentation",
    "keywords": "Class BoundsResolver Inheritance object FieldResolver<BoundsField, Bounds> BoundsResolver Implements IFieldResolver Inherited Members FieldResolver<BoundsField, Bounds>.EditorField FieldResolver<BoundsField, Bounds>.BaseField FieldResolver<BoundsField, Bounds>.Value FieldResolver<BoundsField, Bounds>.CreateField() FieldResolver<BoundsField, Bounds>.Copy(IFieldResolver) FieldResolver<BoundsField, Bounds>.Restore(object) FieldResolver<BoundsField, Bounds>.Commit(object) FieldResolver<BoundsField, Bounds>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<BoundsField, Bounds>.IsAcceptable(Type, FieldInfo) FieldResolver<BoundsField, Bounds>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class BoundsResolver : FieldResolver<BoundsField, Bounds>, IFieldResolver Constructors BoundsResolver(FieldInfo) Declaration public BoundsResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override BoundsField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description BoundsField Overrides Ceres.Editor.Graph.FieldResolver<BoundsField, Bounds>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<BoundsField, Bounds>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.CeresBlackboard.html": {
    "href": "api/Ceres.Editor.Graph.CeresBlackboard.html",
    "title": "Class CeresBlackboard | Ceres Documentation",
    "keywords": "Class CeresBlackboard Inheritance object CeresBlackboard FlowBlackboard Implements IVariableSource Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CeresBlackboard : Blackboard, IVariableSource Constructors CeresBlackboard(CeresGraphView) Declaration protected CeresBlackboard(CeresGraphView graphView) Parameters Type Name Description CeresGraphView graphView CeresBlackboard(IVariableSource, GraphView) Declaration public CeresBlackboard(IVariableSource source, GraphView graphView) Parameters Type Name Description IVariableSource source GraphView graphView Fields SharedVariableSection Declaration public const string SharedVariableSection = \"Shared Variables\" Field Value Type Description string Properties AlwaysExposed Declaration public bool AlwaysExposed { get; set; } Property Value Type Description bool SharedVariables Declaration public List<SharedVariable> SharedVariables { get; } Property Value Type Description System.Collections.Generic.List<T><SharedVariable> Methods AddVariable(SharedVariable, bool) Declaration public void AddVariable(SharedVariable variable, bool fireEvents) Parameters Type Name Description SharedVariable variable bool fireEvents AddVariableRow(SharedVariable, BlackboardRow) Declaration protected virtual void AddVariableRow(SharedVariable variable, BlackboardRow blackboardRow) Parameters Type Name Description SharedVariable variable BlackboardRow blackboardRow BuildBlackboardMenu(ContextualMenuPopulateEvent, CeresBlackboardVariableRow) Declaration protected virtual void BuildBlackboardMenu(ContextualMenuPopulateEvent evt, CeresBlackboardVariableRow variableRow) Parameters Type Name Description ContextualMenuPopulateEvent evt CeresBlackboardVariableRow variableRow CanVariableExposed(SharedVariable) Whether variable can be exposed in blackboard Declaration protected virtual bool CanVariableExposed(SharedVariable variable) Parameters Type Name Description SharedVariable variable Returns Type Description bool CreateBlackboardMenu(GenericMenu) Declaration protected virtual void CreateBlackboardMenu(GenericMenu menu) Parameters Type Name Description GenericMenu menu CreateVariableBlackboardRow(SharedVariable, BlackboardField, VisualElement) Create for variable Declaration protected virtual BlackboardRow CreateVariableBlackboardRow(SharedVariable variable, BlackboardField blackboardField, VisualElement valueField) Parameters Type Name Description SharedVariable variable BlackboardField blackboardField VisualElement valueField Returns Type Description BlackboardRow EditVariable(string) Declaration public void EditVariable(string variableName) Parameters Type Name Description string variableName FindRow(SharedVariable) Declaration protected CeresBlackboardVariableRow FindRow(SharedVariable variable) Parameters Type Name Description SharedVariable variable Returns Type Description CeresBlackboardVariableRow GetOrAddSection(string) Declaration protected BlackboardSection GetOrAddSection(string sectionName) Parameters Type Name Description string sectionName Returns Type Description BlackboardSection RemoveVariable(SharedVariable, bool) Declaration public void RemoveVariable(SharedVariable variable, bool fireEvents) Parameters Type Name Description SharedVariable variable bool fireEvents Implements IVariableSource"
  },
  "api/Ceres.Editor.Graph.CeresBlackboardVariableRow.html": {
    "href": "api/Ceres.Editor.Graph.CeresBlackboardVariableRow.html",
    "title": "Class CeresBlackboardVariableRow | Ceres Documentation",
    "keywords": "Class CeresBlackboardVariableRow Blackboard row for SharedVariable Inheritance object CeresBlackboardVariableRow Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CeresBlackboardVariableRow : BlackboardRow Constructors CeresBlackboardVariableRow(SharedVariable, BlackboardField, VisualElement) Declaration public CeresBlackboardVariableRow(SharedVariable variable, BlackboardField blackboardField, VisualElement propertyView) Parameters Type Name Description SharedVariable variable BlackboardField blackboardField VisualElement propertyView Properties BlackboardField Declaration public BlackboardField BlackboardField { get; } Property Value Type Description BlackboardField CanDelete Declaration public bool CanDelete { get; set; } Property Value Type Description bool Variable Declaration public SharedVariable Variable { get; } Property Value Type Description SharedVariable Methods OnCustomStyleResolved(ICustomStyle) Declaration protected override void OnCustomStyleResolved(ICustomStyle styles) Parameters Type Name Description ICustomStyle styles"
  },
  "api/Ceres.Editor.Graph.CeresDropdownMenuAction.html": {
    "href": "api/Ceres.Editor.Graph.CeresDropdownMenuAction.html",
    "title": "Class CeresDropdownMenuAction | Ceres Documentation",
    "keywords": "Class CeresDropdownMenuAction Inheritance object CeresDropdownMenuAction Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CeresDropdownMenuAction : DropdownMenuAction Constructors CeresDropdownMenuAction(string, Action<DropdownMenuAction>, Func<DropdownMenuAction, Status>, object) Declaration public CeresDropdownMenuAction(string actionName, Action<DropdownMenuAction> actionCallback, Func<DropdownMenuAction, Status> actionStatusCallback, object userData = null) Parameters Type Name Description string actionName System.Action<T><DropdownMenuAction> actionCallback System.Func<T, TResult><DropdownMenuAction, Status> actionStatusCallback object userData CeresDropdownMenuAction(string, Action<DropdownMenuAction>) Declaration public CeresDropdownMenuAction(string actionName, Action<DropdownMenuAction> actionCallback) Parameters Type Name Description string actionName System.Action<T><DropdownMenuAction> actionCallback"
  },
  "api/Ceres.Editor.Graph.CeresEdge.html": {
    "href": "api/Ceres.Editor.Graph.CeresEdge.html",
    "title": "Class CeresEdge | Ceres Documentation",
    "keywords": "Class CeresEdge Inheritance object CeresEdge Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CeresEdge : Edge Constructors CeresEdge() Declaration public CeresEdge()"
  },
  "api/Ceres.Editor.Graph.CeresEdgeListener.html": {
    "href": "api/Ceres.Editor.Graph.CeresEdgeListener.html",
    "title": "Class CeresEdgeListener | Ceres Documentation",
    "keywords": "Class CeresEdgeListener Edge listener connecting CeresEdge between CeresPortElement Inheritance object CeresEdgeListener Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CeresEdgeListener : IEdgeConnectorListener Constructors CeresEdgeListener(CeresGraphView) Declaration public CeresEdgeListener(CeresGraphView ceresGraphView) Parameters Type Name Description CeresGraphView ceresGraphView Methods OnDrop(GraphView, Edge) Declaration public void OnDrop(GraphView graphView, Edge edge) Parameters Type Name Description GraphView graphView Edge edge OnDropOutsidePort(Edge, Vector2) Declaration public void OnDropOutsidePort(Edge edge, Vector2 position) Parameters Type Name Description Edge edge Vector2 position"
  },
  "api/Ceres.Editor.Graph.CeresGraphEditorWindow-2.EditorWindowRegistry.html": {
    "href": "api/Ceres.Editor.Graph.CeresGraphEditorWindow-2.EditorWindowRegistry.html",
    "title": "Class CeresGraphEditorWindow<TContainer, TKWindow>.EditorWindowRegistry | Ceres Documentation",
    "keywords": "Class CeresGraphEditorWindow<TContainer, TKWindow>.EditorWindowRegistry Inheritance object CeresGraphEditorWindow<TContainer, TKWindow>.EditorWindowRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public static class CeresGraphEditorWindow<TContainer, TKWindow>.EditorWindowRegistry Methods FindWindow(CeresGraphIdentifier) Find existed CeresGraphEditorWindow by CeresGraphIdentifier Declaration public static CeresGraphEditorWindow FindWindow(CeresGraphIdentifier identifier) Parameters Type Name Description CeresGraphIdentifier identifier Returns Type Description CeresGraphEditorWindow GetOrCreateEditorWindow(TContainer) Declaration public static TKWindow GetOrCreateEditorWindow(TContainer container) Parameters Type Name Description TContainer container Returns Type Description TKWindow Register(TContainer, TKWindow) Declaration public static void Register(TContainer container, TKWindow window) Parameters Type Name Description TContainer container TKWindow window Unregister(TContainer, TKWindow) Declaration public static void Unregister(TContainer container, TKWindow window) Parameters Type Name Description TContainer container TKWindow window"
  },
  "api/Ceres.Editor.Graph.CeresGraphEditorWindow-2.html": {
    "href": "api/Ceres.Editor.Graph.CeresGraphEditorWindow-2.html",
    "title": "Class CeresGraphEditorWindow<TContainer, TKWindow> | Ceres Documentation",
    "keywords": "Class CeresGraphEditorWindow<TContainer, TKWindow> Inheritance object CeresGraphEditorWindow CeresGraphEditorWindow<TContainer, TKWindow> FlowGraphEditorWindow Implements IHasCustomMenu Inherited Members CeresGraphEditorWindow.Identifier CeresGraphEditorWindow.Container CeresGraphEditorWindow.Initialize(ICeresGraphContainer) CeresGraphEditorWindow.OnInitialize() CeresGraphEditorWindow.OnEnable() CeresGraphEditorWindow.AddItemsToMenu(GenericMenu) CeresGraphEditorWindow.PreReload() CeresGraphEditorWindow.GetContainerType() CeresGraphEditorWindow.SetContainerType(Type) Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public abstract class CeresGraphEditorWindow<TContainer, TKWindow> : CeresGraphEditorWindow, IHasCustomMenu where TContainer : class, ICeresGraphContainer where TKWindow : CeresGraphEditorWindow<TContainer, TKWindow> Type Parameters Name Description TContainer TKWindow Properties ContainerT Actual graph container of this window Declaration public TContainer ContainerT { get; } Property Value Type Description TContainer Methods GetContainer() Get ICeresGraphContainer from editor window key object Declaration public TContainer GetContainer() Returns Type Description TContainer GetOrCreateEditorWindow(TContainer) Create CeresGraphEditorWindow instance, return cached window if existed Declaration public static TKWindow GetOrCreateEditorWindow(TContainer container) Parameters Type Name Description TContainer container Returns Type Description TKWindow OnDisable() Declaration protected override void OnDisable() Overrides CeresGraphEditorWindow.OnDisable() OnReloadGraphView() Construct graph view after reloading Declaration protected virtual void OnReloadGraphView() Reload() Declaration protected override void Reload() Overrides CeresGraphEditorWindow.Reload() Show(TContainer) Show the graph editor window for the container instance Declaration public static TKWindow Show(TContainer container) Parameters Type Name Description TContainer container Returns Type Description TKWindow Implements IHasCustomMenu"
  },
  "api/Ceres.Editor.Graph.CeresGraphEditorWindow.html": {
    "href": "api/Ceres.Editor.Graph.CeresGraphEditorWindow.html",
    "title": "Class CeresGraphEditorWindow | Ceres Documentation",
    "keywords": "Class CeresGraphEditorWindow Inheritance object CeresGraphEditorWindow CeresGraphEditorWindow<TContainer, TKWindow> Implements IHasCustomMenu Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public abstract class CeresGraphEditorWindow : EditorWindow, IHasCustomMenu Properties Container Actual graph container of this window Declaration public ICeresGraphContainer Container { get; protected set; } Property Value Type Description ICeresGraphContainer Identifier Unique object key per window Declaration public CeresGraphIdentifier Identifier { get; protected set; } Property Value Type Description CeresGraphIdentifier Methods AddItemsToMenu(GenericMenu) Declaration public virtual void AddItemsToMenu(GenericMenu menu) Parameters Type Name Description GenericMenu menu GetContainerType() Declaration public Type GetContainerType() Returns Type Description System.Type Initialize(ICeresGraphContainer) Setup EditorWindow Declaration protected void Initialize(ICeresGraphContainer container) Parameters Type Name Description ICeresGraphContainer container OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() OnInitialize() Initialize graph view in this stage Declaration protected virtual void OnInitialize() PreReload() Called before reload Declaration protected virtual void PreReload() Reload() Reload editor window Declaration protected virtual void Reload() SetContainerType(Type) Set graph container type explicitly, useful when your runtime container is different from editor Declaration public void SetContainerType(Type targetType) Parameters Type Name Description System.Type targetType Implements IHasCustomMenu"
  },
  "api/Ceres.Editor.Graph.CeresGraphView.html": {
    "href": "api/Ceres.Editor.Graph.CeresGraphView.html",
    "title": "Class CeresGraphView | Ceres Documentation",
    "keywords": "Class CeresGraphView Inheritance object CeresGraphView FlowGraphView Implements IVariableSource Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public abstract class CeresGraphView : GraphView, IVariableSource Constructors CeresGraphView(CeresGraphEditorWindow) Declaration protected CeresGraphView(CeresGraphEditorWindow editorWindow) Parameters Type Name Description CeresGraphEditorWindow editorWindow Properties Blackboard Declaration public CeresBlackboard Blackboard { get; } Property Value Type Description CeresBlackboard ContextualMenuRegistry Declaration public ContextualMenuRegistry ContextualMenuRegistry { get; } Property Value Type Description ContextualMenuRegistry EditorWindow Declaration public CeresGraphEditorWindow EditorWindow { get; set; } Property Value Type Description CeresGraphEditorWindow NodeGroupHandler Declaration public NodeGroupHandler NodeGroupHandler { get; } Property Value Type Description NodeGroupHandler NodeViews Declaration public HashSet<ICeresNodeView> NodeViews { get; } Property Value Type Description System.Collections.Generic.HashSet<T><ICeresNodeView> SearchWindow Declaration protected CeresNodeSearchWindow SearchWindow { get; } Property Value Type Description CeresNodeSearchWindow SharedVariables Declaration public List<SharedVariable> SharedVariables { get; } Property Value Type Description System.Collections.Generic.List<T><SharedVariable> Methods AddBlackboard(CeresBlackboard, Rect) Add custom blackboard to graph Declaration public void AddBlackboard(CeresBlackboard blackboard, Rect rect) Parameters Type Name Description CeresBlackboard blackboard Rect rect AddBlackboard(CeresBlackboard) Add custom blackboard to graph Declaration public void AddBlackboard(CeresBlackboard blackboard) Parameters Type Name Description CeresBlackboard blackboard AddNodeGroupHandler(NodeGroupHandler) Add custom NodeGroupHandler to graph Declaration public void AddNodeGroupHandler(NodeGroupHandler groupHandler) Parameters Type Name Description NodeGroupHandler groupHandler AddNodeView(ICeresNodeView) Add custom node view to graph Declaration public virtual void AddNodeView(ICeresNodeView nodeView) Parameters Type Name Description ICeresNodeView nodeView AddSearchWindow<T>() Add custom node search window to graph Declaration public void AddSearchWindow<T>() where T : CeresNodeSearchWindow Type Parameters Name Description T AddSharedVariables(List<SharedVariable>, bool) Add shared variables to graph's blackboard Declaration public virtual void AddSharedVariables(List<SharedVariable> variables, bool duplicateWhenConflict) Parameters Type Name Description System.Collections.Generic.List<T><SharedVariable> variables bool duplicateWhenConflict AddStyleSheet(string) Add custom to graph Declaration public void AddStyleSheet(string resourcePath) Parameters Type Name Description string resourcePath BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt CanPasteSerializedGraph(string) Declaration protected virtual bool CanPasteSerializedGraph(string serializedData) Parameters Type Name Description string serializedData Returns Type Description bool ClearDirty() Clear graph view's dirty flag. Declaration public void ClearDirty() FindNodeView(string) Find node by guid Declaration public ICeresNodeView FindNodeView(string guid) Parameters Type Name Description string guid Returns Type Description ICeresNodeView FindNodeView<TNodeView>(string) Find generic node by guid Declaration public TNodeView FindNodeView<TNodeView>(string guid) where TNodeView : class, ICeresNodeView Parameters Type Name Description string guid Returns Type Description TNodeView Type Parameters Name Description TNodeView GetCompatiblePorts(Port, NodeAdapter) Declaration public override List<Port> GetCompatiblePorts(Port startPort, NodeAdapter nodeAdapter) Parameters Type Name Description Port startPort NodeAdapter nodeAdapter Returns Type Description System.Collections.Generic.List<T><Port> GetOrLoadStyleSheet(string) Get or load custom Declaration public static StyleSheet GetOrLoadStyleSheet(string resourcePath) Parameters Type Name Description string resourcePath Returns Type Description StyleSheet GetOrLoadVisualTreeAsset(string) Get or load custom Declaration public static VisualTreeAsset GetOrLoadVisualTreeAsset(string resourcePath) Parameters Type Name Description string resourcePath Returns Type Description VisualTreeAsset IsDirty() Whether graph view is dirty Declaration public bool IsDirty() Returns Type Description bool OnCopySerializedGraph(IEnumerable<GraphElement>) Declaration protected virtual string OnCopySerializedGraph(IEnumerable<GraphElement> elements) Parameters Type Name Description System.Collections.Generic.IEnumerable<T><GraphElement> elements Returns Type Description string OnDestroy() Called after detached from editor window Declaration protected virtual void OnDestroy() OnDragDropElementPerform(List<ISelectable>, GraphElement, Vector3) Declaration protected virtual void OnDragDropElementPerform(List<ISelectable> selectables, GraphElement graphElement, Vector3 mousePosition) Parameters Type Name Description System.Collections.Generic.List<T><ISelectable> selectables GraphElement graphElement Vector3 mousePosition OnDragDropObjectPerform(UObject, Vector3) Declaration protected virtual void OnDragDropObjectPerform(UObject data, Vector3 mousePosition) Parameters Type Name Description UObject data Vector3 mousePosition OnGraphViewChanged(GraphViewChange) Declaration protected virtual GraphViewChange OnGraphViewChanged(GraphViewChange graphViewChange) Parameters Type Name Description GraphViewChange graphViewChange Returns Type Description GraphViewChange OnNodeCreationRequest(NodeCreationContext) Declaration protected virtual void OnNodeCreationRequest(NodeCreationContext context) Parameters Type Name Description NodeCreationContext context OnPasteSerializedGraph(string, string) Declaration protected virtual void OnPasteSerializedGraph(string operationName, string serializedData) Parameters Type Name Description string operationName string serializedData OpenSearch(Vector2, CeresPortView) Open node search window with input port Declaration public virtual void OpenSearch(Vector2 screenPosition, CeresPortView portView) Parameters Type Name Description Vector2 screenPosition CeresPortView portView OpenSearch(Vector2) Open node search window Declaration public virtual void OpenSearch(Vector2 screenPosition) Parameters Type Name Description Vector2 screenPosition SetDirty() Marks graph view as dirty Declaration public void SetDirty() Implements IVariableSource"
  },
  "api/Ceres.Editor.Graph.CeresGraphViewExtensions.html": {
    "href": "api/Ceres.Editor.Graph.CeresGraphViewExtensions.html",
    "title": "Class CeresGraphViewExtensions | Ceres Documentation",
    "keywords": "Class CeresGraphViewExtensions Inheritance object CeresGraphViewExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public static class CeresGraphViewExtensions Methods AddNodeView(CeresGraphView, ICeresNodeView, Rect) Add custom node view to graph with world rect Declaration public static void AddNodeView(this CeresGraphView graphView, ICeresNodeView node, Rect worldRect) Parameters Type Name Description CeresGraphView graphView ICeresNodeView node Rect worldRect ConnectPorts(CeresGraphView, CeresPortView, CeresPortView) Connect input port to output port Declaration public static void ConnectPorts(this CeresGraphView graphView, CeresPortView input, CeresPortView output) Parameters Type Name Description CeresGraphView graphView CeresPortView input CeresPortView output GetContainerObject(CeresGraphView) Get container object of this graph Declaration public static UObject GetContainerObject(this CeresGraphView graphView) Parameters Type Name Description CeresGraphView graphView Returns Type Description UObject GetContainerType(CeresGraphView) Get container type of this graph Declaration public static Type GetContainerType(this CeresGraphView graphView) Parameters Type Name Description CeresGraphView graphView Returns Type Description System.Type Screen2GraphPosition(CeresGraphView, Vector2) Convert screen position to graph view local position Declaration public static Vector2 Screen2GraphPosition(this CeresGraphView graphView, Vector2 mousePosition) Parameters Type Name Description CeresGraphView graphView Vector2 mousePosition Returns Type Description Vector2"
  },
  "api/Ceres.Editor.Graph.CeresInfoContainer.html": {
    "href": "api/Ceres.Editor.Graph.CeresInfoContainer.html",
    "title": "Class CeresInfoContainer | Ceres Documentation",
    "keywords": "Class CeresInfoContainer Inheritance object CeresInfoContainer Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CeresInfoContainer : VisualElement Constructors CeresInfoContainer(string) Declaration public CeresInfoContainer(string defaultInfo = \"\") Parameters Type Name Description string defaultInfo Methods DisplayInfo(string) Declaration public void DisplayInfo(string info) Parameters Type Name Description string info DisplayNodeInfo(Type) Declaration public void DisplayNodeInfo(Type nodeType) Parameters Type Name Description System.Type nodeType"
  },
  "api/Ceres.Editor.Graph.CeresNodeGroup.html": {
    "href": "api/Ceres.Editor.Graph.CeresNodeGroup.html",
    "title": "Class CeresNodeGroup | Ceres Documentation",
    "keywords": "Class CeresNodeGroup Inheritance object CeresNodeGroup ExecutableNodeGroup Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public abstract class CeresNodeGroup : Group Constructors CeresNodeGroup() Declaration protected CeresNodeGroup() Methods BuildContextualMenu(ContextualMenuPopulateEvent) Declaration protected virtual void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt Commit(List<NodeGroup>) Declaration public abstract void Commit(List<NodeGroup> nodeGroups) Parameters Type Name Description System.Collections.Generic.List<T><NodeGroup> nodeGroups"
  },
  "api/Ceres.Editor.Graph.CeresNodeSearchEntryBuilder.html": {
    "href": "api/Ceres.Editor.Graph.CeresNodeSearchEntryBuilder.html",
    "title": "Class CeresNodeSearchEntryBuilder | Ceres Documentation",
    "keywords": "Class CeresNodeSearchEntryBuilder Helper for build for CeresNodeSearchWindow Inheritance object CeresNodeSearchEntryBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CeresNodeSearchEntryBuilder Constructors CeresNodeSearchEntryBuilder(Texture, bool, Type) Declaration public CeresNodeSearchEntryBuilder(Texture entryDefaultIcon, bool allowGeneric = false, Type portValueType = null) Parameters Type Name Description Texture entryDefaultIcon bool allowGeneric System.Type portValueType Methods AddAllEntries(IGrouping<string, Type>, int, int) Declaration public bool AddAllEntries(IGrouping<string, Type> group, int level, int subCount = 1) Parameters Type Name Description System.Linq.IGrouping<TKey, TElement><string, System.Type> group int level int subCount Returns Type Description bool AddEntry(SearchTreeEntry) Declaration public bool AddEntry(SearchTreeEntry entry) Parameters Type Name Description SearchTreeEntry entry Returns Type Description bool AddEntry(Type, int) Declaration public bool AddEntry(Type type, int level) Parameters Type Name Description System.Type type int level Returns Type Description bool AddGroupEntry(string, int) Declaration public bool AddGroupEntry(string content, int level) Parameters Type Name Description string content int level Returns Type Description bool GetEntries() Declaration public List<SearchTreeEntry> GetEntries() Returns Type Description System.Collections.Generic.List<T><SearchTreeEntry>"
  },
  "api/Ceres.Editor.Graph.CeresNodeSearchEntryData.html": {
    "href": "api/Ceres.Editor.Graph.CeresNodeSearchEntryData.html",
    "title": "Class CeresNodeSearchEntryData | Ceres Documentation",
    "keywords": "Class CeresNodeSearchEntryData Inheritance object CeresNodeSearchEntryData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CeresNodeSearchEntryData Fields Data Additional data if need Declaration public object Data Field Value Type Description object NodeType Primary type that entry contained Declaration public Type NodeType Field Value Type Description System.Type SubType Secondary type that entry contained, used for generic argument Declaration public Type SubType Field Value Type Description System.Type"
  },
  "api/Ceres.Editor.Graph.CeresNodeSearchWindow.html": {
    "href": "api/Ceres.Editor.Graph.CeresNodeSearchWindow.html",
    "title": "Class CeresNodeSearchWindow | Ceres Documentation",
    "keywords": "Class CeresNodeSearchWindow Inheritance object CeresNodeSearchWindow ExecutableNodeSearchWindow Implements ISearchWindowProvider Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public abstract class CeresNodeSearchWindow : ScriptableObject, ISearchWindowProvider Properties Context Declaration public NodeSearchContext Context { get; } Property Value Type Description NodeSearchContext GraphView Declaration public CeresGraphView GraphView { get; } Property Value Type Description CeresGraphView Methods CanShowType(Type, NodeSearchContext) Declaration protected static bool CanShowType(Type type, NodeSearchContext context) Parameters Type Name Description System.Type type NodeSearchContext context Returns Type Description bool ConnectRequestPort(ICeresNodeView) Connect request port from Context with new created node view Declaration protected virtual bool ConnectRequestPort(ICeresNodeView nodeView) Parameters Type Name Description ICeresNodeView nodeView Returns Type Description bool CreateGenericNodeView(CeresNodeSearchEntryData) Create node view from entry data and allowed construct generic node instance Declaration public ICeresNodeView CreateGenericNodeView(CeresNodeSearchEntryData entryData) Parameters Type Name Description CeresNodeSearchEntryData entryData Returns Type Description ICeresNodeView CreateNodeView(CeresNodeSearchEntryData) Create node view from entry data by current Context Declaration public ICeresNodeView CreateNodeView(CeresNodeSearchEntryData entryData) Parameters Type Name Description CeresNodeSearchEntryData entryData Returns Type Description ICeresNodeView CreateNonGenericNodeView(CeresNodeSearchEntryData) Create node view from entry data and not allowed construct generic node instance Declaration public ICeresNodeView CreateNonGenericNodeView(CeresNodeSearchEntryData entryData) Parameters Type Name Description CeresNodeSearchEntryData entryData Returns Type Description ICeresNodeView CreateSearchTree(SearchWindowContext) Declaration public abstract List<SearchTreeEntry> CreateSearchTree(SearchWindowContext context) Parameters Type Name Description SearchWindowContext context Returns Type Description System.Collections.Generic.List<T><SearchTreeEntry> Initialize(CeresGraphView, NodeSearchContext) Declaration public void Initialize(CeresGraphView graphView, NodeSearchContext context) Parameters Type Name Description CeresGraphView graphView NodeSearchContext context OnInitialize() Initialize search window Declaration protected virtual void OnInitialize() OnSelectEntry(CeresNodeSearchEntryData, Rect) Create node from CeresNodeSearchEntryData after click tree entry Declaration protected virtual bool OnSelectEntry(CeresNodeSearchEntryData entryData, Rect rect) Parameters Type Name Description CeresNodeSearchEntryData entryData Rect rect Returns Type Description bool OnSelectEntry(SearchTreeEntry, SearchWindowContext) Declaration public virtual bool OnSelectEntry(SearchTreeEntry searchTreeEntry, SearchWindowContext context) Parameters Type Name Description SearchTreeEntry searchTreeEntry SearchWindowContext context Returns Type Description bool SearchTypes(Type[], NodeSearchContext) Util function for searching types grouped by Declaration public static (List<IGrouping<string, Type>>, List<Type>) SearchTypes(Type[] baseTypes, NodeSearchContext nodeSearchContext) Parameters Type Name Description System.Type[] baseTypes NodeSearchContext nodeSearchContext Returns Type Description (System.Collections.Generic.List<T><System.Linq.IGrouping<TKey, TElement><string, System.Type>>, System.Collections.Generic.List<T><System.Type>) Implements ISearchWindowProvider"
  },
  "api/Ceres.Editor.Graph.CeresNodeView.html": {
    "href": "api/Ceres.Editor.Graph.CeresNodeView.html",
    "title": "Class CeresNodeView | Ceres Documentation",
    "keywords": "Class CeresNodeView Inheritance object CeresNodeView ExecutableNodeView Implements ICeresNodeView Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public abstract class CeresNodeView : ICeresNodeView Constructors CeresNodeView() Default constructor without initialization, please initialize node view in implementation Declaration protected CeresNodeView() Fields FieldInfos Node instance visible Declaration protected readonly List<FieldInfo> FieldInfos Field Value Type Description System.Collections.Generic.List<T><FieldInfo> FieldResolvers Node instance visible IFieldResolver Declaration protected readonly List<IFieldResolver> FieldResolvers Field Value Type Description System.Collections.Generic.List<T><IFieldResolver> PortViews Node port views Declaration protected readonly List<CeresPortView> PortViews Field Value Type Description System.Collections.Generic.List<T><CeresPortView> Properties GraphView The graph this view attached to Declaration public CeresGraphView GraphView { get; } Property Value Type Description CeresGraphView Guid Graph scope node view guid Declaration public string Guid { get; set; } Property Value Type Description string NodeElement Node visual element of this view Declaration public NodeElement NodeElement { get; } Property Value Type Description NodeElement NodeInstance Node instance contained by this view Declaration public CeresNode NodeInstance { get; } Property Value Type Description CeresNode NodeType Node instance type contained by this view Declaration public Type NodeType { get; } Property Value Type Description System.Type Methods AddPortView(CeresPortView) Declaration public virtual void AddPortView(CeresPortView portView) Parameters Type Name Description CeresPortView portView FillDefaultNodePorts() Fill node element with default ports Declaration protected void FillDefaultNodePorts() FillDefaultNodeProperties() Fill node element with default properties Declaration protected void FillDefaultNodeProperties() FillDefaultNodeTitle() Fill node element with default title Declaration protected void FillDefaultNodeTitle() FindConnectablePortView(CeresPortView) Find port view that is compatible to connect Declaration public CeresPortView FindConnectablePortView(CeresPortView portView) Parameters Type Name Description CeresPortView portView Returns Type Description CeresPortView FindFieldResolver(string) Find field resolver with field name if existed Declaration public IFieldResolver FindFieldResolver(string fieldName) Parameters Type Name Description string fieldName Returns Type Description IFieldResolver FindFieldResolver<T>(string) Declaration public T FindFieldResolver<T>(string fieldName) where T : class, IFieldResolver Parameters Type Name Description string fieldName Returns Type Description T Type Parameters Name Description T FindPortView(string, int) Find port view with property name if existed Declaration public CeresPortView FindPortView(string propertyName, int portIndex = 0) Parameters Type Name Description string propertyName int portIndex Returns Type Description CeresPortView FindPortViewWithDisplayName(string, int) Find port view with display name if existed Declaration public CeresPortView FindPortViewWithDisplayName(string displayName, int portIndex = 0) Parameters Type Name Description string displayName int portIndex Returns Type Description CeresPortView FindPortViewWithDisplayType(Type, int) Find port view with display type if existed Declaration public CeresPortView FindPortViewWithDisplayType(Type displayType, int portIndex = 0) Parameters Type Name Description System.Type displayType int portIndex Returns Type Description CeresPortView GetAllPortViews() Get all port views Declaration public CeresPortView[] GetAllPortViews() Returns Type Description CeresPortView[] GetContainerType() Declaration protected Type GetContainerType() Returns Type Description System.Type Initialize(Type, CeresGraphView) Initialize node view Declaration public void Initialize(Type nodeType, CeresGraphView graphView) Parameters Type Name Description System.Type nodeType CeresGraphView graphView OnSetGraphView() Called after graph view setup Declaration protected virtual void OnSetGraphView() OnSetNodeInstanceType() Called after node setup or change node instance type Declaration protected virtual void OnSetNodeInstanceType() OnSetupNodeElement() Called in graph view initialize node style stage Declaration protected virtual void OnSetupNodeElement() ReconnectEdges() Reconnect edge from current metadata Declaration public void ReconnectEdges() RemovePortView(CeresPortView) Declaration public virtual void RemovePortView(CeresPortView portView) Parameters Type Name Description CeresPortView portView SetGraphOwner(CeresGraphView) Set node view's GraphView Declaration public void SetGraphOwner(CeresGraphView graphView) Parameters Type Name Description CeresGraphView graphView SetNodeInstance(CeresNode) Set node instance attached to this view and restore all properties Declaration public virtual void SetNodeInstance(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode SetNodeInstanceType(Type) Set node view's NodeType Declaration public void SetNodeInstanceType(Type nodeType) Parameters Type Name Description System.Type nodeType SetupNodeElement(NodeElement) Set node element of this view Declaration public void SetupNodeElement(NodeElement nodeElement) Parameters Type Name Description NodeElement nodeElement Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.CeresNodeViewExtensions.html": {
    "href": "api/Ceres.Editor.Graph.CeresNodeViewExtensions.html",
    "title": "Class CeresNodeViewExtensions | Ceres Documentation",
    "keywords": "Class CeresNodeViewExtensions Inheritance object CeresNodeViewExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public static class CeresNodeViewExtensions Methods CreateSettingsView<TSettingsView>(ICeresNodeView) Declaration public static TSettingsView CreateSettingsView<TSettingsView>(this ICeresNodeView nodeView) where TSettingsView : NodeSettingsView, new() Parameters Type Name Description ICeresNodeView nodeView Returns Type Description TSettingsView Type Parameters Name Description TSettingsView"
  },
  "api/Ceres.Editor.Graph.CeresPortElement.html": {
    "href": "api/Ceres.Editor.Graph.CeresPortElement.html",
    "title": "Class CeresPortElement | Ceres Documentation",
    "keywords": "Class CeresPortElement Inheritance object CeresPortElement Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CeresPortElement : Port Properties EditorField Declaration public VisualElement EditorField { get; } Property Value Type Description VisualElement View Declaration public CeresPortView View { get; } Property Value Type Description CeresPortView Methods BuildContextualMenu(ContextualMenuPopulateEvent) Declaration protected virtual void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt CanConnect(CeresPortElement) Whether this can connect other port with value compatible validation Declaration public bool CanConnect(CeresPortElement other) Parameters Type Name Description CeresPortElement other Returns Type Description bool Connect(Edge) Declaration public override void Connect(Edge edge) Parameters Type Name Description Edge edge Create(CeresPortView) Declaration public static CeresPortElement Create(CeresPortView ownerView) Parameters Type Name Description CeresPortView ownerView Returns Type Description CeresPortElement CreatePortTooltip(Type) Declaration public string CreatePortTooltip(Type valueType) Parameters Type Name Description System.Type valueType Returns Type Description string Disconnect(Edge) Declaration public override void Disconnect(Edge edge) Parameters Type Name Description Edge edge GetEditorFieldVisibility() Declaration public bool GetEditorFieldVisibility() Returns Type Description bool IsCompatibleTo(CeresPortElement) Whether this port's value is compatible to other port's value Declaration public bool IsCompatibleTo(CeresPortElement other) Parameters Type Name Description CeresPortElement other Returns Type Description bool IsConnectable() Whether this can connect other ports Declaration public bool IsConnectable() Returns Type Description bool SetEditorFieldVisibility(bool) Declaration public void SetEditorFieldVisibility(bool isVisible) Parameters Type Name Description bool isVisible"
  },
  "api/Ceres.Editor.Graph.CeresPortView.html": {
    "href": "api/Ceres.Editor.Graph.CeresPortView.html",
    "title": "Class CeresPortView | Ceres Documentation",
    "keywords": "Class CeresPortView Port view for CeresNodeView Inheritance object CeresPortView Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CeresPortView Constructors CeresPortView(CeresPortViewBinding, CeresNodeView, CeresPortData) Declaration public CeresPortView(CeresPortViewBinding binding, CeresNodeView nodeView, CeresPortData portData) Parameters Type Name Description CeresPortViewBinding binding CeresNodeView nodeView CeresPortData portData Properties Binding Declaration public CeresPortViewBinding Binding { get; } Property Value Type Description CeresPortViewBinding FieldResolver Declaration public IFieldResolver FieldResolver { get; } Property Value Type Description IFieldResolver Flags Declaration public CeresPortViewFlags Flags { get; } Property Value Type Description CeresPortViewFlags NodeOwner Declaration public CeresNodeView NodeOwner { get; } Property Value Type Description CeresNodeView PortData Declaration public CeresPortData PortData { get; } Property Value Type Description CeresPortData PortElement Declaration public CeresPortElement PortElement { get; } Property Value Type Description CeresPortElement Methods Commit(CeresNode) Link all ports to CeresNode instance Declaration public void Commit(CeresNode nodeInstance) Parameters Type Name Description CeresNode nodeInstance Connect() Connect port element based on current CeresPortData Declaration public void Connect() Restore(CeresNode, CeresPortData) Declaration public void Restore(CeresNode nodeInstance, CeresPortData portData) Parameters Type Name Description CeresNode nodeInstance CeresPortData portData SetDisplayDataFromParameterInfo(ParameterInfo) Set display name and default value from Declaration public void SetDisplayDataFromParameterInfo(ParameterInfo parameterInfo) Parameters Type Name Description ParameterInfo parameterInfo SetDisplayName(string) Declaration public void SetDisplayName(string displayName) Parameters Type Name Description string displayName SetDisplayType(Type) Declaration public void SetDisplayType(Type displayType) Parameters Type Name Description System.Type displayType SetTooltip(string) Declaration public void SetTooltip(string tooltip) Parameters Type Name Description string tooltip"
  },
  "api/Ceres.Editor.Graph.CeresPortViewBinding.html": {
    "href": "api/Ceres.Editor.Graph.CeresPortViewBinding.html",
    "title": "Class CeresPortViewBinding | Ceres Documentation",
    "keywords": "Class CeresPortViewBinding Inheritance object CeresPortViewBinding Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CeresPortViewBinding Constructors CeresPortViewBinding(string, Type) Declaration public CeresPortViewBinding(string defaultDisplayName, Type defaultDisplayType) Parameters Type Name Description string defaultDisplayName System.Type defaultDisplayType Properties BindingType Declaration public CeresPortViewBinding.PortBindingType BindingType { get; } Property Value Type Description CeresPortViewBinding.PortBindingType CeresPortType Declaration public Type CeresPortType { get; } Property Value Type Description System.Type DisplayName Declaration public ReactiveProperty<string> DisplayName { get; } Property Value Type Description ReactiveProperty<><string> DisplayType Declaration public ReactiveProperty<Type> DisplayType { get; } Property Value Type Description ReactiveProperty<><System.Type> PortFieldInfo Declaration public FieldInfo PortFieldInfo { get; } Property Value Type Description FieldInfo ResolvedFieldInfo Declaration public FieldInfo ResolvedFieldInfo { get; } Property Value Type Description FieldInfo ResolvedParameterInfo Declaration public ParameterInfo ResolvedParameterInfo { get; } Property Value Type Description ParameterInfo Tooltip Declaration public ReactiveProperty<string> Tooltip { get; } Property Value Type Description ReactiveProperty<><string> Methods AlwaysConnected() Declaration public bool AlwaysConnected() Returns Type Description bool BindField(CeresPortData, FieldInfo) Declaration public static CeresPortViewBinding BindField(CeresPortData portData, FieldInfo portFieldInfo) Parameters Type Name Description CeresPortData portData FieldInfo portFieldInfo Returns Type Description CeresPortViewBinding BindParameter(CeresPortData, FieldInfo, ParameterInfo) Declaration public static CeresPortViewBinding BindParameter(CeresPortData portData, FieldInfo portFieldInfo, ParameterInfo parameterInfo) Parameters Type Name Description CeresPortData portData FieldInfo portFieldInfo ParameterInfo parameterInfo Returns Type Description CeresPortViewBinding BindView(CeresPortElement) Declaration public void BindView(CeresPortElement portElement) Parameters Type Name Description CeresPortElement portElement GetCapacity() Declaration public Port.Capacity GetCapacity() Returns Type Description Port.Capacity GetDirection() Declaration public Direction GetDirection() Returns Type Description Direction GetPortName() Declaration public string GetPortName() Returns Type Description string GetPortType() Declaration public Type GetPortType() Returns Type Description System.Type GetPortValueField() Declaration public FieldInfo GetPortValueField() Returns Type Description FieldInfo GetValue(CeresNode) Declaration public object GetValue(CeresNode nodeInstance) Parameters Type Name Description CeresNode nodeInstance Returns Type Description object IsCompatibleTo(Type) Declaration public bool IsCompatibleTo(Type type) Parameters Type Name Description System.Type type Returns Type Description bool IsHideInGraphEditor() Declaration public bool IsHideInGraphEditor() Returns Type Description bool IsRemappedFieldPort() Declaration public bool IsRemappedFieldPort() Returns Type Description bool RedirectField(CeresPortData, FieldInfo, FieldInfo) Declaration public static CeresPortViewBinding RedirectField(CeresPortData portData, FieldInfo portFieldInfo, FieldInfo resolvedFieldInfo) Parameters Type Name Description CeresPortData portData FieldInfo portFieldInfo FieldInfo resolvedFieldInfo Returns Type Description CeresPortViewBinding SetValue(CeresNode, CeresPort) Declaration public void SetValue(CeresNode nodeInstance, CeresPort portInstance) Parameters Type Name Description CeresNode nodeInstance CeresPort portInstance"
  },
  "api/Ceres.Editor.Graph.CeresPortViewBinding.PortBindingType.html": {
    "href": "api/Ceres.Editor.Graph.CeresPortViewBinding.PortBindingType.html",
    "title": "Enum CeresPortViewBinding.PortBindingType | Ceres Documentation",
    "keywords": "Enum CeresPortViewBinding.PortBindingType Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public enum CeresPortViewBinding.PortBindingType Fields Name Description Field Parameter"
  },
  "api/Ceres.Editor.Graph.CeresPortViewFlags.html": {
    "href": "api/Ceres.Editor.Graph.CeresPortViewFlags.html",
    "title": "Enum CeresPortViewFlags | Ceres Documentation",
    "keywords": "Enum CeresPortViewFlags Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax [Flags] public enum CeresPortViewFlags Fields Name Description None ValidateConnection Whether port's connection should be validated"
  },
  "api/Ceres.Editor.Graph.ColorResolver.html": {
    "href": "api/Ceres.Editor.Graph.ColorResolver.html",
    "title": "Class ColorResolver | Ceres Documentation",
    "keywords": "Class ColorResolver Inheritance object FieldResolver<ColorField, Color> ColorResolver Implements IFieldResolver Inherited Members FieldResolver<ColorField, Color>.EditorField FieldResolver<ColorField, Color>.BaseField FieldResolver<ColorField, Color>.Value FieldResolver<ColorField, Color>.CreateField() FieldResolver<ColorField, Color>.Copy(IFieldResolver) FieldResolver<ColorField, Color>.Restore(object) FieldResolver<ColorField, Color>.Commit(object) FieldResolver<ColorField, Color>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<ColorField, Color>.IsAcceptable(Type, FieldInfo) FieldResolver<ColorField, Color>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class ColorResolver : FieldResolver<ColorField, Color>, IFieldResolver Constructors ColorResolver(FieldInfo) Declaration public ColorResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override ColorField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description ColorField Overrides Ceres.Editor.Graph.FieldResolver<ColorField, Color>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<ColorField, Color>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.ContextualMenuBuilder.html": {
    "href": "api/Ceres.Editor.Graph.ContextualMenuBuilder.html",
    "title": "Class ContextualMenuBuilder | Ceres Documentation",
    "keywords": "Class ContextualMenuBuilder Inheritance object ContextualMenuBuilder Implements IContextualMenuBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class ContextualMenuBuilder : IContextualMenuBuilder Constructors ContextualMenuBuilder(ContextualMenuType, Func<Type, bool>, Action<ContextualMenuPopulateEvent>) Declaration public ContextualMenuBuilder(ContextualMenuType contextualMenuType, Func<Type, bool> canBuildFunc, Action<ContextualMenuPopulateEvent> onBuildContextualMenu) Parameters Type Name Description ContextualMenuType contextualMenuType System.Func<T, TResult><System.Type, bool> canBuildFunc System.Action<T><ContextualMenuPopulateEvent> onBuildContextualMenu Properties MenuType Declaration public ContextualMenuType MenuType { get; } Property Value Type Description ContextualMenuType Methods BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt CanBuild(Type) Declaration public bool CanBuild(Type hostType) Parameters Type Name Description System.Type hostType Returns Type Description bool Implements IContextualMenuBuilder"
  },
  "api/Ceres.Editor.Graph.ContextualMenuRegistry.html": {
    "href": "api/Ceres.Editor.Graph.ContextualMenuRegistry.html",
    "title": "Class ContextualMenuRegistry | Ceres Documentation",
    "keywords": "Class ContextualMenuRegistry Inheritance object ContextualMenuRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class ContextualMenuRegistry Methods BuildContextualMenu(ContextualMenuType, ContextualMenuPopulateEvent, Type) Declaration public void BuildContextualMenu(ContextualMenuType menuType, ContextualMenuPopulateEvent evt, Type constraintType = null) Parameters Type Name Description ContextualMenuType menuType ContextualMenuPopulateEvent evt System.Type constraintType Register(Type, IContextualMenuBuilder) Declaration public void Register(Type type, IContextualMenuBuilder builder) Parameters Type Name Description System.Type type IContextualMenuBuilder builder Register<T>(IContextualMenuBuilder) Declaration public void Register<T>(IContextualMenuBuilder builder) Parameters Type Name Description IContextualMenuBuilder builder Type Parameters Name Description T UnRegister(Type) Declaration public void UnRegister(Type nodeType) Parameters Type Name Description System.Type nodeType UnRegister<T>() Declaration public void UnRegister<T>() Type Parameters Name Description T"
  },
  "api/Ceres.Editor.Graph.ContextualMenuType.html": {
    "href": "api/Ceres.Editor.Graph.ContextualMenuType.html",
    "title": "Enum ContextualMenuType | Ceres Documentation",
    "keywords": "Enum ContextualMenuType Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public enum ContextualMenuType Fields Name Description Graph Node Port"
  },
  "api/Ceres.Editor.Graph.CurveResolver.html": {
    "href": "api/Ceres.Editor.Graph.CurveResolver.html",
    "title": "Class CurveResolver | Ceres Documentation",
    "keywords": "Class CurveResolver Inheritance object FieldResolver<CurveField, AnimationCurve> CurveResolver Implements IFieldResolver Inherited Members FieldResolver<CurveField, AnimationCurve>.EditorField FieldResolver<CurveField, AnimationCurve>.BaseField FieldResolver<CurveField, AnimationCurve>.Value FieldResolver<CurveField, AnimationCurve>.CreateField() FieldResolver<CurveField, AnimationCurve>.Copy(IFieldResolver) FieldResolver<CurveField, AnimationCurve>.Restore(object) FieldResolver<CurveField, AnimationCurve>.Commit(object) FieldResolver<CurveField, AnimationCurve>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<CurveField, AnimationCurve>.IsAcceptable(Type, FieldInfo) FieldResolver<CurveField, AnimationCurve>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class CurveResolver : FieldResolver<CurveField, AnimationCurve>, IFieldResolver Constructors CurveResolver(FieldInfo) Declaration public CurveResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override CurveField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description CurveField Overrides Ceres.Editor.Graph.FieldResolver<CurveField, AnimationCurve>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<CurveField, AnimationCurve>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.DoubleResolver.html": {
    "href": "api/Ceres.Editor.Graph.DoubleResolver.html",
    "title": "Class DoubleResolver | Ceres Documentation",
    "keywords": "Class DoubleResolver Inheritance object FieldResolver<DoubleField, double> DoubleResolver Implements IFieldResolver Inherited Members FieldResolver<DoubleField, double>.EditorField FieldResolver<DoubleField, double>.BaseField FieldResolver<DoubleField, double>.Value FieldResolver<DoubleField, double>.CreateField() FieldResolver<DoubleField, double>.Copy(IFieldResolver) FieldResolver<DoubleField, double>.Restore(object) FieldResolver<DoubleField, double>.Commit(object) FieldResolver<DoubleField, double>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<DoubleField, double>.IsAcceptable(Type, FieldInfo) FieldResolver<DoubleField, double>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class DoubleResolver : FieldResolver<DoubleField, double>, IFieldResolver Constructors DoubleResolver(FieldInfo) Declaration public DoubleResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override DoubleField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description DoubleField Overrides Ceres.Editor.Graph.FieldResolver<DoubleField, double>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<DoubleField, double>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.DragDropManipulator.html": {
    "href": "api/Ceres.Editor.Graph.DragDropManipulator.html",
    "title": "Class DragDropManipulator | Ceres Documentation",
    "keywords": "Class DragDropManipulator Inheritance object DragDropManipulator Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class DragDropManipulator : PointerManipulator Constructors DragDropManipulator(GraphView, Action<object, Vector3>, Action<List<ISelectable>, GraphElement, Vector3>) Declaration public DragDropManipulator(GraphView root, Action<object, Vector3> onDragObjectPerformEvent, Action<List<ISelectable>, GraphElement, Vector3> dragElementPerformEvent) Parameters Type Name Description GraphView root System.Action<T1, T2><object, Vector3> onDragObjectPerformEvent System.Action<T1, T2, T3><System.Collections.Generic.List<T><ISelectable>, GraphElement, Vector3> dragElementPerformEvent Methods RegisterCallbacksOnTarget() Declaration protected override void RegisterCallbacksOnTarget() UnregisterCallbacksFromTarget() Declaration protected override void UnregisterCallbacksFromTarget()"
  },
  "api/Ceres.Editor.Graph.EnumField.html": {
    "href": "api/Ceres.Editor.Graph.EnumField.html",
    "title": "Class EnumField | Ceres Documentation",
    "keywords": "Class EnumField Inheritance object EnumField Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class EnumField : PopupField<Enum> Constructors EnumField(string, List<Enum>, Enum) Declaration public EnumField(string label, List<Enum> choices, Enum defaultValue = null) Parameters Type Name Description string label System.Collections.Generic.List<T><System.Enum> choices System.Enum defaultValue"
  },
  "api/Ceres.Editor.Graph.EnumListField-1.html": {
    "href": "api/Ceres.Editor.Graph.EnumListField-1.html",
    "title": "Class EnumListField<T> | Ceres Documentation",
    "keywords": "Class EnumListField<T> Inheritance object ListField<T> EnumListField<T> Inherited Members ListField<T>.ElementCreator ListField<T>.GetListItemHeight() ListField<T>.OnMakeListItem() ListField<T>.OnRequestAddListItem() ListField<T>.value Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class EnumListField<T> : ListField<T> where T : Enum Type Parameters Name Description T Constructors EnumListField(string, Func<VisualElement>, Func<object>) Declaration public EnumListField(string label, Func<VisualElement> elementCreator, Func<object> valueCreator) Parameters Type Name Description string label System.Func<TResult><VisualElement> elementCreator System.Func<TResult><object> valueCreator Methods OnBindListItem(VisualElement, int) Declaration protected override void OnBindListItem(VisualElement e, int i) Parameters Type Name Description VisualElement e int i Overrides Ceres.Editor.Graph.ListField<T>.OnBindListItem(VisualElement, int)"
  },
  "api/Ceres.Editor.Graph.EnumListResolver-1.html": {
    "href": "api/Ceres.Editor.Graph.EnumListResolver-1.html",
    "title": "Class EnumListResolver<T> | Ceres Documentation",
    "keywords": "Class EnumListResolver<T> Inheritance object FieldResolver<ListField<T>, System.Collections.Generic.List<T><T>> FieldResolver<ListField<T>, System.Collections.Generic.List<T><T>, IList<T>> ListResolver<T> EnumListResolver<T> Implements IFieldResolver Inherited Members ListResolver<T>.ChildResolver FieldResolver<ListField<T>, List<T>, IList<T>>.Value FieldResolver<ListField<T>, List<T>, IList<T>>.ValueSetter FieldResolver<ListField<T>, List<T>, IList<T>>.ValueGetter FieldResolver<ListField<T>, List<T>>.EditorField FieldResolver<ListField<T>, List<T>>.BaseField FieldResolver<ListField<T>, List<T>>.Value FieldResolver<ListField<T>, List<T>>.CreateField() FieldResolver<ListField<T>, List<T>>.Copy(IFieldResolver) FieldResolver<ListField<T>, List<T>>.Restore(object) FieldResolver<ListField<T>, List<T>>.Commit(object) FieldResolver<ListField<T>, List<T>>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<ListField<T>, List<T>>.IsAcceptable(Type, FieldInfo) FieldResolver<ListField<T>, List<T>>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class EnumListResolver<T> : ListResolver<T>, IFieldResolver where T : Enum Type Parameters Name Description T Constructors EnumListResolver(FieldInfo) Declaration public EnumListResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override ListField<T> CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description ListField<T> Overrides Ceres.Editor.Graph.ListResolver<T>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo _) Parameters Type Name Description System.Type fieldValueType FieldInfo _ Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.ListField<T>, System.Collections.Generic.List<T>>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.EnumResolver.html": {
    "href": "api/Ceres.Editor.Graph.EnumResolver.html",
    "title": "Class EnumResolver | Ceres Documentation",
    "keywords": "Class EnumResolver Inheritance object FieldResolver<EnumField, System.Enum> EnumResolver Implements IFieldResolver Inherited Members FieldResolver<EnumField, Enum>.EditorField FieldResolver<EnumField, Enum>.BaseField FieldResolver<EnumField, Enum>.Value FieldResolver<EnumField, Enum>.CreateField() FieldResolver<EnumField, Enum>.Copy(IFieldResolver) FieldResolver<EnumField, Enum>.Restore(object) FieldResolver<EnumField, Enum>.Commit(object) FieldResolver<EnumField, Enum>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<EnumField, Enum>.IsAcceptable(Type, FieldInfo) FieldResolver<EnumField, Enum>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class EnumResolver : FieldResolver<EnumField, Enum>, IFieldResolver Constructors EnumResolver(FieldInfo) Declaration public EnumResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override EnumField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description EnumField Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.EnumField, System.Enum>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.EnumField, System.Enum>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.FieldResolver-2.html": {
    "href": "api/Ceres.Editor.Graph.FieldResolver-2.html",
    "title": "Class FieldResolver<TField, TKValue> | Ceres Documentation",
    "keywords": "Class FieldResolver<TField, TKValue> Inheritance object FieldResolver<TField, TKValue> BoolResolver BoundsIntResolver BoundsResolver ColorResolver CurveResolver DoubleResolver EnumResolver FieldResolver<TField, TKValue, TFInterface> FloatResolver GradientResolver IntResolver LayerMaskResolver LayerResolver LongResolver ObjectResolver RectIntResolver RectResolver SerializedObjectFieldResolver SharedObjectResolver SharedTObjectResolver<T> SharedVariableResolver<TVariable, TValue, TField> StringResolver TagResolver Vector2IntResolver Vector2Resolver Vector3IntResolver Vector3Resolver Vector4Resolver WrapFieldResolver<T> Implements IFieldResolver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public abstract class FieldResolver<TField, TKValue> : IFieldResolver where TField : BaseField<TKValue> Type Parameters Name Description TField TKValue Constructors FieldResolver(FieldInfo) Declaration protected FieldResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Properties BaseField Declaration public TField BaseField { get; } Property Value Type Description TField EditorField Declaration public VisualElement EditorField { get; } Property Value Type Description VisualElement Value Declaration public virtual object Value { get; set; } Property Value Type Description object Methods Commit(object) Declaration public void Commit(object @object) Parameters Type Name Description object object Copy(IFieldResolver) Declaration public void Copy(IFieldResolver resolver) Parameters Type Name Description IFieldResolver resolver CreateEditorField(FieldInfo) Create Declaration protected abstract TField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description TField CreateField() Declaration public VisualElement CreateField() Returns Type Description VisualElement IsAcceptable(Type, FieldInfo) Declaration public virtual bool IsAcceptable(Type fieldValueType, FieldInfo fieldInfo) Parameters Type Name Description System.Type fieldValueType FieldInfo fieldInfo Returns Type Description bool RegisterValueChangeCallback(ValueChangeDelegate) Declaration public void RegisterValueChangeCallback(ValueChangeDelegate fieldChangeCallback) Parameters Type Name Description ValueChangeDelegate fieldChangeCallback Restore(object) Declaration public void Restore(object @object) Parameters Type Name Description object object Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.FieldResolver-3.html": {
    "href": "api/Ceres.Editor.Graph.FieldResolver-3.html",
    "title": "Class FieldResolver<TField, TKValue, TFInterface> | Ceres Documentation",
    "keywords": "Class FieldResolver<TField, TKValue, TFInterface> Inheritance object FieldResolver<TField, TKValue> FieldResolver<TField, TKValue, TFInterface> ListResolver<T> Implements IFieldResolver Inherited Members FieldResolver<TField, TKValue>.EditorField FieldResolver<TField, TKValue>.BaseField FieldResolver<TField, TKValue>.Value FieldResolver<TField, TKValue>.CreateField() FieldResolver<TField, TKValue>.Copy(IFieldResolver) FieldResolver<TField, TKValue>.Restore(object) FieldResolver<TField, TKValue>.Commit(object) FieldResolver<TField, TKValue>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<TField, TKValue>.IsAcceptable(Type, FieldInfo) FieldResolver<TField, TKValue>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public abstract class FieldResolver<TField, TKValue, TFInterface> : FieldResolver<TField, TKValue>, IFieldResolver where TField : BaseField<TKValue> where TKValue : TFInterface Type Parameters Name Description TField TKValue TFInterface Constructors FieldResolver(FieldInfo) Declaration protected FieldResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Properties Value Declaration public override sealed object Value { get; set; } Property Value Type Description object Overrides Ceres.Editor.Graph.FieldResolver<TField, TKValue>.Value ValueGetter Bridge for setting value from to Declaration protected Func<TKValue, object> ValueGetter { get; set; } Property Value Type Description System.Func<T, TResult><TKValue, object> ValueSetter Bridge for setting value from to Declaration protected Func<TFInterface, TKValue> ValueSetter { get; set; } Property Value Type Description System.Func<T, TResult><TFInterface, TKValue> Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.FieldResolverExtensions.html": {
    "href": "api/Ceres.Editor.Graph.FieldResolverExtensions.html",
    "title": "Class FieldResolverExtensions | Ceres Documentation",
    "keywords": "Class FieldResolverExtensions Inheritance object FieldResolverExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public static class FieldResolverExtensions Methods GetField(IFieldResolver, CeresGraphView) Get EditorField and try bind the graph view Declaration public static VisualElement GetField(this IFieldResolver fieldResolver, CeresGraphView ceresGraphView) Parameters Type Name Description IFieldResolver fieldResolver CeresGraphView ceresGraphView Returns Type Description VisualElement"
  },
  "api/Ceres.Editor.Graph.FieldResolverFactory.html": {
    "href": "api/Ceres.Editor.Graph.FieldResolverFactory.html",
    "title": "Class FieldResolverFactory | Ceres Documentation",
    "keywords": "Class FieldResolverFactory Inheritance object FieldResolverFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class FieldResolverFactory Properties InlineIMGUI Declaration public static bool InlineIMGUI { get; } Property Value Type Description bool Methods Create(FieldInfo) Declaration public IFieldResolver Create(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description IFieldResolver Create(Type, FieldInfo) Declaration public IFieldResolver Create(Type fieldType, FieldInfo fieldInfo = null) Parameters Type Name Description System.Type fieldType FieldInfo fieldInfo Returns Type Description IFieldResolver Get() Declaration public static FieldResolverFactory Get() Returns Type Description FieldResolverFactory InlineIMGUIAuto(bool) Declaration public static FieldResolverFactory.InlineIMGUIAutoScope InlineIMGUIAuto(bool isInline) Parameters Type Name Description bool isInline Returns Type Description FieldResolverFactory.InlineIMGUIAutoScope"
  },
  "api/Ceres.Editor.Graph.FieldResolverFactory.InlineIMGUIAutoScope.html": {
    "href": "api/Ceres.Editor.Graph.FieldResolverFactory.InlineIMGUIAutoScope.html",
    "title": "Struct FieldResolverFactory.InlineIMGUIAutoScope | Ceres Documentation",
    "keywords": "Struct FieldResolverFactory.InlineIMGUIAutoScope Implements System.IDisposable Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public readonly struct FieldResolverFactory.InlineIMGUIAutoScope : IDisposable Constructors InlineIMGUIAutoScope(bool) Declaration public InlineIMGUIAutoScope(bool isInline) Parameters Type Name Description bool isInline Methods Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/Ceres.Editor.Graph.FloatResolver.html": {
    "href": "api/Ceres.Editor.Graph.FloatResolver.html",
    "title": "Class FloatResolver | Ceres Documentation",
    "keywords": "Class FloatResolver Inheritance object FieldResolver<FloatField, float> FloatResolver Implements IFieldResolver Inherited Members FieldResolver<FloatField, float>.EditorField FieldResolver<FloatField, float>.BaseField FieldResolver<FloatField, float>.Value FieldResolver<FloatField, float>.CreateField() FieldResolver<FloatField, float>.Copy(IFieldResolver) FieldResolver<FloatField, float>.Restore(object) FieldResolver<FloatField, float>.Commit(object) FieldResolver<FloatField, float>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<FloatField, float>.IsAcceptable(Type, FieldInfo) FieldResolver<FloatField, float>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class FloatResolver : FieldResolver<FloatField, float>, IFieldResolver Constructors FloatResolver(FieldInfo) Declaration public FloatResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override FloatField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description FloatField Overrides Ceres.Editor.Graph.FieldResolver<FloatField, float>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<FloatField, float>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.Flow.CustomExecutionEventNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.CustomExecutionEventNodeView.html",
    "title": "Class CustomExecutionEventNodeView | Ceres Documentation",
    "keywords": "Class CustomExecutionEventNodeView Inheritance object CeresNodeView ExecutableNodeView ExecutionEventBaseNodeView CustomExecutionEventNodeView Implements ICeresNodeView Inherited Members ExecutionEventBaseNodeView.MethodInfo ExecutionEventBaseNodeView.IsImplementable ExecutionEventBaseNodeView.MethodName ExecutionEventBaseNodeView.SetNodeInstance(CeresNode) ExecutionEventBaseNodeView.SetMethodInfo(MethodInfo) ExecutionEventBaseNodeView.GetEventName() ExecutionEventBaseNodeView.SetEventName(string) ExecutionEventBaseNodeView.AddPortView(CeresPortView) ExecutionEventBaseNodeView.CompileNode() ExecutionEventBaseNodeView.FillMethodParameterPorts(MethodInfo) ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(CustomExecutionEvent), true)] public class CustomExecutionEventNodeView : ExecutionEventBaseNodeView, ICeresNodeView Constructors CustomExecutionEventNodeView(Type, CeresGraphView) Declaration public CustomExecutionEventNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods CanRename() Declaration protected override bool CanRename() Returns Type Description bool Overrides ExecutionEventBaseNodeView.CanRename() UpdateEventTitle() Declaration protected override void UpdateEventTitle() Overrides ExecutionEventBaseNodeView.UpdateEventTitle() Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionInputNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionInputNodeView.html",
    "title": "Class CustomFunctionInputNodeView | Ceres Documentation",
    "keywords": "Class CustomFunctionInputNodeView Inheritance object CeresNodeView ExecutableNodeView CustomFunctionInputNodeView Implements ICeresNodeView Inherited Members ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(CustomFunctionInput))] public class CustomFunctionInputNodeView : ExecutableNodeView, ICeresNodeView Constructors CustomFunctionInputNodeView(Type, CeresGraphView) Declaration public CustomFunctionInputNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods CompileNode() Declaration public override ExecutableNode CompileNode() Returns Type Description ExecutableNode Overrides ExecutableNodeView.CompileNode() SetNodeInstance(CeresNode) Declaration public override void SetNodeInstance(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode Overrides CeresNodeView.SetNodeInstance(CeresNode) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionInputParameterView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionInputParameterView.html",
    "title": "Class CustomFunctionInputParameterView | Ceres Documentation",
    "keywords": "Class CustomFunctionInputParameterView Inheritance object CustomFunctionParameterView CustomFunctionInputParameterView Inherited Members CustomFunctionParameterView.Parameter CustomFunctionParameterView.NotifyValueChange() Namespace: Ceres.Editor.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax public class CustomFunctionInputParameterView : CustomFunctionParameterView Constructors CustomFunctionInputParameterView() Declaration public CustomFunctionInputParameterView() Methods BindParameter(int, CustomFunctionParameter) Declaration public void BindParameter(int index, CustomFunctionParameter inputParameter) Parameters Type Name Description int index CustomFunctionParameter inputParameter UpdateView() Declaration public override void UpdateView() Overrides CustomFunctionParameterView.UpdateView()"
  },
  "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionInputSettingsView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionInputSettingsView.html",
    "title": "Class CustomFunctionInputSettingsView | Ceres Documentation",
    "keywords": "Class CustomFunctionInputSettingsView Inheritance object NodeSettingsView CustomFunctionInputSettingsView Inherited Members NodeSettingsView.NodeView NodeSettingsView.SettingsElement NodeSettingsView.OnAttach() NodeSettingsView.DisableSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax public class CustomFunctionInputSettingsView : NodeSettingsView Constructors CustomFunctionInputSettingsView() Declaration public CustomFunctionInputSettingsView() Fields OnListElementChange Declaration public Action OnListElementChange Field Value Type Description System.Action Properties Parameters Declaration public List<CustomFunctionInputParameter> Parameters { get; } Property Value Type Description System.Collections.Generic.List<T><CustomFunctionInputParameter> Methods RefreshListViewItems() Declaration public void RefreshListViewItems()"
  },
  "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionOutputNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionOutputNodeView.html",
    "title": "Class CustomFunctionOutputNodeView | Ceres Documentation",
    "keywords": "Class CustomFunctionOutputNodeView Inheritance object CeresNodeView ExecutableNodeView CustomFunctionOutputNodeView Implements ICeresNodeView Inherited Members ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(CustomFunctionOutput))] public class CustomFunctionOutputNodeView : ExecutableNodeView, ICeresNodeView Constructors CustomFunctionOutputNodeView(Type, CeresGraphView) Declaration public CustomFunctionOutputNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods CompileNode() Declaration public override ExecutableNode CompileNode() Returns Type Description ExecutableNode Overrides ExecutableNodeView.CompileNode() SetNodeInstance(CeresNode) Declaration public override void SetNodeInstance(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode Overrides CeresNodeView.SetNodeInstance(CeresNode) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionOutputParameterView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionOutputParameterView.html",
    "title": "Class CustomFunctionOutputParameterView | Ceres Documentation",
    "keywords": "Class CustomFunctionOutputParameterView Inheritance object CustomFunctionParameterView CustomFunctionOutputParameterView Inherited Members CustomFunctionParameterView.Parameter CustomFunctionParameterView.NotifyValueChange() Namespace: Ceres.Editor.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax public class CustomFunctionOutputParameterView : CustomFunctionParameterView Constructors CustomFunctionOutputParameterView() Declaration public CustomFunctionOutputParameterView() Methods BindParameter(CustomFunctionOutputParameter) Declaration public void BindParameter(CustomFunctionOutputParameter outputParameter) Parameters Type Name Description CustomFunctionOutputParameter outputParameter UpdateView() Declaration public override void UpdateView() Overrides CustomFunctionParameterView.UpdateView()"
  },
  "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionOutputSettingsView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionOutputSettingsView.html",
    "title": "Class CustomFunctionOutputSettingsView | Ceres Documentation",
    "keywords": "Class CustomFunctionOutputSettingsView Inheritance object NodeSettingsView CustomFunctionOutputSettingsView Inherited Members NodeSettingsView.NodeView NodeSettingsView.SettingsElement NodeSettingsView.OnAttach() NodeSettingsView.DisableSettings() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax public class CustomFunctionOutputSettingsView : NodeSettingsView Constructors CustomFunctionOutputSettingsView() Declaration public CustomFunctionOutputSettingsView() Fields OnSettingsChange Declaration public Action OnSettingsChange Field Value Type Description System.Action Properties Parameter Declaration public CustomFunctionOutputParameter Parameter { get; } Property Value Type Description CustomFunctionOutputParameter Methods SetParameter(CustomFunctionOutputParameter) Declaration public void SetParameter(CustomFunctionOutputParameter parameter) Parameters Type Name Description CustomFunctionOutputParameter parameter"
  },
  "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionParameterView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.CustomFunctions.CustomFunctionParameterView.html",
    "title": "Class CustomFunctionParameterView | Ceres Documentation",
    "keywords": "Class CustomFunctionParameterView Inheritance object CustomFunctionParameterView CustomFunctionInputParameterView CustomFunctionOutputParameterView Namespace: Ceres.Editor.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax public class CustomFunctionParameterView : VisualElement Constructors CustomFunctionParameterView() Declaration protected CustomFunctionParameterView() Properties Parameter Declaration protected CustomFunctionParameter Parameter { get; set; } Property Value Type Description CustomFunctionParameter Methods NotifyValueChange() Declaration protected void NotifyValueChange() UpdateView() Update parameter view Declaration public virtual void UpdateView()"
  },
  "api/Ceres.Editor.Graph.Flow.CustomFunctions.ExecuteCustomFunctionNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.CustomFunctions.ExecuteCustomFunctionNodeView.html",
    "title": "Class ExecuteCustomFunctionNodeView | Ceres Documentation",
    "keywords": "Class ExecuteCustomFunctionNodeView Inheritance object CeresNodeView ExecutableNodeView ExecuteCustomFunctionNodeView Implements ICeresNodeView Inherited Members ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(FlowNode_ExecuteCustomFunction), true)] public sealed class ExecuteCustomFunctionNodeView : ExecutableNodeView, ICeresNodeView Constructors ExecuteCustomFunctionNodeView(Type, CeresGraphView) Declaration public ExecuteCustomFunctionNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt Overrides ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) CompileNode() Declaration public override ExecutableNode CompileNode() Returns Type Description ExecutableNode Overrides ExecutableNodeView.CompileNode() SetFlowGraphFunction(FlowGraphFunction) Declaration public void SetFlowGraphFunction(FlowGraphFunction flowGraphFunction) Parameters Type Name Description FlowGraphFunction flowGraphFunction SetLocalFunction(string) Declaration public void SetLocalFunction(string localFunctionName) Parameters Type Name Description string localFunctionName SetNodeInstance(CeresNode) Declaration public override void SetNodeInstance(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode Overrides CeresNodeView.SetNodeInstance(CeresNode) Validate(FlowGraphValidator) Declaration public override void Validate(FlowGraphValidator validator) Parameters Type Name Description FlowGraphValidator validator Overrides ExecutableNodeView.Validate(FlowGraphValidator) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.CustomFunctions.html": {
    "href": "api/Ceres.Editor.Graph.Flow.CustomFunctions.html",
    "title": "Namespace Ceres.Editor.Graph.Flow.CustomFunctions | Ceres Documentation",
    "keywords": "Namespace Ceres.Editor.Graph.Flow.CustomFunctions Classes CustomFunctionInputNodeView CustomFunctionInputParameterView CustomFunctionInputSettingsView CustomFunctionOutputNodeView CustomFunctionOutputParameterView CustomFunctionOutputSettingsView CustomFunctionParameterView ExecuteCustomFunctionNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.DelegateEventNodeViewFactoryProxy.html": {
    "href": "api/Ceres.Editor.Graph.Flow.DelegateEventNodeViewFactoryProxy.html",
    "title": "Class DelegateEventNodeViewFactoryProxy | Ceres Documentation",
    "keywords": "Class DelegateEventNodeViewFactoryProxy Inheritance object DelegateEventNodeViewFactoryProxy Implements IExecutableNodeViewFactoryProxy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class DelegateEventNodeViewFactoryProxy : IExecutableNodeViewFactoryProxy Fields DelegateType Declaration public Type DelegateType Field Value Type Description System.Type Methods Create(ExecutableNodeSearchWindow, CeresNodeSearchEntryData, Rect) Declaration public ExecutableNodeView Create(ExecutableNodeSearchWindow searchWindow, CeresNodeSearchEntryData entryData, Rect rect) Parameters Type Name Description ExecutableNodeSearchWindow searchWindow CeresNodeSearchEntryData entryData Rect rect Returns Type Description ExecutableNodeView Implements IExecutableNodeViewFactoryProxy"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutableEventNodeViewFactoryProxy.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutableEventNodeViewFactoryProxy.html",
    "title": "Class ExecutableEventNodeViewFactoryProxy | Ceres Documentation",
    "keywords": "Class ExecutableEventNodeViewFactoryProxy Inheritance object ExecutableEventNodeViewFactoryProxy Implements IExecutableNodeViewFactoryProxy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecutableEventNodeViewFactoryProxy : IExecutableNodeViewFactoryProxy Fields MethodInfo Declaration public MethodInfo MethodInfo Field Value Type Description MethodInfo Methods Create(ExecutableNodeSearchWindow, CeresNodeSearchEntryData, Rect) Declaration public ExecutableNodeView Create(ExecutableNodeSearchWindow searchWindow, CeresNodeSearchEntryData entryData, Rect rect) Parameters Type Name Description ExecutableNodeSearchWindow searchWindow CeresNodeSearchEntryData entryData Rect rect Returns Type Description ExecutableNodeView Implements IExecutableNodeViewFactoryProxy"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutableNodeElement.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutableNodeElement.html",
    "title": "Class ExecutableNodeElement | Ceres Documentation",
    "keywords": "Class ExecutableNodeElement Base class for node visual element of ExecutableNodeView Inheritance object ExecutableNodeElement Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecutableNodeElement : Node Constructors ExecutableNodeElement(ExecutableNodeView) Declaration public ExecutableNodeElement(ExecutableNodeView nodeView) Parameters Type Name Description ExecutableNodeView nodeView Properties View Declaration public ExecutableNodeView View { get; } Property Value Type Description ExecutableNodeView Methods AddBreakpointView() Declaration public void AddBreakpointView() BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt CollectElements(HashSet<GraphElement>, Func<GraphElement, bool>) Declaration public override void CollectElements(HashSet<GraphElement> collectedElementSet, Func<GraphElement, bool> conditionFunc) Parameters Type Name Description System.Collections.Generic.HashSet<T><GraphElement> collectedElementSet System.Func<T, TResult><GraphElement, bool> conditionFunc RemoveBreakpointView() Declaration public void RemoveBreakpointView()"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutableNodeGroup.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutableNodeGroup.html",
    "title": "Class ExecutableNodeGroup | Ceres Documentation",
    "keywords": "Class ExecutableNodeGroup Inheritance object CeresNodeGroup ExecutableNodeGroup Inherited Members CeresNodeGroup.BuildContextualMenu(ContextualMenuPopulateEvent) Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecutableNodeGroup : CeresNodeGroup Constructors ExecutableNodeGroup() Declaration public ExecutableNodeGroup() Methods Commit(List<NodeGroup>) Declaration public override void Commit(List<NodeGroup> nodeGroups) Parameters Type Name Description System.Collections.Generic.List<T><NodeGroup> nodeGroups Overrides CeresNodeGroup.Commit(List<NodeGroup>)"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutableNodeGroupHandler.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutableNodeGroupHandler.html",
    "title": "Class ExecutableNodeGroupHandler | Ceres Documentation",
    "keywords": "Class ExecutableNodeGroupHandler Inheritance object NodeGroupHandler NodeGroupHandler<ExecutableNodeGroup> ExecutableNodeGroupHandler Inherited Members NodeGroupHandler<ExecutableNodeGroup>.CreateGroup(Rect, NodeGroup) NodeGroupHandler<ExecutableNodeGroup>.DoUnGroup() NodeGroupHandler.GraphView NodeGroupHandler.DoGroup() NodeGroupHandler.RestoreGroups(List<NodeGroup>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecutableNodeGroupHandler : NodeGroupHandler<ExecutableNodeGroup> Constructors ExecutableNodeGroupHandler(CeresGraphView) Declaration public ExecutableNodeGroupHandler(CeresGraphView graphView) Parameters Type Name Description CeresGraphView graphView"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutableNodeSearchExtensions.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutableNodeSearchExtensions.html",
    "title": "Class ExecutableNodeSearchExtensions | Ceres Documentation",
    "keywords": "Class ExecutableNodeSearchExtensions Inheritance object ExecutableNodeSearchExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public static class ExecutableNodeSearchExtensions Methods HasFunctionTargetType(NodeSearchContext) Declaration public static bool HasFunctionTargetType(this NodeSearchContext searchContext) Parameters Type Name Description NodeSearchContext searchContext Returns Type Description bool"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutableNodeSearchWindow.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutableNodeSearchWindow.html",
    "title": "Class ExecutableNodeSearchWindow | Ceres Documentation",
    "keywords": "Class ExecutableNodeSearchWindow Inheritance object CeresNodeSearchWindow ExecutableNodeSearchWindow Implements ISearchWindowProvider Inherited Members CeresNodeSearchWindow.GraphView CeresNodeSearchWindow.Context CeresNodeSearchWindow.Initialize(CeresGraphView, NodeSearchContext) CeresNodeSearchWindow.SearchTypes(Type[], NodeSearchContext) CeresNodeSearchWindow.CanShowType(Type, NodeSearchContext) CeresNodeSearchWindow.ConnectRequestPort(ICeresNodeView) CeresNodeSearchWindow.CreateNodeView(CeresNodeSearchEntryData) CeresNodeSearchWindow.CreateNonGenericNodeView(CeresNodeSearchEntryData) CeresNodeSearchWindow.CreateGenericNodeView(CeresNodeSearchEntryData) CeresNodeSearchWindow.OnSelectEntry(SearchTreeEntry, SearchWindowContext) Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecutableNodeSearchWindow : CeresNodeSearchWindow, ISearchWindowProvider Methods CreateSearchTree(SearchWindowContext) Declaration public override List<SearchTreeEntry> CreateSearchTree(SearchWindowContext context) Parameters Type Name Description SearchWindowContext context Returns Type Description System.Collections.Generic.List<T><SearchTreeEntry> Overrides CeresNodeSearchWindow.CreateSearchTree(SearchWindowContext) OnInitialize() Declaration protected override void OnInitialize() Overrides CeresNodeSearchWindow.OnInitialize() OnSelectEntry(CeresNodeSearchEntryData, Rect) Declaration protected override bool OnSelectEntry(CeresNodeSearchEntryData entryData, Rect rect) Parameters Type Name Description CeresNodeSearchEntryData entryData Rect rect Returns Type Description bool Overrides CeresNodeSearchWindow.OnSelectEntry(CeresNodeSearchEntryData, Rect) Implements ISearchWindowProvider"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutableNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutableNodeView.html",
    "title": "Class ExecutableNodeView | Ceres Documentation",
    "keywords": "Class ExecutableNodeView Base class for node view of Inheritance object CeresNodeView ExecutableNodeView CustomFunctionInputNodeView CustomFunctionOutputNodeView ExecuteCustomFunctionNodeView ExecutablePortArrayNodeView ExecutionEventBaseNodeView IllegalExecutableNodeView InvalidExecutableNodeView PropertyNodeView ExecuteFunctionNodeView FlowNode_ExecuteEventNodeView Implements ICeresNodeView Inherited Members CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.SetNodeInstance(CeresNode) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(ExecutableNode), true)] public class ExecutableNodeView : CeresNodeView, ICeresNodeView Constructors ExecutableNodeView() Default constructor without initialization Declaration protected ExecutableNodeView() ExecutableNodeView(Type, CeresGraphView) Constructor with fill default properties, ports and node visual element Declaration public ExecutableNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Properties ExecutableNodeElement Get node visual element, see ExecutableNodeElement Declaration protected ExecutableNodeElement ExecutableNodeElement { get; } Property Value Type Description ExecutableNodeElement Flags Declaration public ExecutableNodeViewFlags Flags { get; } Property Value Type Description ExecutableNodeViewFlags FlowGraphEditorWindow Get container FlowGraphEditorWindow Declaration protected FlowGraphEditorWindow FlowGraphEditorWindow { get; } Property Value Type Description FlowGraphEditorWindow Methods AddBreakpoint() Declaration public void AddBreakpoint() BuildContextualMenu(ContextualMenuPopulateEvent) Add menu items to the node contextual menu. Declaration public virtual void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt CompileNode() Declaration public virtual ExecutableNode CompileNode() Returns Type Description ExecutableNode GetDefaultTooltip() Declaration public string GetDefaultTooltip() Returns Type Description string RemoveBreakpoint() Declaration public void RemoveBreakpoint() Validate(FlowGraphValidator) Validate before compiling Declaration public virtual void Validate(FlowGraphValidator validator) Parameters Type Name Description FlowGraphValidator validator Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutableNodeViewFlags.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutableNodeViewFlags.html",
    "title": "Enum ExecutableNodeViewFlags | Ceres Documentation",
    "keywords": "Enum ExecutableNodeViewFlags Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Flags] public enum ExecutableNodeViewFlags Fields Name Description Invalid Node view is no longer valid that need clean up None"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutablePortArrayNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutablePortArrayNodeView.html",
    "title": "Class ExecutablePortArrayNodeView | Ceres Documentation",
    "keywords": "Class ExecutablePortArrayNodeView Inheritance object CeresNodeView ExecutableNodeView ExecutablePortArrayNodeView FlowNode_SwitchEnumNodeView FlowNode_SwitchStringNodeView Implements ICeresNodeView Inherited Members ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax [CustomNodeView(null)] public class ExecutablePortArrayNodeView : ExecutableNodeView, ICeresNodeView Constructors ExecutablePortArrayNodeView(Type, CeresGraphView) Declaration public ExecutablePortArrayNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Properties NodeReflection Reflection data for IPortArrayNode Declaration protected PortArrayNodeReflection NodeReflection { get; } Property Value Type Description PortArrayNodeReflection PortLength Declaration protected int PortLength { get; } Property Value Type Description int Methods AddPort(int) Declaration protected void AddPort(int index) Parameters Type Name Description int index BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt Overrides ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) CompileNode() Declaration public override ExecutableNode CompileNode() Returns Type Description ExecutableNode Overrides ExecutableNodeView.CompileNode() GetPortArrayElementDisplayName(int) Declaration protected virtual string GetPortArrayElementDisplayName(int index) Parameters Type Name Description int index Returns Type Description string RemovePort(int) Declaration protected void RemovePort(int index) Parameters Type Name Description int index RemoveUnconnectedPorts() Declaration protected void RemoveUnconnectedPorts() ReorderDynamicPorts() Declaration protected void ReorderDynamicPorts() SetNodeInstance(CeresNode) Declaration public override void SetNodeInstance(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode Overrides CeresNodeView.SetNodeInstance(CeresNode) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutablePortArrayNodeViewResolver.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutablePortArrayNodeViewResolver.html",
    "title": "Class ExecutablePortArrayNodeViewResolver | Ceres Documentation",
    "keywords": "Class ExecutablePortArrayNodeViewResolver Inheritance object ExecutablePortArrayNodeViewResolver Implements INodeViewResolver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecutablePortArrayNodeViewResolver : INodeViewResolver Methods CreateNodeView(Type, CeresGraphView) Declaration public ICeresNodeView CreateNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Returns Type Description ICeresNodeView IsAcceptable(Type) Declaration public bool IsAcceptable(Type nodeType) Parameters Type Name Description System.Type nodeType Returns Type Description bool Implements INodeViewResolver"
  },
  "api/Ceres.Editor.Graph.Flow.ExecuteEventNodeViewFactoryProxy.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecuteEventNodeViewFactoryProxy.html",
    "title": "Class ExecuteEventNodeViewFactoryProxy | Ceres Documentation",
    "keywords": "Class ExecuteEventNodeViewFactoryProxy Inheritance object ExecuteEventNodeViewFactoryProxy Implements IExecutableNodeViewFactoryProxy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecuteEventNodeViewFactoryProxy : IExecutableNodeViewFactoryProxy Fields EventName Declaration public string EventName Field Value Type Description string Methods Create(ExecutableNodeSearchWindow, CeresNodeSearchEntryData, Rect) Declaration public ExecutableNodeView Create(ExecutableNodeSearchWindow searchWindow, CeresNodeSearchEntryData entryData, Rect rect) Parameters Type Name Description ExecutableNodeSearchWindow searchWindow CeresNodeSearchEntryData entryData Rect rect Returns Type Description ExecutableNodeView Implements IExecutableNodeViewFactoryProxy"
  },
  "api/Ceres.Editor.Graph.Flow.ExecuteFlowGraphFunctionNodeViewFactoryProxy.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecuteFlowGraphFunctionNodeViewFactoryProxy.html",
    "title": "Class ExecuteFlowGraphFunctionNodeViewFactoryProxy | Ceres Documentation",
    "keywords": "Class ExecuteFlowGraphFunctionNodeViewFactoryProxy Inheritance object ExecuteFlowGraphFunctionNodeViewFactoryProxy Implements IExecutableNodeViewFactoryProxy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecuteFlowGraphFunctionNodeViewFactoryProxy : IExecutableNodeViewFactoryProxy Fields Function Declaration public FlowGraphFunction Function Field Value Type Description FlowGraphFunction Methods Create(ExecutableNodeSearchWindow, CeresNodeSearchEntryData, Rect) Declaration public ExecutableNodeView Create(ExecutableNodeSearchWindow searchWindow, CeresNodeSearchEntryData entryData, Rect rect) Parameters Type Name Description ExecutableNodeSearchWindow searchWindow CeresNodeSearchEntryData entryData Rect rect Returns Type Description ExecutableNodeView Implements IExecutableNodeViewFactoryProxy"
  },
  "api/Ceres.Editor.Graph.Flow.ExecuteFunctionNodeViewFactoryProxy.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecuteFunctionNodeViewFactoryProxy.html",
    "title": "Class ExecuteFunctionNodeViewFactoryProxy | Ceres Documentation",
    "keywords": "Class ExecuteFunctionNodeViewFactoryProxy Inheritance object ExecuteFunctionNodeViewFactoryProxy Implements IExecutableNodeViewFactoryProxy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecuteFunctionNodeViewFactoryProxy : IExecutableNodeViewFactoryProxy Fields MethodInfo Declaration public MethodInfo MethodInfo Field Value Type Description MethodInfo Methods Create(ExecutableNodeSearchWindow, CeresNodeSearchEntryData, Rect) Declaration public ExecutableNodeView Create(ExecutableNodeSearchWindow searchWindow, CeresNodeSearchEntryData entryData, Rect rect) Parameters Type Name Description ExecutableNodeSearchWindow searchWindow CeresNodeSearchEntryData entryData Rect rect Returns Type Description ExecutableNodeView Implements IExecutableNodeViewFactoryProxy"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutionEventBaseNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutionEventBaseNodeView.html",
    "title": "Class ExecutionEventBaseNodeView | Ceres Documentation",
    "keywords": "Class ExecutionEventBaseNodeView Inheritance object CeresNodeView ExecutableNodeView ExecutionEventBaseNodeView CustomExecutionEventNodeView ExecutionEventNodeView ExecutionEventUberNodeView Implements ICeresNodeView Inherited Members ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public abstract class ExecutionEventBaseNodeView : ExecutableNodeView, ICeresNodeView Constructors ExecutionEventBaseNodeView(Type, CeresGraphView) Declaration protected ExecutionEventBaseNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Properties IsImplementable Declaration protected bool IsImplementable { get; } Property Value Type Description bool MethodInfo Declaration protected MethodInfo MethodInfo { get; } Property Value Type Description MethodInfo MethodName Declaration protected string MethodName { get; } Property Value Type Description string Methods AddPortView(CeresPortView) Declaration public override void AddPortView(CeresPortView portView) Parameters Type Name Description CeresPortView portView Overrides CeresNodeView.AddPortView(CeresPortView) CanRename() Declaration protected virtual bool CanRename() Returns Type Description bool CompileNode() Declaration public override ExecutableNode CompileNode() Returns Type Description ExecutableNode Overrides ExecutableNodeView.CompileNode() FillMethodParameterPorts(MethodInfo) Declaration protected virtual void FillMethodParameterPorts(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo GetEventName() Declaration public string GetEventName() Returns Type Description string SetEventName(string) Declaration public void SetEventName(string eventName) Parameters Type Name Description string eventName SetMethodInfo(MethodInfo) Declaration public void SetMethodInfo(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo SetNodeInstance(CeresNode) Declaration public override void SetNodeInstance(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode Overrides CeresNodeView.SetNodeInstance(CeresNode) UpdateEventTitle() Declaration protected virtual void UpdateEventTitle() Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutionEventNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutionEventNodeView.html",
    "title": "Class ExecutionEventNodeView | Ceres Documentation",
    "keywords": "Class ExecutionEventNodeView Inheritance object CeresNodeView ExecutableNodeView ExecutionEventBaseNodeView ExecutionEventNodeView Implements ICeresNodeView Inherited Members ExecutionEventBaseNodeView.MethodInfo ExecutionEventBaseNodeView.IsImplementable ExecutionEventBaseNodeView.MethodName ExecutionEventBaseNodeView.CanRename() ExecutionEventBaseNodeView.SetNodeInstance(CeresNode) ExecutionEventBaseNodeView.UpdateEventTitle() ExecutionEventBaseNodeView.SetMethodInfo(MethodInfo) ExecutionEventBaseNodeView.GetEventName() ExecutionEventBaseNodeView.SetEventName(string) ExecutionEventBaseNodeView.AddPortView(CeresPortView) ExecutionEventBaseNodeView.CompileNode() ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(ExecutionEventBase), true)] public class ExecutionEventNodeView : ExecutionEventBaseNodeView, ICeresNodeView Constructors ExecutionEventNodeView(Type, CeresGraphView) Declaration public ExecutionEventNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods FillMethodParameterPorts(MethodInfo) Declaration protected override void FillMethodParameterPorts(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Overrides ExecutionEventBaseNodeView.FillMethodParameterPorts(MethodInfo) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.ExecutionEventUberNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.ExecutionEventUberNodeView.html",
    "title": "Class ExecutionEventUberNodeView | Ceres Documentation",
    "keywords": "Class ExecutionEventUberNodeView Inheritance object CeresNodeView ExecutableNodeView ExecutionEventBaseNodeView ExecutionEventUberNodeView Implements ICeresNodeView Inherited Members ExecutionEventBaseNodeView.MethodInfo ExecutionEventBaseNodeView.IsImplementable ExecutionEventBaseNodeView.MethodName ExecutionEventBaseNodeView.CanRename() ExecutionEventBaseNodeView.SetNodeInstance(CeresNode) ExecutionEventBaseNodeView.UpdateEventTitle() ExecutionEventBaseNodeView.SetMethodInfo(MethodInfo) ExecutionEventBaseNodeView.GetEventName() ExecutionEventBaseNodeView.SetEventName(string) ExecutionEventBaseNodeView.AddPortView(CeresPortView) ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(ExecutionEventUber), false)] public sealed class ExecutionEventUberNodeView : ExecutionEventBaseNodeView, ICeresNodeView Constructors ExecutionEventUberNodeView(Type, CeresGraphView) Declaration public ExecutionEventUberNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods CompileNode() Declaration public override ExecutableNode CompileNode() Returns Type Description ExecutableNode Overrides ExecutionEventBaseNodeView.CompileNode() FillMethodParameterPorts(MethodInfo) Declaration protected override void FillMethodParameterPorts(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Overrides ExecutionEventBaseNodeView.FillMethodParameterPorts(MethodInfo) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.FlowBlackboard.html": {
    "href": "api/Ceres.Editor.Graph.Flow.FlowBlackboard.html",
    "title": "Class FlowBlackboard | Ceres Documentation",
    "keywords": "Class FlowBlackboard Inheritance object CeresBlackboard FlowBlackboard Implements IVariableSource Inherited Members CeresBlackboard.AlwaysExposed CeresBlackboard.SharedVariables CeresBlackboard.SharedVariableSection CeresBlackboard.GetOrAddSection(string) CeresBlackboard.EditVariable(string) CeresBlackboard.AddVariable(SharedVariable, bool) CeresBlackboard.RemoveVariable(SharedVariable, bool) CeresBlackboard.FindRow(SharedVariable) Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowBlackboard : CeresBlackboard, IVariableSource Constructors FlowBlackboard(FlowGraphView) Declaration public FlowBlackboard(FlowGraphView graphView) Parameters Type Name Description FlowGraphView graphView Methods AddVariableRow(SharedVariable, BlackboardRow) Declaration protected override void AddVariableRow(SharedVariable variable, BlackboardRow blackboardRow) Parameters Type Name Description SharedVariable variable BlackboardRow blackboardRow Overrides CeresBlackboard.AddVariableRow(SharedVariable, BlackboardRow) BuildBlackboardMenu(ContextualMenuPopulateEvent, CeresBlackboardVariableRow) Declaration protected override void BuildBlackboardMenu(ContextualMenuPopulateEvent evt, CeresBlackboardVariableRow variableRow) Parameters Type Name Description ContextualMenuPopulateEvent evt CeresBlackboardVariableRow variableRow Overrides CeresBlackboard.BuildBlackboardMenu(ContextualMenuPopulateEvent, CeresBlackboardVariableRow) CanVariableExposed(SharedVariable) Declaration protected override bool CanVariableExposed(SharedVariable variable) Parameters Type Name Description SharedVariable variable Returns Type Description bool Overrides CeresBlackboard.CanVariableExposed(SharedVariable) CreateBlackboardMenu(GenericMenu) Declaration protected override void CreateBlackboardMenu(GenericMenu menu) Parameters Type Name Description GenericMenu menu Overrides CeresBlackboard.CreateBlackboardMenu(GenericMenu) CreateVariableBlackboardRow(SharedVariable, BlackboardField, VisualElement) Declaration protected override BlackboardRow CreateVariableBlackboardRow(SharedVariable variable, BlackboardField blackboardField, VisualElement valueField) Parameters Type Name Description SharedVariable variable BlackboardField blackboardField VisualElement valueField Returns Type Description BlackboardRow Overrides CeresBlackboard.CreateVariableBlackboardRow(SharedVariable, BlackboardField, VisualElement) Implements IVariableSource"
  },
  "api/Ceres.Editor.Graph.Flow.FlowGraphAssetEditor.html": {
    "href": "api/Ceres.Editor.Graph.Flow.FlowGraphAssetEditor.html",
    "title": "Class FlowGraphAssetEditor | Ceres Documentation",
    "keywords": "Class FlowGraphAssetEditor Inheritance object FlowGraphAssetEditor Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphAssetEditor : UEditor Methods CreateInspectorGUI() Declaration public override VisualElement CreateInspectorGUI() Returns Type Description VisualElement"
  },
  "api/Ceres.Editor.Graph.Flow.FlowGraphDataPropertyDrawer.html": {
    "href": "api/Ceres.Editor.Graph.Flow.FlowGraphDataPropertyDrawer.html",
    "title": "Class FlowGraphDataPropertyDrawer | Ceres Documentation",
    "keywords": "Class FlowGraphDataPropertyDrawer Inheritance object FlowGraphDataPropertyDrawer Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphDataPropertyDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description float OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Ceres.Editor.Graph.Flow.FlowGraphDebugState.html": {
    "href": "api/Ceres.Editor.Graph.Flow.FlowGraphDebugState.html",
    "title": "Class FlowGraphDebugState | Ceres Documentation",
    "keywords": "Class FlowGraphDebugState Editor window scope debug state Inheritance object FlowGraphDebugState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowGraphDebugState Fields breakpoints Declaration public List<string> breakpoints Field Value Type Description System.Collections.Generic.List<T><string> enableDebug Declaration public bool enableDebug Field Value Type Description bool Methods AddBreakpoint(string) Declaration public void AddBreakpoint(string guid) Parameters Type Name Description string guid RemoveBreakpoint(string) Declaration public void RemoveBreakpoint(string guid) Parameters Type Name Description string guid"
  },
  "api/Ceres.Editor.Graph.Flow.FlowGraphEditorObject.html": {
    "href": "api/Ceres.Editor.Graph.Flow.FlowGraphEditorObject.html",
    "title": "Class FlowGraphEditorObject | Ceres Documentation",
    "keywords": "Class FlowGraphEditorObject Editor flow graph data container Inheritance object FlowGraphEditorObject Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphEditorObject : ScriptableObject Properties GraphData Undoable editor time graph data Declaration public FlowGraphData GraphData { get; set; } Property Value Type Description FlowGraphData GraphInstance Declaration public FlowGraph GraphInstance { get; } Property Value Type Description FlowGraph GraphNameContents Declaration public GUIContent[] GraphNameContents { get; } Property Value Type Description GUIContent[] GraphNames Declaration public string[] GraphNames { get; } Property Value Type Description string[] Methods CreateTemporary(IFlowGraphContainer) Declaration public static FlowGraphEditorObject CreateTemporary(IFlowGraphContainer container) Parameters Type Name Description IFlowGraphContainer container Returns Type Description FlowGraphEditorObject DestroyTemporary() Declaration public void DestroyTemporary() Update() Declaration public void Update()"
  },
  "api/Ceres.Editor.Graph.Flow.FlowGraphEditorWindow.html": {
    "href": "api/Ceres.Editor.Graph.Flow.FlowGraphEditorWindow.html",
    "title": "Class FlowGraphEditorWindow | Ceres Documentation",
    "keywords": "Class FlowGraphEditorWindow Inheritance object CeresGraphEditorWindow CeresGraphEditorWindow<IFlowGraphContainer, FlowGraphEditorWindow> FlowGraphEditorWindow Implements IHasCustomMenu Inherited Members CeresGraphEditorWindow<IFlowGraphContainer, FlowGraphEditorWindow>.ContainerT CeresGraphEditorWindow<IFlowGraphContainer, FlowGraphEditorWindow>.GetOrCreateEditorWindow(IFlowGraphContainer) CeresGraphEditorWindow<IFlowGraphContainer, FlowGraphEditorWindow>.Show(IFlowGraphContainer) CeresGraphEditorWindow<IFlowGraphContainer, FlowGraphEditorWindow>.OnDisable() CeresGraphEditorWindow<IFlowGraphContainer, FlowGraphEditorWindow>.GetContainer() CeresGraphEditorWindow<IFlowGraphContainer, FlowGraphEditorWindow>.Reload() CeresGraphEditorWindow<IFlowGraphContainer, FlowGraphEditorWindow>.OnReloadGraphView() CeresGraphEditorWindow.Identifier CeresGraphEditorWindow.Container CeresGraphEditorWindow.Initialize(ICeresGraphContainer) CeresGraphEditorWindow.OnEnable() CeresGraphEditorWindow.AddItemsToMenu(GenericMenu) CeresGraphEditorWindow.Reload() CeresGraphEditorWindow.PreReload() CeresGraphEditorWindow.GetContainerType() CeresGraphEditorWindow.SetContainerType(Type) Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphEditorWindow : CeresGraphEditorWindow<IFlowGraphContainer, FlowGraphEditorWindow>, IHasCustomMenu Properties DebugState Editor debug state Declaration public FlowGraphDebugState DebugState { get; } Property Value Type Description FlowGraphDebugState EditorObject Editor view model Declaration public FlowGraphEditorObject EditorObject { get; } Property Value Type Description FlowGraphEditorObject GraphIndex Editing graph view index Declaration public int GraphIndex { get; } Property Value Type Description int Methods CanCreateFunctionSubGraph() Declaration public bool CanCreateFunctionSubGraph() Returns Type Description bool CreateFunctionSubGraph() Create a new subGraph to present custom function Declaration public void CreateFunctionSubGraph() GetGraphView() Get current editing graph view Declaration public FlowGraphView GetGraphView() Returns Type Description FlowGraphView GetOrCreateGraphView(int) Get or create graph view by id Declaration public FlowGraphView GetOrCreateGraphView(int id) Parameters Type Name Description int id Returns Type Description FlowGraphView OnDisable() Declaration protected override void OnDisable() Overrides Ceres.Editor.Graph.CeresGraphEditorWindow<IFlowGraphContainer, Ceres.Editor.Graph.Flow.FlowGraphEditorWindow>.OnDisable() OnInitialize() Declaration protected override void OnInitialize() Overrides CeresGraphEditorWindow.OnInitialize() OnReloadGraphView() Declaration protected override void OnReloadGraphView() Overrides Ceres.Editor.Graph.CeresGraphEditorWindow<IFlowGraphContainer, Ceres.Editor.Graph.Flow.FlowGraphEditorWindow>.OnReloadGraphView() OpenSubgraphView(string) Open subGraph view by name Declaration public void OpenSubgraphView(string subGraphName) Parameters Type Name Description string subGraphName RemoveSubgraph(string) Remove subGraph and update view Declaration public void RemoveSubgraph(string guid) Parameters Type Name Description string guid RenameSubgraph(string, string) Rename subGraph and update view Declaration public void RenameSubgraph(string guid, string newName) Parameters Type Name Description string guid string newName ResolveFunctionInputParameters(LocalFunction) Resolve custom function input parameters Declaration public CustomFunctionInputParameter[] ResolveFunctionInputParameters(LocalFunction localFunction) Parameters Type Name Description LocalFunction localFunction Returns Type Description CustomFunctionInputParameter[] ResolveFunctionTypes(LocalFunction) Resolve custom function parameter types Declaration public (Type, Type[]) ResolveFunctionTypes(LocalFunction localFunction) Parameters Type Name Description LocalFunction localFunction Returns Type Description (System.Type, System.Type[]) SaveGraphData() Save current editing flow graph Declaration public void SaveGraphData() Implements IHasCustomMenu"
  },
  "api/Ceres.Editor.Graph.Flow.FlowGraphFunction.html": {
    "href": "api/Ceres.Editor.Graph.Flow.FlowGraphFunction.html",
    "title": "Class FlowGraphFunction | Ceres Documentation",
    "keywords": "Class FlowGraphFunction Inheritance object FlowGraphFunction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphFunction Constructors FlowGraphFunction(FlowGraphFunctionAsset) Declaration public FlowGraphFunction(FlowGraphFunctionAsset asset) Parameters Type Name Description FlowGraphFunctionAsset asset Fields Asset Declaration public readonly FlowGraphFunctionAsset Asset Field Value Type Description FlowGraphFunctionAsset ContainerType Declaration public readonly Type ContainerType Field Value Type Description System.Type InputParameterNames Declaration public readonly string[] InputParameterNames Field Value Type Description string[] InputTypes Declaration public readonly Type[] InputTypes Field Value Type Description System.Type[] ReturnType Declaration public readonly Type ReturnType Field Value Type Description System.Type"
  },
  "api/Ceres.Editor.Graph.Flow.FlowGraphFunctionRegistry.html": {
    "href": "api/Ceres.Editor.Graph.Flow.FlowGraphFunctionRegistry.html",
    "title": "Class FlowGraphFunctionRegistry | Ceres Documentation",
    "keywords": "Class FlowGraphFunctionRegistry Inheritance object FlowGraphFunctionRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphFunctionRegistry Methods FindFlowGraphFunctionFromAsset(FlowGraphFunctionAsset) Declaration public FlowGraphFunction FindFlowGraphFunctionFromAsset(FlowGraphFunctionAsset asset) Parameters Type Name Description FlowGraphFunctionAsset asset Returns Type Description FlowGraphFunction Get() Declaration public static FlowGraphFunctionRegistry Get() Returns Type Description FlowGraphFunctionRegistry GetFlowGraphFunctions(Type) Declaration public FlowGraphFunction[] GetFlowGraphFunctions(Type runtimeType) Parameters Type Name Description System.Type runtimeType Returns Type Description FlowGraphFunction[]"
  },
  "api/Ceres.Editor.Graph.Flow.FlowGraphScriptableObjectBaseEditor.html": {
    "href": "api/Ceres.Editor.Graph.Flow.FlowGraphScriptableObjectBaseEditor.html",
    "title": "Class FlowGraphScriptableObjectBaseEditor | Ceres Documentation",
    "keywords": "Class FlowGraphScriptableObjectBaseEditor Inheritance object FlowGraphScriptableObjectBaseEditor Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphScriptableObjectBaseEditor : UEditor Methods CreateInspectorGUI() Declaration public override VisualElement CreateInspectorGUI() Returns Type Description VisualElement"
  },
  "api/Ceres.Editor.Graph.Flow.FlowGraphView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.FlowGraphView.html",
    "title": "Class FlowGraphView | Ceres Documentation",
    "keywords": "Class FlowGraphView Inheritance object CeresGraphView FlowGraphView Implements IVariableSource System.IDisposable Inherited Members CeresGraphView.SharedVariables CeresGraphView.EditorWindow CeresGraphView.Blackboard CeresGraphView.NodeGroupHandler CeresGraphView.ContextualMenuRegistry CeresGraphView.NodeViews CeresGraphView.SearchWindow CeresGraphView.OnNodeCreationRequest(NodeCreationContext) CeresGraphView.OnDragDropObjectPerform(UObject, Vector3) CeresGraphView.OnGraphViewChanged(GraphViewChange) CeresGraphView.AddBlackboard(CeresBlackboard) CeresGraphView.AddBlackboard(CeresBlackboard, Rect) CeresGraphView.AddSearchWindow<T>() CeresGraphView.AddNodeGroupHandler(NodeGroupHandler) CeresGraphView.AddStyleSheet(string) CeresGraphView.GetOrLoadStyleSheet(string) CeresGraphView.GetOrLoadVisualTreeAsset(string) CeresGraphView.AddNodeView(ICeresNodeView) CeresGraphView.FindNodeView(string) CeresGraphView.FindNodeView<TNodeView>(string) CeresGraphView.GetCompatiblePorts(Port, NodeAdapter) CeresGraphView.AddSharedVariables(List<SharedVariable>, bool) CeresGraphView.BuildContextualMenu(ContextualMenuPopulateEvent) CeresGraphView.OpenSearch(Vector2) CeresGraphView.OpenSearch(Vector2, CeresPortView) CeresGraphView.SetDirty() CeresGraphView.ClearDirty() CeresGraphView.IsDirty() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphView : CeresGraphView, IVariableSource, IDisposable Constructors FlowGraphView(FlowGraphEditorWindow) Declaration public FlowGraphView(FlowGraphEditorWindow editorWindow) Parameters Type Name Description FlowGraphEditorWindow editorWindow Properties DebugState Editor debug state Declaration public FlowGraphDebugState DebugState { get; } Property Value Type Description FlowGraphDebugState FlowGraphEditorWindow Bound editor window Declaration public FlowGraphEditorWindow FlowGraphEditorWindow { get; } Property Value Type Description FlowGraphEditorWindow GraphName Bound graph verified name Declaration public string GraphName { get; } Property Value Type Description string Methods CanPasteSerializedGraph(string) Declaration protected override bool CanPasteSerializedGraph(string serializedData) Parameters Type Name Description string serializedData Returns Type Description bool Overrides CeresGraphView.CanPasteSerializedGraph(string) CanSimulate() Declaration public bool CanSimulate() Returns Type Description bool DeserializeGraph(FlowGraphEditorObject) Declaration public void DeserializeGraph(FlowGraphEditorObject editorObject) Parameters Type Name Description FlowGraphEditorObject editorObject DeserializeSubGraph(FlowGraphEditorObject, string) Declaration public void DeserializeSubGraph(FlowGraphEditorObject editorObject, string slotName) Parameters Type Name Description FlowGraphEditorObject editorObject string slotName Dispose() Declaration public void Dispose() IsPaused() Declaration public bool IsPaused() Returns Type Description bool NextBreakpoint() Declaration public void NextBreakpoint() NextFrame() Declaration public void NextFrame() OnCopySerializedGraph(IEnumerable<GraphElement>) Declaration protected override string OnCopySerializedGraph(IEnumerable<GraphElement> elements) Parameters Type Name Description System.Collections.Generic.IEnumerable<T><GraphElement> elements Returns Type Description string Overrides CeresGraphView.OnCopySerializedGraph(IEnumerable<GraphElement>) OnDestroy() Declaration protected override void OnDestroy() Overrides CeresGraphView.OnDestroy() OnDragDropElementPerform(List<ISelectable>, GraphElement, Vector3) Declaration protected override void OnDragDropElementPerform(List<ISelectable> selectables, GraphElement graphElement, Vector3 mousePosition) Parameters Type Name Description System.Collections.Generic.List<T><ISelectable> selectables GraphElement graphElement Vector3 mousePosition Overrides CeresGraphView.OnDragDropElementPerform(List<ISelectable>, GraphElement, Vector3) OnPasteSerializedGraph(string, string) Declaration protected override void OnPasteSerializedGraph(string operationName, string serializedData) Parameters Type Name Description string operationName string serializedData Overrides CeresGraphView.OnPasteSerializedGraph(string, string) SerializeGraph(FlowGraphEditorObject) Serialize flow graph to editor data container Declaration public bool SerializeGraph(FlowGraphEditorObject editorObject) Parameters Type Name Description FlowGraphEditorObject editorObject Serialization target Returns Type Description bool Whether serialization is succeeded SetDebugEnabled(bool) Declaration public void SetDebugEnabled(bool enabled) Parameters Type Name Description bool enabled SimulateExecution() Execute simulate event in editor if existed Declaration public UniTask SimulateExecution() Returns Type Description UniTask Implements IVariableSource System.IDisposable"
  },
  "api/Ceres.Editor.Graph.Flow.html": {
    "href": "api/Ceres.Editor.Graph.Flow.html",
    "title": "Namespace Ceres.Editor.Graph.Flow | Ceres Documentation",
    "keywords": "Namespace Ceres.Editor.Graph.Flow Classes CustomExecutionEventNodeView DelegateEventNodeViewFactoryProxy ExecutableEventNodeViewFactoryProxy ExecutableNodeElement Base class for node visual element of ExecutableNodeView ExecutableNodeGroup ExecutableNodeGroupHandler ExecutableNodeSearchExtensions ExecutableNodeSearchWindow ExecutableNodeView Base class for node view of ExecutablePortArrayNodeView ExecutablePortArrayNodeViewResolver ExecuteEventNodeViewFactoryProxy ExecuteFlowGraphFunctionNodeViewFactoryProxy ExecuteFunctionNodeViewFactoryProxy ExecutionEventBaseNodeView ExecutionEventNodeView ExecutionEventUberNodeView FlowBlackboard FlowGraphAssetEditor FlowGraphDataPropertyDrawer FlowGraphDebugState Editor window scope debug state FlowGraphEditorObject Editor flow graph data container FlowGraphEditorWindow FlowGraphFunction FlowGraphFunctionRegistry FlowGraphScriptableObjectBaseEditor FlowGraphView IllegalExecutableNodeView InvalidExecutableNodeView LocalFunction Variable represents local custom function in flow subGraph OpenFlowGraphButton This is a clickable button that will open flow graph editor after being clicked PropertyNodeViewFactoryProxy Interfaces IExecutableNodeViewFactoryProxy Enums ExecutableNodeViewFlags"
  },
  "api/Ceres.Editor.Graph.Flow.IExecutableNodeViewFactoryProxy.html": {
    "href": "api/Ceres.Editor.Graph.Flow.IExecutableNodeViewFactoryProxy.html",
    "title": "Interface IExecutableNodeViewFactoryProxy | Ceres Documentation",
    "keywords": "Interface IExecutableNodeViewFactoryProxy Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public interface IExecutableNodeViewFactoryProxy Methods Create(ExecutableNodeSearchWindow, CeresNodeSearchEntryData, Rect) Declaration ExecutableNodeView Create(ExecutableNodeSearchWindow searchWindow, CeresNodeSearchEntryData entryData, Rect rect) Parameters Type Name Description ExecutableNodeSearchWindow searchWindow CeresNodeSearchEntryData entryData Rect rect Returns Type Description ExecutableNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.IllegalExecutableNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.IllegalExecutableNodeView.html",
    "title": "Class IllegalExecutableNodeView | Ceres Documentation",
    "keywords": "Class IllegalExecutableNodeView Inheritance object CeresNodeView ExecutableNodeView IllegalExecutableNodeView Implements ICeresNodeView Inherited Members ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.CompileNode() ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.SetNodeInstance(CeresNode) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(IllegalExecutableNode))] public class IllegalExecutableNodeView : ExecutableNodeView, ICeresNodeView Constructors IllegalExecutableNodeView(Type, CeresGraphView) Declaration public IllegalExecutableNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.InvalidExecutableNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.InvalidExecutableNodeView.html",
    "title": "Class InvalidExecutableNodeView | Ceres Documentation",
    "keywords": "Class InvalidExecutableNodeView Inheritance object CeresNodeView ExecutableNodeView InvalidExecutableNodeView Implements ICeresNodeView Inherited Members ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.CompileNode() ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.SetNodeInstance(CeresNode) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(InvalidExecutableNode))] public class InvalidExecutableNodeView : ExecutableNodeView, ICeresNodeView Constructors InvalidExecutableNodeView(Type, CeresGraphView) Declaration public InvalidExecutableNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.LocalFunction.html": {
    "href": "api/Ceres.Editor.Graph.Flow.LocalFunction.html",
    "title": "Class LocalFunction | Ceres Documentation",
    "keywords": "Class LocalFunction Variable represents local custom function in flow subGraph Inheritance object SharedVariable SharedVariable<string> LocalFunction Implements System.ICloneable System.IDisposable IVariable<string> Inherited Members SharedVariable<string>.Value SharedVariable<string>.GetValue() SharedVariable<string>.SetValue(object) SharedVariable<string>.Getter SharedVariable<string>.Setter SharedVariable<string>.Bind(IVariable<string>) SharedVariable<string>.Bind(SharedVariable) SharedVariable<string>.Dispose() SharedVariable<string>.value SharedVariable<string>.Observe() SharedVariable<string>.ObserveT() SharedVariable<string>.Clone() SharedVariable<string>.CopyProperty(SharedVariable) SharedVariable<string>.GetValueType() SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class LocalFunction : SharedVariable<string>, ICloneable, IDisposable, IVariable<string> Remarks Value is function guid Constructors LocalFunction() Declaration public LocalFunction() Remarks Value is function guid LocalFunction(string) Declaration public LocalFunction(string functionName) Parameters Type Name Description string functionName Remarks Value is function guid Methods CloneT() Declaration protected override SharedVariable<string> CloneT() Returns Type Description SharedVariable<string> Overrides Ceres.Graph.SharedVariable<string>.CloneT() Remarks Value is function guid Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.Editor.Graph.Flow.OpenFlowGraphButton.html": {
    "href": "api/Ceres.Editor.Graph.Flow.OpenFlowGraphButton.html",
    "title": "Class OpenFlowGraphButton | Ceres Documentation",
    "keywords": "Class OpenFlowGraphButton This is a clickable button that will open flow graph editor after being clicked Inheritance object OpenFlowGraphButton Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class OpenFlowGraphButton : Button Constructors OpenFlowGraphButton(IFlowGraphContainer) Declaration public OpenFlowGraphButton(IFlowGraphContainer container) Parameters Type Name Description IFlowGraphContainer container"
  },
  "api/Ceres.Editor.Graph.Flow.Properties.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Properties.html",
    "title": "Namespace Ceres.Editor.Graph.Flow.Properties | Ceres Documentation",
    "keywords": "Namespace Ceres.Editor.Graph.Flow.Properties Classes PropertyNode_PropertyValueNodeView PropertyNode_SharedVariableValueNodeView PropertyNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.Properties.PropertyNode_PropertyValueNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Properties.PropertyNode_PropertyValueNodeView.html",
    "title": "Class PropertyNode_PropertyValueNodeView | Ceres Documentation",
    "keywords": "Class PropertyNode_PropertyValueNodeView Inheritance object CeresNodeView ExecutableNodeView PropertyNodeView PropertyNode_PropertyValueNodeView Implements ICeresNodeView Inherited Members PropertyNodeView.PropertyName PropertyNodeView.SetPropertyName(string) ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.Properties Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(PropertyNode_PropertyValue), true)] public class PropertyNode_PropertyValueNodeView : PropertyNodeView, ICeresNodeView Constructors PropertyNode_PropertyValueNodeView(Type, CeresGraphView) Declaration public PropertyNode_PropertyValueNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Properties IsSelfTarget Declaration protected bool IsSelfTarget { get; } Property Value Type Description bool Methods CompileNode() Declaration public override ExecutableNode CompileNode() Returns Type Description ExecutableNode Overrides PropertyNodeView.CompileNode() SetIsSelfTarget(bool) Declaration public void SetIsSelfTarget(bool isSelfTarget) Parameters Type Name Description bool isSelfTarget SetNodeInstance(CeresNode) Declaration public override void SetNodeInstance(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode Overrides PropertyNodeView.SetNodeInstance(CeresNode) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.Properties.PropertyNode_SharedVariableValueNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Properties.PropertyNode_SharedVariableValueNodeView.html",
    "title": "Class PropertyNode_SharedVariableValueNodeView | Ceres Documentation",
    "keywords": "Class PropertyNode_SharedVariableValueNodeView Inheritance object CeresNodeView ExecutableNodeView PropertyNodeView PropertyNode_SharedVariableValueNodeView Implements ICeresNodeView Inherited Members PropertyNodeView.PropertyName PropertyNodeView.SetNodeInstance(CeresNode) PropertyNodeView.CompileNode() ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.Properties Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(PropertyNode_SharedVariableValue), true)] public class PropertyNode_SharedVariableValueNodeView : PropertyNodeView, ICeresNodeView Constructors PropertyNode_SharedVariableValueNodeView(Type, CeresGraphView) Declaration public PropertyNode_SharedVariableValueNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods SetPropertyName(string) Declaration public override void SetPropertyName(string propertyName) Parameters Type Name Description string propertyName Overrides PropertyNodeView.SetPropertyName(string) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.Properties.PropertyNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Properties.PropertyNodeView.html",
    "title": "Class PropertyNodeView | Ceres Documentation",
    "keywords": "Class PropertyNodeView Inheritance object CeresNodeView ExecutableNodeView PropertyNodeView PropertyNode_PropertyValueNodeView PropertyNode_SharedVariableValueNodeView Implements ICeresNodeView Inherited Members ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.Properties Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(PropertyNode), true)] public class PropertyNodeView : ExecutableNodeView, ICeresNodeView Constructors PropertyNodeView(Type, CeresGraphView) Declaration public PropertyNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Properties PropertyName Declaration protected string PropertyName { get; } Property Value Type Description string Methods CompileNode() Declaration public override ExecutableNode CompileNode() Returns Type Description ExecutableNode Overrides ExecutableNodeView.CompileNode() SetNodeInstance(CeresNode) Declaration public override void SetNodeInstance(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode Overrides CeresNodeView.SetNodeInstance(CeresNode) SetPropertyName(string) Declaration public virtual void SetPropertyName(string propertyName) Parameters Type Name Description string propertyName Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.PropertyNodeViewFactoryProxy.html": {
    "href": "api/Ceres.Editor.Graph.Flow.PropertyNodeViewFactoryProxy.html",
    "title": "Class PropertyNodeViewFactoryProxy | Ceres Documentation",
    "keywords": "Class PropertyNodeViewFactoryProxy Inheritance object PropertyNodeViewFactoryProxy Implements IExecutableNodeViewFactoryProxy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class PropertyNodeViewFactoryProxy : IExecutableNodeViewFactoryProxy Fields IsSelfTarget Declaration public bool IsSelfTarget Field Value Type Description bool PropertyInfo Declaration public PropertyInfo PropertyInfo Field Value Type Description PropertyInfo PropertyName Declaration public string PropertyName Field Value Type Description string SharedVariable Declaration public SharedVariable SharedVariable Field Value Type Description SharedVariable Methods Create(ExecutableNodeSearchWindow, CeresNodeSearchEntryData, Rect) Declaration public ExecutableNodeView Create(ExecutableNodeSearchWindow searchWindow, CeresNodeSearchEntryData entryData, Rect rect) Parameters Type Name Description ExecutableNodeSearchWindow searchWindow CeresNodeSearchEntryData entryData Rect rect Returns Type Description ExecutableNodeView Implements IExecutableNodeViewFactoryProxy"
  },
  "api/Ceres.Editor.Graph.Flow.Utilities.ExecuteFunctionNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Utilities.ExecuteFunctionNodeView.html",
    "title": "Class ExecuteFunctionNodeView | Ceres Documentation",
    "keywords": "Class ExecuteFunctionNodeView Inheritance object CeresNodeView ExecutableNodeView ExecuteFunctionNodeView FlowNode_ExecuteFunctionReturnNodeView FlowNode_ExecuteFunctionUberNodeView FlowNode_ExecuteFunctionVoidNodeView Implements ICeresNodeView Inherited Members ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public abstract class ExecuteFunctionNodeView : ExecutableNodeView, ICeresNodeView Properties DisplayTarget Declaration protected bool DisplayTarget { get; } Property Value Type Description bool ExecuteInDependency Declaration protected bool ExecuteInDependency { get; } Property Value Type Description bool InstanceIsSelfTarget Declaration protected bool InstanceIsSelfTarget { get; } Property Value Type Description bool IsNeedResolveReturnType Declaration protected bool IsNeedResolveReturnType { get; } Property Value Type Description bool IsScriptMethod Declaration protected bool IsScriptMethod { get; } Property Value Type Description bool IsStatic Declaration protected bool IsStatic { get; } Property Value Type Description bool MethodInfo Declaration protected MethodInfo MethodInfo { get; } Property Value Type Description MethodInfo MethodName Declaration protected string MethodName { get; } Property Value Type Description string ParameterCount Declaration protected int ParameterCount { get; } Property Value Type Description int ResolveReturnTypeParameter Declaration protected ParameterInfo ResolveReturnTypeParameter { get; } Property Value Type Description ParameterInfo ScriptTargetType Declaration protected Type ScriptTargetType { get; } Property Value Type Description System.Type StaticIsSelfTarget Declaration protected bool StaticIsSelfTarget { get; } Property Value Type Description bool Methods CompileNode() Declaration public override ExecutableNode CompileNode() Returns Type Description ExecutableNode Overrides ExecutableNodeView.CompileNode() FillMethodParametersPorts(MethodInfo) Declaration protected abstract void FillMethodParametersPorts(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo InitializeSelfTargetPortView(string) Notify port view to treat compiled port can be unconnected which will pass self reference at runtime Declaration protected void InitializeSelfTargetPortView(string propertyName) Parameters Type Name Description string propertyName Port view bound property name SetMethodInfo(MethodInfo) Declaration public void SetMethodInfo(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo SetNodeInstance(CeresNode) Declaration public override sealed void SetNodeInstance(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode Overrides CeresNodeView.SetNodeInstance(CeresNode) Validate(FlowGraphValidator) Declaration public override void Validate(FlowGraphValidator validator) Parameters Type Name Description FlowGraphValidator validator Overrides ExecutableNodeView.Validate(FlowGraphValidator) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_ExecuteEventNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_ExecuteEventNodeView.html",
    "title": "Class FlowNode_ExecuteEventNodeView | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteEventNodeView Node view for Inheritance object CeresNodeView ExecutableNodeView FlowNode_ExecuteEventNodeView Implements ICeresNodeView Inherited Members ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(FlowNode_ExecuteEvent), true)] public sealed class FlowNode_ExecuteEventNodeView : ExecutableNodeView, ICeresNodeView Constructors FlowNode_ExecuteEventNodeView(Type, CeresGraphView) Declaration public FlowNode_ExecuteEventNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods CompileNode() Declaration public override ExecutableNode CompileNode() Returns Type Description ExecutableNode Overrides ExecutableNodeView.CompileNode() SetEventName(string) Declaration public void SetEventName(string inName) Parameters Type Name Description string inName SetNodeInstance(CeresNode) Declaration public override void SetNodeInstance(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode Overrides CeresNodeView.SetNodeInstance(CeresNode) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_ExecuteFunctionReturnNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_ExecuteFunctionReturnNodeView.html",
    "title": "Class FlowNode_ExecuteFunctionReturnNodeView | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionReturnNodeView Inheritance object CeresNodeView ExecutableNodeView ExecuteFunctionNodeView FlowNode_ExecuteFunctionReturnNodeView Implements ICeresNodeView Inherited Members ExecuteFunctionNodeView.MethodInfo ExecuteFunctionNodeView.MethodName ExecuteFunctionNodeView.ParameterCount ExecuteFunctionNodeView.IsStatic ExecuteFunctionNodeView.IsScriptMethod ExecuteFunctionNodeView.ExecuteInDependency ExecuteFunctionNodeView.DisplayTarget ExecuteFunctionNodeView.StaticIsSelfTarget ExecuteFunctionNodeView.InstanceIsSelfTarget ExecuteFunctionNodeView.ScriptTargetType ExecuteFunctionNodeView.IsNeedResolveReturnType ExecuteFunctionNodeView.ResolveReturnTypeParameter ExecuteFunctionNodeView.SetMethodInfo(MethodInfo) ExecuteFunctionNodeView.InitializeSelfTargetPortView(string) ExecuteFunctionNodeView.SetNodeInstance(CeresNode) ExecuteFunctionNodeView.CompileNode() ExecuteFunctionNodeView.Validate(FlowGraphValidator) ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(FlowNode_ExecuteFunctionReturn), true)] public sealed class FlowNode_ExecuteFunctionReturnNodeView : ExecuteFunctionNodeView, ICeresNodeView Constructors FlowNode_ExecuteFunctionReturnNodeView(Type, CeresGraphView) Declaration public FlowNode_ExecuteFunctionReturnNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods FillMethodParametersPorts(MethodInfo) Declaration protected override void FillMethodParametersPorts(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Overrides ExecuteFunctionNodeView.FillMethodParametersPorts(MethodInfo) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_ExecuteFunctionUberNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_ExecuteFunctionUberNodeView.html",
    "title": "Class FlowNode_ExecuteFunctionUberNodeView | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionUberNodeView Inheritance object CeresNodeView ExecutableNodeView ExecuteFunctionNodeView FlowNode_ExecuteFunctionUberNodeView Implements ICeresNodeView Inherited Members ExecuteFunctionNodeView.MethodInfo ExecuteFunctionNodeView.MethodName ExecuteFunctionNodeView.ParameterCount ExecuteFunctionNodeView.IsStatic ExecuteFunctionNodeView.IsScriptMethod ExecuteFunctionNodeView.ExecuteInDependency ExecuteFunctionNodeView.DisplayTarget ExecuteFunctionNodeView.StaticIsSelfTarget ExecuteFunctionNodeView.InstanceIsSelfTarget ExecuteFunctionNodeView.ScriptTargetType ExecuteFunctionNodeView.IsNeedResolveReturnType ExecuteFunctionNodeView.ResolveReturnTypeParameter ExecuteFunctionNodeView.SetMethodInfo(MethodInfo) ExecuteFunctionNodeView.InitializeSelfTargetPortView(string) ExecuteFunctionNodeView.SetNodeInstance(CeresNode) ExecuteFunctionNodeView.CompileNode() ExecuteFunctionNodeView.Validate(FlowGraphValidator) ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(FlowNode_ExecuteFunctionUber), true)] public sealed class FlowNode_ExecuteFunctionUberNodeView : ExecuteFunctionNodeView, ICeresNodeView Constructors FlowNode_ExecuteFunctionUberNodeView(Type, CeresGraphView) Declaration public FlowNode_ExecuteFunctionUberNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods FillMethodParametersPorts(MethodInfo) Declaration protected override void FillMethodParametersPorts(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Overrides ExecuteFunctionNodeView.FillMethodParametersPorts(MethodInfo) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_ExecuteFunctionVoidNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_ExecuteFunctionVoidNodeView.html",
    "title": "Class FlowNode_ExecuteFunctionVoidNodeView | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionVoidNodeView Inheritance object CeresNodeView ExecutableNodeView ExecuteFunctionNodeView FlowNode_ExecuteFunctionVoidNodeView Implements ICeresNodeView Inherited Members ExecuteFunctionNodeView.MethodInfo ExecuteFunctionNodeView.MethodName ExecuteFunctionNodeView.ParameterCount ExecuteFunctionNodeView.IsStatic ExecuteFunctionNodeView.IsScriptMethod ExecuteFunctionNodeView.ExecuteInDependency ExecuteFunctionNodeView.DisplayTarget ExecuteFunctionNodeView.StaticIsSelfTarget ExecuteFunctionNodeView.InstanceIsSelfTarget ExecuteFunctionNodeView.ScriptTargetType ExecuteFunctionNodeView.IsNeedResolveReturnType ExecuteFunctionNodeView.ResolveReturnTypeParameter ExecuteFunctionNodeView.SetMethodInfo(MethodInfo) ExecuteFunctionNodeView.InitializeSelfTargetPortView(string) ExecuteFunctionNodeView.SetNodeInstance(CeresNode) ExecuteFunctionNodeView.CompileNode() ExecuteFunctionNodeView.Validate(FlowGraphValidator) ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(FlowNode_ExecuteFunctionVoid), true)] public sealed class FlowNode_ExecuteFunctionVoidNodeView : ExecuteFunctionNodeView, ICeresNodeView Constructors FlowNode_ExecuteFunctionVoidNodeView(Type, CeresGraphView) Declaration public FlowNode_ExecuteFunctionVoidNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods FillMethodParametersPorts(MethodInfo) Declaration protected override void FillMethodParametersPorts(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Overrides ExecuteFunctionNodeView.FillMethodParametersPorts(MethodInfo) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_SwitchEnumNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_SwitchEnumNodeView.html",
    "title": "Class FlowNode_SwitchEnumNodeView | Ceres Documentation",
    "keywords": "Class FlowNode_SwitchEnumNodeView Node view for Inheritance object CeresNodeView ExecutableNodeView ExecutablePortArrayNodeView FlowNode_SwitchEnumNodeView Implements ICeresNodeView Inherited Members ExecutablePortArrayNodeView.PortLength ExecutablePortArrayNodeView.NodeReflection ExecutablePortArrayNodeView.SetNodeInstance(CeresNode) ExecutablePortArrayNodeView.CompileNode() ExecutablePortArrayNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutablePortArrayNodeView.AddPort(int) ExecutablePortArrayNodeView.RemovePort(int) ExecutablePortArrayNodeView.RemoveUnconnectedPorts() ExecutablePortArrayNodeView.ReorderDynamicPorts() ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(FlowNode_SwitchEnum), true)] public class FlowNode_SwitchEnumNodeView : ExecutablePortArrayNodeView, ICeresNodeView Constructors FlowNode_SwitchEnumNodeView(Type, CeresGraphView) Declaration public FlowNode_SwitchEnumNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods GetPortArrayElementDisplayName(int) Declaration protected override string GetPortArrayElementDisplayName(int index) Parameters Type Name Description int index Returns Type Description string Overrides ExecutablePortArrayNodeView.GetPortArrayElementDisplayName(int) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_SwitchStringNodeView.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Utilities.FlowNode_SwitchStringNodeView.html",
    "title": "Class FlowNode_SwitchStringNodeView | Ceres Documentation",
    "keywords": "Class FlowNode_SwitchStringNodeView Node view for Inheritance object CeresNodeView ExecutableNodeView ExecutablePortArrayNodeView FlowNode_SwitchStringNodeView Implements ICeresNodeView Inherited Members ExecutablePortArrayNodeView.PortLength ExecutablePortArrayNodeView.NodeReflection ExecutablePortArrayNodeView.CompileNode() ExecutablePortArrayNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) ExecutablePortArrayNodeView.AddPort(int) ExecutablePortArrayNodeView.RemovePort(int) ExecutablePortArrayNodeView.RemoveUnconnectedPorts() ExecutablePortArrayNodeView.ReorderDynamicPorts() ExecutableNodeView.Flags ExecutableNodeView.ExecutableNodeElement ExecutableNodeView.FlowGraphEditorWindow ExecutableNodeView.AddBreakpoint() ExecutableNodeView.RemoveBreakpoint() ExecutableNodeView.GetDefaultTooltip() ExecutableNodeView.Validate(FlowGraphValidator) CeresNodeView.Guid CeresNodeView.NodeElement CeresNodeView.GraphView CeresNodeView.NodeType CeresNodeView.NodeInstance CeresNodeView.FieldResolvers CeresNodeView.FieldInfos CeresNodeView.PortViews CeresNodeView.Initialize(Type, CeresGraphView) CeresNodeView.SetupNodeElement(NodeElement) CeresNodeView.OnSetupNodeElement() CeresNodeView.SetGraphOwner(CeresGraphView) CeresNodeView.OnSetGraphView() CeresNodeView.SetNodeInstanceType(Type) CeresNodeView.OnSetNodeInstanceType() CeresNodeView.FindPortView(string, int) CeresNodeView.FindPortViewWithDisplayName(string, int) CeresNodeView.FindPortViewWithDisplayType(Type, int) CeresNodeView.FindConnectablePortView(CeresPortView) CeresNodeView.GetAllPortViews() CeresNodeView.FindFieldResolver(string) CeresNodeView.FindFieldResolver<T>(string) CeresNodeView.FillDefaultNodeProperties() CeresNodeView.FillDefaultNodeTitle() CeresNodeView.FillDefaultNodePorts() CeresNodeView.GetContainerType() CeresNodeView.AddPortView(CeresPortView) CeresNodeView.RemovePortView(CeresPortView) CeresNodeView.ReconnectEdges() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [CustomNodeView(typeof(FlowNode_SwitchString))] public class FlowNode_SwitchStringNodeView : ExecutablePortArrayNodeView, ICeresNodeView Constructors FlowNode_SwitchStringNodeView(Type, CeresGraphView) Declaration public FlowNode_SwitchStringNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Methods GetPortArrayElementDisplayName(int) Declaration protected override string GetPortArrayElementDisplayName(int index) Parameters Type Name Description int index Returns Type Description string Overrides ExecutablePortArrayNodeView.GetPortArrayElementDisplayName(int) SetNodeInstance(CeresNode) Declaration public override void SetNodeInstance(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode Overrides ExecutablePortArrayNodeView.SetNodeInstance(CeresNode) Implements ICeresNodeView"
  },
  "api/Ceres.Editor.Graph.Flow.Utilities.html": {
    "href": "api/Ceres.Editor.Graph.Flow.Utilities.html",
    "title": "Namespace Ceres.Editor.Graph.Flow.Utilities | Ceres Documentation",
    "keywords": "Namespace Ceres.Editor.Graph.Flow.Utilities Classes ExecuteFunctionNodeView FlowNode_ExecuteEventNodeView Node view for FlowNode_ExecuteFunctionReturnNodeView FlowNode_ExecuteFunctionUberNodeView FlowNode_ExecuteFunctionVoidNodeView FlowNode_SwitchEnumNodeView Node view for FlowNode_SwitchStringNodeView Node view for"
  },
  "api/Ceres.Editor.Graph.GradientResolver.html": {
    "href": "api/Ceres.Editor.Graph.GradientResolver.html",
    "title": "Class GradientResolver | Ceres Documentation",
    "keywords": "Class GradientResolver Inheritance object FieldResolver<GradientField, Gradient> GradientResolver Implements IFieldResolver Inherited Members FieldResolver<GradientField, Gradient>.EditorField FieldResolver<GradientField, Gradient>.BaseField FieldResolver<GradientField, Gradient>.Value FieldResolver<GradientField, Gradient>.CreateField() FieldResolver<GradientField, Gradient>.Copy(IFieldResolver) FieldResolver<GradientField, Gradient>.Restore(object) FieldResolver<GradientField, Gradient>.Commit(object) FieldResolver<GradientField, Gradient>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<GradientField, Gradient>.IsAcceptable(Type, FieldInfo) FieldResolver<GradientField, Gradient>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class GradientResolver : FieldResolver<GradientField, Gradient>, IFieldResolver Constructors GradientResolver(FieldInfo) Declaration public GradientResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override GradientField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description GradientField Overrides Ceres.Editor.Graph.FieldResolver<GradientField, Gradient>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<GradientField, Gradient>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.html": {
    "href": "api/Ceres.Editor.Graph.html",
    "title": "Namespace Ceres.Editor.Graph | Ceres Documentation",
    "keywords": "Namespace Ceres.Editor.Graph Classes BoolResolver BoundsIntResolver BoundsResolver CeresBlackboard CeresBlackboardVariableRow Blackboard row for SharedVariable CeresDropdownMenuAction CeresEdge CeresEdgeListener Edge listener connecting CeresEdge between CeresPortElement CeresGraphEditorWindow CeresGraphEditorWindow<TContainer, TKWindow> CeresGraphEditorWindow<TContainer, TKWindow>.EditorWindowRegistry CeresGraphView CeresGraphViewExtensions CeresInfoContainer CeresNodeGroup CeresNodeSearchEntryBuilder Helper for build for CeresNodeSearchWindow CeresNodeSearchEntryData CeresNodeSearchWindow CeresNodeView CeresNodeViewExtensions CeresPortElement CeresPortView Port view for CeresNodeView CeresPortViewBinding ColorResolver ContextualMenuBuilder ContextualMenuRegistry CurveResolver DoubleResolver DragDropManipulator EnumField EnumListField<T> EnumListResolver<T> EnumResolver FieldResolver<TField, TKValue> FieldResolver<TField, TKValue, TFInterface> FieldResolverExtensions FieldResolverFactory FloatResolver GradientResolver IntResolver LayerMaskResolver LayerResolver ListField<T> ListResolver<T> LongResolver NodeAutoLayoutHelper NodeAutoLayoutHelper.TreeNode NodeGroupHandler NodeGroupHandler<TGroup> NodeSettingsElement NodeSettingsView NodeViewFactory NodeViewFactory.ResolverStructure NodeViewFactory.ResolverStructure.Comparer ObjectListField<T> ObjectListResolver<T> ObjectResolver ObjectTypeSearchWindow Search window for getting type PortConnectionChangeEvent PortViewExtensions PortViewFactory RectIntResolver RectResolver ResolveChildAttribute Use this attribute to let factory input child resolver as second constructor argument SerializedObjectField SerializedObjectFieldResolver SharedBoolResolver SharedDoubleResolver SharedFloatResolver SharedIntResolver SharedObjectField SharedObjectResolver SharedStringResolver SharedStringResolver.SharedStringField SharedTObjectField<T> SharedTObjectResolver<T> SharedVariableField<TVariable, TKValue> SharedVariableListField<T> SharedVariableListResolver<T> SharedVariableResolver<TVariable, TValue, TField> SharedVariableResolver<TVariable, TValue, TField>.Field SharedVector2IntResolver SharedVector2Resolver SharedVector3IntResolver SharedVector3Resolver StringListResolver StringResolver TagResolver VariableChangeEvent Vector2IntResolver Vector2Resolver Vector3IntResolver Vector3Resolver Vector4Resolver WrapField<T> WrapFieldResolver<T> Structs FieldResolverFactory.InlineIMGUIAutoScope NodeSearchContext Interfaces IBindableField ICeresEvent ICeresNodeView Interface for node views managed by CeresGraphView IContextualMenuBuilder IFieldResolver ILayoutNode INodeForLayoutConvertor INodeViewResolver Interface for custom node view resolver Enums CeresPortViewBinding.PortBindingType CeresPortViewFlags ContextualMenuType NodeAutoLayoutHelper.CalculateMode PortConnectionChangeType VariableChangeType Delegates ValueChangeDelegate"
  },
  "api/Ceres.Editor.Graph.IBindableField.html": {
    "href": "api/Ceres.Editor.Graph.IBindableField.html",
    "title": "Interface IBindableField | Ceres Documentation",
    "keywords": "Interface IBindableField Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public interface IBindableField Methods BindGraph(CeresGraphView) Declaration void BindGraph(CeresGraphView graph) Parameters Type Name Description CeresGraphView graph"
  },
  "api/Ceres.Editor.Graph.ICeresEvent.html": {
    "href": "api/Ceres.Editor.Graph.ICeresEvent.html",
    "title": "Interface ICeresEvent | Ceres Documentation",
    "keywords": "Interface ICeresEvent Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public interface ICeresEvent"
  },
  "api/Ceres.Editor.Graph.ICeresNodeView.html": {
    "href": "api/Ceres.Editor.Graph.ICeresNodeView.html",
    "title": "Interface ICeresNodeView | Ceres Documentation",
    "keywords": "Interface ICeresNodeView Interface for node views managed by CeresGraphView Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public interface ICeresNodeView Properties Guid Graph scope node view guid Declaration string Guid { get; } Property Value Type Description string NodeElement Node visual element of this view Declaration NodeElement NodeElement { get; } Property Value Type Description NodeElement"
  },
  "api/Ceres.Editor.Graph.IContextualMenuBuilder.html": {
    "href": "api/Ceres.Editor.Graph.IContextualMenuBuilder.html",
    "title": "Interface IContextualMenuBuilder | Ceres Documentation",
    "keywords": "Interface IContextualMenuBuilder Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public interface IContextualMenuBuilder Properties MenuType Declaration ContextualMenuType MenuType { get; } Property Value Type Description ContextualMenuType Methods BuildContextualMenu(ContextualMenuPopulateEvent) Declaration void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt CanBuild(Type) Declaration bool CanBuild(Type hostType) Parameters Type Name Description System.Type hostType Returns Type Description bool"
  },
  "api/Ceres.Editor.Graph.IFieldResolver.html": {
    "href": "api/Ceres.Editor.Graph.IFieldResolver.html",
    "title": "Interface IFieldResolver | Ceres Documentation",
    "keywords": "Interface IFieldResolver Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public interface IFieldResolver Properties EditorField Get field resolver's visual input element Declaration VisualElement EditorField { get; } Property Value Type Description VisualElement Value Declaration object Value { get; set; } Property Value Type Description object Methods Commit(object) Declaration void Commit(object @object) Parameters Type Name Description object object Copy(IFieldResolver) Declaration void Copy(IFieldResolver resolver) Parameters Type Name Description IFieldResolver resolver CreateField() Create new visual input element Declaration VisualElement CreateField() Returns Type Description VisualElement IsAcceptable(Type, FieldInfo) Whether this resolver can accept field Declaration bool IsAcceptable(Type fieldValueType, FieldInfo fieldInfo) Parameters Type Name Description System.Type fieldValueType FieldInfo fieldInfo Returns Type Description bool RegisterValueChangeCallback(ValueChangeDelegate) Register a typeless object value change callback Declaration void RegisterValueChangeCallback(ValueChangeDelegate fieldChangeCallback) Parameters Type Name Description ValueChangeDelegate fieldChangeCallback Restore(object) Declaration void Restore(object @object) Parameters Type Name Description object object"
  },
  "api/Ceres.Editor.Graph.ILayoutNode.html": {
    "href": "api/Ceres.Editor.Graph.ILayoutNode.html",
    "title": "Interface ILayoutNode | Ceres Documentation",
    "keywords": "Interface ILayoutNode Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public interface ILayoutNode Properties View Declaration VisualElement View { get; } Property Value Type Description VisualElement Methods GetLayoutChildren() Declaration IReadOnlyList<ILayoutNode> GetLayoutChildren() Returns Type Description System.Collections.Generic.IReadOnlyList<T><ILayoutNode>"
  },
  "api/Ceres.Editor.Graph.INodeForLayoutConvertor.html": {
    "href": "api/Ceres.Editor.Graph.INodeForLayoutConvertor.html",
    "title": "Interface INodeForLayoutConvertor | Ceres Documentation",
    "keywords": "Interface INodeForLayoutConvertor Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public interface INodeForLayoutConvertor Properties LayoutRootNode Declaration NodeAutoLayoutHelper.TreeNode LayoutRootNode { get; } Property Value Type Description NodeAutoLayoutHelper.TreeNode SiblingDistance Declaration float SiblingDistance { get; } Property Value Type Description float Methods LayoutNode2PrimNode() Declaration void LayoutNode2PrimNode() PrimNode2LayoutNode() Declaration NodeAutoLayoutHelper.TreeNode PrimNode2LayoutNode() Returns Type Description NodeAutoLayoutHelper.TreeNode"
  },
  "api/Ceres.Editor.Graph.INodeViewResolver.html": {
    "href": "api/Ceres.Editor.Graph.INodeViewResolver.html",
    "title": "Interface INodeViewResolver | Ceres Documentation",
    "keywords": "Interface INodeViewResolver Interface for custom node view resolver Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public interface INodeViewResolver Methods CreateNodeView(Type, CeresGraphView) Declaration ICeresNodeView CreateNodeView(Type type, CeresGraphView graphView) Parameters Type Name Description System.Type type CeresGraphView graphView Returns Type Description ICeresNodeView IsAcceptable(Type) Declaration bool IsAcceptable(Type nodeType) Parameters Type Name Description System.Type nodeType Returns Type Description bool"
  },
  "api/Ceres.Editor.Graph.IntResolver.html": {
    "href": "api/Ceres.Editor.Graph.IntResolver.html",
    "title": "Class IntResolver | Ceres Documentation",
    "keywords": "Class IntResolver Inheritance object FieldResolver<IntegerField, int> IntResolver Implements IFieldResolver Inherited Members FieldResolver<IntegerField, int>.EditorField FieldResolver<IntegerField, int>.BaseField FieldResolver<IntegerField, int>.Value FieldResolver<IntegerField, int>.CreateField() FieldResolver<IntegerField, int>.Copy(IFieldResolver) FieldResolver<IntegerField, int>.Restore(object) FieldResolver<IntegerField, int>.Commit(object) FieldResolver<IntegerField, int>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<IntegerField, int>.IsAcceptable(Type, FieldInfo) FieldResolver<IntegerField, int>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class IntResolver : FieldResolver<IntegerField, int>, IFieldResolver Constructors IntResolver(FieldInfo) Declaration public IntResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override IntegerField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description IntegerField Overrides Ceres.Editor.Graph.FieldResolver<IntegerField, int>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<IntegerField, int>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.LayerMaskResolver.html": {
    "href": "api/Ceres.Editor.Graph.LayerMaskResolver.html",
    "title": "Class LayerMaskResolver | Ceres Documentation",
    "keywords": "Class LayerMaskResolver Inheritance object FieldResolver<LayerMaskField, int> LayerMaskResolver Implements IFieldResolver Inherited Members FieldResolver<LayerMaskField, int>.EditorField FieldResolver<LayerMaskField, int>.BaseField FieldResolver<LayerMaskField, int>.Value FieldResolver<LayerMaskField, int>.CreateField() FieldResolver<LayerMaskField, int>.Copy(IFieldResolver) FieldResolver<LayerMaskField, int>.Restore(object) FieldResolver<LayerMaskField, int>.Commit(object) FieldResolver<LayerMaskField, int>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<LayerMaskField, int>.IsAcceptable(Type, FieldInfo) FieldResolver<LayerMaskField, int>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class LayerMaskResolver : FieldResolver<LayerMaskField, int>, IFieldResolver Constructors LayerMaskResolver(FieldInfo) Declaration public LayerMaskResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override LayerMaskField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description LayerMaskField Overrides Ceres.Editor.Graph.FieldResolver<LayerMaskField, int>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<LayerMaskField, int>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.LayerResolver.html": {
    "href": "api/Ceres.Editor.Graph.LayerResolver.html",
    "title": "Class LayerResolver | Ceres Documentation",
    "keywords": "Class LayerResolver Inheritance object FieldResolver<LayerField, int> LayerResolver Implements IFieldResolver Inherited Members FieldResolver<LayerField, int>.EditorField FieldResolver<LayerField, int>.BaseField FieldResolver<LayerField, int>.Value FieldResolver<LayerField, int>.CreateField() FieldResolver<LayerField, int>.Copy(IFieldResolver) FieldResolver<LayerField, int>.Restore(object) FieldResolver<LayerField, int>.Commit(object) FieldResolver<LayerField, int>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<LayerField, int>.IsAcceptable(Type, FieldInfo) FieldResolver<LayerField, int>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax [Ordered(100)] public class LayerResolver : FieldResolver<LayerField, int>, IFieldResolver Constructors LayerResolver(FieldInfo) Declaration public LayerResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override LayerField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description LayerField Overrides Ceres.Editor.Graph.FieldResolver<LayerField, int>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<LayerField, int>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.ListField-1.html": {
    "href": "api/Ceres.Editor.Graph.ListField-1.html",
    "title": "Class ListField<T> | Ceres Documentation",
    "keywords": "Class ListField<T> Inheritance object ListField<T> EnumListField<T> ObjectListField<T> SharedVariableListField<T> Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class ListField<T> : BaseField<List<T>> Type Parameters Name Description T Constructors ListField(string, Func<VisualElement>, Func<object>) Declaration public ListField(string label, Func<VisualElement> elementCreator, Func<object> valueCreator) Parameters Type Name Description string label System.Func<TResult><VisualElement> elementCreator System.Func<TResult><object> valueCreator Fields ElementCreator Declaration protected readonly Func<VisualElement> ElementCreator Field Value Type Description System.Func<TResult><VisualElement> Properties value Declaration public override sealed List<T> value { get; set; } Property Value Type Description System.Collections.Generic.List<T><T> Methods GetListItemHeight() Declaration protected virtual int GetListItemHeight() Returns Type Description int OnBindListItem(VisualElement, int) Declaration protected virtual void OnBindListItem(VisualElement e, int i) Parameters Type Name Description VisualElement e int i OnMakeListItem() Declaration protected virtual VisualElement OnMakeListItem() Returns Type Description VisualElement OnRequestAddListItem() Declaration protected virtual void OnRequestAddListItem()"
  },
  "api/Ceres.Editor.Graph.ListResolver-1.html": {
    "href": "api/Ceres.Editor.Graph.ListResolver-1.html",
    "title": "Class ListResolver<T> | Ceres Documentation",
    "keywords": "Class ListResolver<T> Inheritance object FieldResolver<ListField<T>, System.Collections.Generic.List<T><T>> FieldResolver<ListField<T>, System.Collections.Generic.List<T><T>, IList<T>> ListResolver<T> EnumListResolver<T> ObjectListResolver<T> SharedVariableListResolver<T> StringListResolver Implements IFieldResolver Inherited Members FieldResolver<ListField<T>, List<T>, IList<T>>.Value FieldResolver<ListField<T>, List<T>, IList<T>>.ValueSetter FieldResolver<ListField<T>, List<T>, IList<T>>.ValueGetter FieldResolver<ListField<T>, List<T>>.EditorField FieldResolver<ListField<T>, List<T>>.BaseField FieldResolver<ListField<T>, List<T>>.Value FieldResolver<ListField<T>, List<T>>.CreateField() FieldResolver<ListField<T>, List<T>>.Copy(IFieldResolver) FieldResolver<ListField<T>, List<T>>.Restore(object) FieldResolver<ListField<T>, List<T>>.Commit(object) FieldResolver<ListField<T>, List<T>>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<ListField<T>, List<T>>.IsAcceptable(Type, FieldInfo) FieldResolver<ListField<T>, List<T>>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class ListResolver<T> : FieldResolver<ListField<T>, List<T>, IList<T>>, IFieldResolver Type Parameters Name Description T Constructors ListResolver(FieldInfo, IFieldResolver) Declaration public ListResolver(FieldInfo fieldInfo, IFieldResolver resolver) Parameters Type Name Description FieldInfo fieldInfo IFieldResolver resolver Fields ChildResolver Declaration protected readonly IFieldResolver ChildResolver Field Value Type Description IFieldResolver Methods CreateEditorField(FieldInfo) Declaration protected override ListField<T> CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description ListField<T> Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.ListField<T>, System.Collections.Generic.List<T>>.CreateEditorField(FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.LongResolver.html": {
    "href": "api/Ceres.Editor.Graph.LongResolver.html",
    "title": "Class LongResolver | Ceres Documentation",
    "keywords": "Class LongResolver Inheritance object FieldResolver<LongField, long> LongResolver Implements IFieldResolver Inherited Members FieldResolver<LongField, long>.EditorField FieldResolver<LongField, long>.BaseField FieldResolver<LongField, long>.Value FieldResolver<LongField, long>.CreateField() FieldResolver<LongField, long>.Copy(IFieldResolver) FieldResolver<LongField, long>.Restore(object) FieldResolver<LongField, long>.Commit(object) FieldResolver<LongField, long>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<LongField, long>.IsAcceptable(Type, FieldInfo) FieldResolver<LongField, long>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class LongResolver : FieldResolver<LongField, long>, IFieldResolver Constructors LongResolver(FieldInfo) Declaration public LongResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override LongField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description LongField Overrides Ceres.Editor.Graph.FieldResolver<LongField, long>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<LongField, long>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.NodeAutoLayoutHelper.CalculateMode.html": {
    "href": "api/Ceres.Editor.Graph.NodeAutoLayoutHelper.CalculateMode.html",
    "title": "Enum NodeAutoLayoutHelper.CalculateMode | Ceres Documentation",
    "keywords": "Enum NodeAutoLayoutHelper.CalculateMode Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax [Flags] public enum NodeAutoLayoutHelper.CalculateMode Fields Name Description Horizontal Negative Positive Vertical"
  },
  "api/Ceres.Editor.Graph.NodeAutoLayoutHelper.html": {
    "href": "api/Ceres.Editor.Graph.NodeAutoLayoutHelper.html",
    "title": "Class NodeAutoLayoutHelper | Ceres Documentation",
    "keywords": "Class NodeAutoLayoutHelper Inheritance object NodeAutoLayoutHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public static class NodeAutoLayoutHelper Methods Layout(INodeForLayoutConvertor) Declaration public static void Layout(this INodeForLayoutConvertor nodeForLayoutConvertor) Parameters Type Name Description INodeForLayoutConvertor nodeForLayoutConvertor"
  },
  "api/Ceres.Editor.Graph.NodeAutoLayoutHelper.TreeNode.html": {
    "href": "api/Ceres.Editor.Graph.NodeAutoLayoutHelper.TreeNode.html",
    "title": "Class NodeAutoLayoutHelper.TreeNode | Ceres Documentation",
    "keywords": "Class NodeAutoLayoutHelper.TreeNode Inheritance object NodeAutoLayoutHelper.TreeNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class NodeAutoLayoutHelper.TreeNode Constructors TreeNode(float, float, float, CalculateMode) Declaration public TreeNode(float w, float h, float y, NodeAutoLayoutHelper.CalculateMode calculateMode = CalculateMode.Vertical | CalculateMode.Positive) Parameters Type Name Description float w float h float y NodeAutoLayoutHelper.CalculateMode calculateMode Fields CalculateMode Declaration public readonly NodeAutoLayoutHelper.CalculateMode CalculateMode Field Value Type Description NodeAutoLayoutHelper.CalculateMode change Declaration public float change Field Value Type Description float children Declaration public readonly List<NodeAutoLayoutHelper.TreeNode> children Field Value Type Description System.Collections.Generic.List<T><NodeAutoLayoutHelper.TreeNode> el Declaration public NodeAutoLayoutHelper.TreeNode el Field Value Type Description NodeAutoLayoutHelper.TreeNode er Declaration public NodeAutoLayoutHelper.TreeNode er Field Value Type Description NodeAutoLayoutHelper.TreeNode h Declaration public float h Field Value Type Description float mod Declaration public float mod Field Value Type Description float msel Declaration public float msel Field Value Type Description float mser Declaration public float mser Field Value Type Description float prelim Declaration public float prelim Field Value Type Description float shift Declaration public float shift Field Value Type Description float tl Declaration public NodeAutoLayoutHelper.TreeNode tl Field Value Type Description NodeAutoLayoutHelper.TreeNode tr Declaration public NodeAutoLayoutHelper.TreeNode tr Field Value Type Description NodeAutoLayoutHelper.TreeNode w Declaration public float w Field Value Type Description float x Declaration public float x Field Value Type Description float y Declaration public float y Field Value Type Description float Properties ChildrenCount Declaration public int ChildrenCount { get; } Property Value Type Description int Methods AddChild(TreeNode) Declaration public void AddChild(NodeAutoLayoutHelper.TreeNode child) Parameters Type Name Description NodeAutoLayoutHelper.TreeNode child GetPos() Declaration public Vector2 GetPos() Returns Type Description Vector2"
  },
  "api/Ceres.Editor.Graph.NodeGroupHandler-1.html": {
    "href": "api/Ceres.Editor.Graph.NodeGroupHandler-1.html",
    "title": "Class NodeGroupHandler<TGroup> | Ceres Documentation",
    "keywords": "Class NodeGroupHandler<TGroup> Inheritance object NodeGroupHandler NodeGroupHandler<TGroup> ExecutableNodeGroupHandler Inherited Members NodeGroupHandler.GraphView NodeGroupHandler.DoGroup() NodeGroupHandler.RestoreGroups(List<NodeGroup>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class NodeGroupHandler<TGroup> : NodeGroupHandler where TGroup : CeresNodeGroup, new() Type Parameters Name Description TGroup Constructors NodeGroupHandler(CeresGraphView) Declaration public NodeGroupHandler(CeresGraphView graphView) Parameters Type Name Description CeresGraphView graphView Methods CreateGroup(Rect, NodeGroup) Declaration public override Group CreateGroup(Rect rect, NodeGroup dataData = null) Parameters Type Name Description Rect rect NodeGroup dataData Returns Type Description Group Overrides NodeGroupHandler.CreateGroup(Rect, NodeGroup) DoUnGroup() Declaration public override void DoUnGroup() Overrides NodeGroupHandler.DoUnGroup()"
  },
  "api/Ceres.Editor.Graph.NodeGroupHandler.html": {
    "href": "api/Ceres.Editor.Graph.NodeGroupHandler.html",
    "title": "Class NodeGroupHandler | Ceres Documentation",
    "keywords": "Class NodeGroupHandler Inheritance object NodeGroupHandler NodeGroupHandler<TGroup> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public abstract class NodeGroupHandler Constructors NodeGroupHandler(CeresGraphView) Declaration protected NodeGroupHandler(CeresGraphView graphView) Parameters Type Name Description CeresGraphView graphView Properties GraphView Declaration protected CeresGraphView GraphView { get; } Property Value Type Description CeresGraphView Methods CreateGroup(Rect, NodeGroup) Declaration public abstract Group CreateGroup(Rect rect, NodeGroup dataData = null) Parameters Type Name Description Rect rect NodeGroup dataData Returns Type Description Group DoGroup() Declaration public virtual void DoGroup() DoUnGroup() Declaration public abstract void DoUnGroup() RestoreGroups(List<NodeGroup>) Declaration public List<Group> RestoreGroups(List<NodeGroup> nodeGroups) Parameters Type Name Description System.Collections.Generic.List<T><NodeGroup> nodeGroups Returns Type Description System.Collections.Generic.List<T><Group>"
  },
  "api/Ceres.Editor.Graph.NodeSearchContext.html": {
    "href": "api/Ceres.Editor.Graph.NodeSearchContext.html",
    "title": "Struct NodeSearchContext | Ceres Documentation",
    "keywords": "Struct NodeSearchContext Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public struct NodeSearchContext Fields AllowGeneric Declaration public bool AllowGeneric Field Value Type Description bool Default Declaration public static readonly NodeSearchContext Default Field Value Type Description NodeSearchContext HideGroups Declaration public string[] HideGroups Field Value Type Description string[] ParameterType Declaration public Type ParameterType Field Value Type Description System.Type RequestPortView Declaration public CeresPortView RequestPortView Field Value Type Description CeresPortView ShowGroups Declaration public string[] ShowGroups Field Value Type Description string[]"
  },
  "api/Ceres.Editor.Graph.NodeSettingsElement.html": {
    "href": "api/Ceres.Editor.Graph.NodeSettingsElement.html",
    "title": "Class NodeSettingsElement | Ceres Documentation",
    "keywords": "Class NodeSettingsElement Inheritance object NodeSettingsElement Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class NodeSettingsElement : VisualElement Constructors NodeSettingsElement() Declaration public NodeSettingsElement() Properties contentContainer Declaration public override VisualElement contentContainer { get; } Property Value Type Description VisualElement Label Declaration public Label Label { get; } Property Value Type Description Label"
  },
  "api/Ceres.Editor.Graph.NodeSettingsView.html": {
    "href": "api/Ceres.Editor.Graph.NodeSettingsView.html",
    "title": "Class NodeSettingsView | Ceres Documentation",
    "keywords": "Class NodeSettingsView Inheritance object NodeSettingsView CustomFunctionInputSettingsView CustomFunctionOutputSettingsView Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class NodeSettingsView Constructors NodeSettingsView() Declaration public NodeSettingsView() Properties NodeView Declaration public ICeresNodeView NodeView { get; } Property Value Type Description ICeresNodeView SettingsElement Declaration public NodeSettingsElement SettingsElement { get; } Property Value Type Description NodeSettingsElement Methods DisableSettings() Declaration public void DisableSettings() OnAttach() Declaration protected virtual void OnAttach()"
  },
  "api/Ceres.Editor.Graph.NodeViewFactory.html": {
    "href": "api/Ceres.Editor.Graph.NodeViewFactory.html",
    "title": "Class NodeViewFactory | Ceres Documentation",
    "keywords": "Class NodeViewFactory Inheritance object NodeViewFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public sealed class NodeViewFactory Methods CreateInstance(Type, CeresGraphView) Create node view instance Declaration public ICeresNodeView CreateInstance(Type nodeType, CeresGraphView graphView) Parameters Type Name Description System.Type nodeType CeresGraphView graphView Returns Type Description ICeresNodeView CreateInstanceResolved(Type, CeresGraphView, params Type[]) Create node view instance with generic resolving Declaration public ICeresNodeView CreateInstanceResolved(Type nodeType, CeresGraphView graphView, params Type[] genericArguments) Parameters Type Name Description System.Type nodeType CeresGraphView graphView System.Type[] genericArguments Returns Type Description ICeresNodeView Get() Declaration public static NodeViewFactory Get() Returns Type Description NodeViewFactory"
  },
  "api/Ceres.Editor.Graph.NodeViewFactory.ResolverStructure.Comparer.html": {
    "href": "api/Ceres.Editor.Graph.NodeViewFactory.ResolverStructure.Comparer.html",
    "title": "Class NodeViewFactory.ResolverStructure.Comparer | Ceres Documentation",
    "keywords": "Class NodeViewFactory.ResolverStructure.Comparer Inheritance object NodeViewFactory.ResolverStructure.Comparer Implements System.Collections.Generic.IComparer<T><NodeViewFactory.ResolverStructure> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class NodeViewFactory.ResolverStructure.Comparer : IComparer<NodeViewFactory.ResolverStructure> Methods Compare(ResolverStructure, ResolverStructure) Declaration public int Compare(NodeViewFactory.ResolverStructure a, NodeViewFactory.ResolverStructure b) Parameters Type Name Description NodeViewFactory.ResolverStructure a NodeViewFactory.ResolverStructure b Returns Type Description int Implements System.Collections.Generic.IComparer<T>"
  },
  "api/Ceres.Editor.Graph.NodeViewFactory.ResolverStructure.html": {
    "href": "api/Ceres.Editor.Graph.NodeViewFactory.ResolverStructure.html",
    "title": "Class NodeViewFactory.ResolverStructure | Ceres Documentation",
    "keywords": "Class NodeViewFactory.ResolverStructure Inheritance object NodeViewFactory.ResolverStructure Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class NodeViewFactory.ResolverStructure Constructors ResolverStructure(Type) Declaration public ResolverStructure(Type type) Parameters Type Name Description System.Type type Fields CustomNodeViewAttribute Declaration public readonly CustomNodeViewAttribute CustomNodeViewAttribute Field Value Type Description CustomNodeViewAttribute Type Declaration public readonly Type Type Field Value Type Description System.Type Methods IsAcceptable(Type) Declaration public bool IsAcceptable(Type inType) Parameters Type Name Description System.Type inType Returns Type Description bool"
  },
  "api/Ceres.Editor.Graph.ObjectListField-1.html": {
    "href": "api/Ceres.Editor.Graph.ObjectListField-1.html",
    "title": "Class ObjectListField<T> | Ceres Documentation",
    "keywords": "Class ObjectListField<T> Inheritance object ListField<T> ObjectListField<T> Inherited Members ListField<T>.ElementCreator ListField<T>.GetListItemHeight() ListField<T>.OnBindListItem(VisualElement, int) ListField<T>.OnRequestAddListItem() ListField<T>.value Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class ObjectListField<T> : ListField<T> where T : UObject Type Parameters Name Description T Constructors ObjectListField(string, Func<VisualElement>, Func<object>) Declaration public ObjectListField(string label, Func<VisualElement> elementCreator, Func<object> valueCreator) Parameters Type Name Description string label System.Func<TResult><VisualElement> elementCreator System.Func<TResult><object> valueCreator Methods OnMakeListItem() Declaration protected override VisualElement OnMakeListItem() Returns Type Description VisualElement Overrides Ceres.Editor.Graph.ListField<T>.OnMakeListItem()"
  },
  "api/Ceres.Editor.Graph.ObjectListResolver-1.html": {
    "href": "api/Ceres.Editor.Graph.ObjectListResolver-1.html",
    "title": "Class ObjectListResolver<T> | Ceres Documentation",
    "keywords": "Class ObjectListResolver<T> Inheritance object FieldResolver<ListField<T>, System.Collections.Generic.List<T><T>> FieldResolver<ListField<T>, System.Collections.Generic.List<T><T>, IList<T>> ListResolver<T> ObjectListResolver<T> Implements IFieldResolver Inherited Members ListResolver<T>.ChildResolver FieldResolver<ListField<T>, List<T>, IList<T>>.Value FieldResolver<ListField<T>, List<T>, IList<T>>.ValueSetter FieldResolver<ListField<T>, List<T>, IList<T>>.ValueGetter FieldResolver<ListField<T>, List<T>>.EditorField FieldResolver<ListField<T>, List<T>>.BaseField FieldResolver<ListField<T>, List<T>>.Value FieldResolver<ListField<T>, List<T>>.CreateField() FieldResolver<ListField<T>, List<T>>.Copy(IFieldResolver) FieldResolver<ListField<T>, List<T>>.Restore(object) FieldResolver<ListField<T>, List<T>>.Commit(object) FieldResolver<ListField<T>, List<T>>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<ListField<T>, List<T>>.IsAcceptable(Type, FieldInfo) FieldResolver<ListField<T>, List<T>>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class ObjectListResolver<T> : ListResolver<T>, IFieldResolver where T : UnityEngine.Object Type Parameters Name Description T Constructors ObjectListResolver(FieldInfo) Declaration public ObjectListResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override ListField<T> CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description ListField<T> Overrides Ceres.Editor.Graph.ListResolver<T>.CreateEditorField(FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.ObjectResolver.html": {
    "href": "api/Ceres.Editor.Graph.ObjectResolver.html",
    "title": "Class ObjectResolver | Ceres Documentation",
    "keywords": "Class ObjectResolver Inheritance object FieldResolver<ObjectField, UnityEngine.Object> ObjectResolver Implements IFieldResolver Inherited Members FieldResolver<ObjectField, UnityEngine.Object>.EditorField FieldResolver<ObjectField, UnityEngine.Object>.BaseField FieldResolver<ObjectField, UnityEngine.Object>.Value FieldResolver<ObjectField, UnityEngine.Object>.CreateField() FieldResolver<ObjectField, UnityEngine.Object>.Copy(IFieldResolver) FieldResolver<ObjectField, UnityEngine.Object>.Restore(object) FieldResolver<ObjectField, UnityEngine.Object>.Commit(object) FieldResolver<ObjectField, UnityEngine.Object>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<ObjectField, UnityEngine.Object>.IsAcceptable(Type, FieldInfo) FieldResolver<ObjectField, UnityEngine.Object>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class ObjectResolver : FieldResolver<ObjectField, UnityEngine.Object>, IFieldResolver Constructors ObjectResolver(FieldInfo) Declaration public ObjectResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override ObjectField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description ObjectField Overrides Ceres.Editor.Graph.FieldResolver<ObjectField, UnityEngine.Object>.CreateEditorField(FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.ObjectTypeSearchWindow.html": {
    "href": "api/Ceres.Editor.Graph.ObjectTypeSearchWindow.html",
    "title": "Class ObjectTypeSearchWindow | Ceres Documentation",
    "keywords": "Class ObjectTypeSearchWindow Search window for getting type Inheritance object ObjectTypeSearchWindow Implements ISearchWindowProvider Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class ObjectTypeSearchWindow : ScriptableObject, ISearchWindowProvider Methods Initialize(Action<Type>, Type, Func<IEnumerable<Type>, IEnumerable<Type>>) Declaration public void Initialize(Action<Type> typeSelectCallBack, Type baseType = null, Func<IEnumerable<Type>, IEnumerable<Type>> customTypeProvideFunc = null) Parameters Type Name Description System.Action<T><System.Type> typeSelectCallBack System.Type baseType System.Func<T, TResult><System.Collections.Generic.IEnumerable<T><System.Type>, System.Collections.Generic.IEnumerable<T><System.Type>> customTypeProvideFunc Implements ISearchWindowProvider"
  },
  "api/Ceres.Editor.Graph.PortConnectionChangeEvent.html": {
    "href": "api/Ceres.Editor.Graph.PortConnectionChangeEvent.html",
    "title": "Class PortConnectionChangeEvent | Ceres Documentation",
    "keywords": "Class PortConnectionChangeEvent Inheritance object PortConnectionChangeEvent Implements ICeresEvent Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class PortConnectionChangeEvent : EventBase<PortConnectionChangeEvent>, ICeresEvent Properties ConnectionChangeType Declaration public PortConnectionChangeType ConnectionChangeType { get; } Property Value Type Description PortConnectionChangeType Edge Declaration public CeresEdge Edge { get; } Property Value Type Description CeresEdge PortView Declaration public CeresPortView PortView { get; } Property Value Type Description CeresPortView Methods GetPooled(CeresPortView, CeresEdge, PortConnectionChangeType) Declaration public static PortConnectionChangeEvent GetPooled(CeresPortView portView, CeresEdge edge, PortConnectionChangeType connectionChangeType) Parameters Type Name Description CeresPortView portView CeresEdge edge PortConnectionChangeType connectionChangeType Returns Type Description PortConnectionChangeEvent Implements ICeresEvent"
  },
  "api/Ceres.Editor.Graph.PortConnectionChangeType.html": {
    "href": "api/Ceres.Editor.Graph.PortConnectionChangeType.html",
    "title": "Enum PortConnectionChangeType | Ceres Documentation",
    "keywords": "Enum PortConnectionChangeType Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public enum PortConnectionChangeType Fields Name Description Connect Disconnect"
  },
  "api/Ceres.Editor.Graph.PortViewExtensions.html": {
    "href": "api/Ceres.Editor.Graph.PortViewExtensions.html",
    "title": "Class PortViewExtensions | Ceres Documentation",
    "keywords": "Class PortViewExtensions Inheritance object PortViewExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public static class PortViewExtensions Methods HidePort(CeresPortView) Hide port in node view Declaration public static void HidePort(this CeresPortView portView) Parameters Type Name Description CeresPortView portView IsVisible(CeresPortView) Whether port is visible Declaration public static bool IsVisible(this CeresPortView portView) Parameters Type Name Description CeresPortView portView Returns Type Description bool ShowPort(CeresPortView) Show port in node view Declaration public static void ShowPort(this CeresPortView portView) Parameters Type Name Description CeresPortView portView"
  },
  "api/Ceres.Editor.Graph.PortViewFactory.html": {
    "href": "api/Ceres.Editor.Graph.PortViewFactory.html",
    "title": "Class PortViewFactory | Ceres Documentation",
    "keywords": "Class PortViewFactory Inheritance object PortViewFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public static class PortViewFactory Methods CreateInstance(FieldInfo, CeresNodeView, CeresPortData) Create port view from Declaration public static CeresPortView CreateInstance(FieldInfo fieldInfo, CeresNodeView nodeView, CeresPortData portData = null) Parameters Type Name Description FieldInfo fieldInfo CeresNodeView nodeView CeresPortData portData Returns Type Description CeresPortView CreateInstance(FieldInfo, FieldInfo, CeresNodeView, CeresPortData) Create port view from redirected Declaration public static CeresPortView CreateInstance(FieldInfo portFieldInfo, FieldInfo valueFieldInfo, CeresNodeView nodeView, CeresPortData portData = null) Parameters Type Name Description FieldInfo portFieldInfo FieldInfo valueFieldInfo CeresNodeView nodeView CeresPortData portData Returns Type Description CeresPortView CreateInstance(FieldInfo, ParameterInfo, CeresNodeView, CeresPortData) Create port view from redirected Declaration public static CeresPortView CreateInstance(FieldInfo portFieldInfo, ParameterInfo parameterInfo, CeresNodeView nodeView, CeresPortData portData = null) Parameters Type Name Description FieldInfo portFieldInfo ParameterInfo parameterInfo CeresNodeView nodeView CeresPortData portData Returns Type Description CeresPortView"
  },
  "api/Ceres.Editor.Graph.RectIntResolver.html": {
    "href": "api/Ceres.Editor.Graph.RectIntResolver.html",
    "title": "Class RectIntResolver | Ceres Documentation",
    "keywords": "Class RectIntResolver Inheritance object FieldResolver<RectIntField, RectInt> RectIntResolver Implements IFieldResolver Inherited Members FieldResolver<RectIntField, RectInt>.EditorField FieldResolver<RectIntField, RectInt>.BaseField FieldResolver<RectIntField, RectInt>.Value FieldResolver<RectIntField, RectInt>.CreateField() FieldResolver<RectIntField, RectInt>.Copy(IFieldResolver) FieldResolver<RectIntField, RectInt>.Restore(object) FieldResolver<RectIntField, RectInt>.Commit(object) FieldResolver<RectIntField, RectInt>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<RectIntField, RectInt>.IsAcceptable(Type, FieldInfo) FieldResolver<RectIntField, RectInt>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class RectIntResolver : FieldResolver<RectIntField, RectInt>, IFieldResolver Constructors RectIntResolver(FieldInfo) Declaration public RectIntResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override RectIntField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description RectIntField Overrides Ceres.Editor.Graph.FieldResolver<RectIntField, RectInt>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<RectIntField, RectInt>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.RectResolver.html": {
    "href": "api/Ceres.Editor.Graph.RectResolver.html",
    "title": "Class RectResolver | Ceres Documentation",
    "keywords": "Class RectResolver Inheritance object FieldResolver<RectField, Rect> RectResolver Implements IFieldResolver Inherited Members FieldResolver<RectField, Rect>.EditorField FieldResolver<RectField, Rect>.BaseField FieldResolver<RectField, Rect>.Value FieldResolver<RectField, Rect>.CreateField() FieldResolver<RectField, Rect>.Copy(IFieldResolver) FieldResolver<RectField, Rect>.Restore(object) FieldResolver<RectField, Rect>.Commit(object) FieldResolver<RectField, Rect>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<RectField, Rect>.IsAcceptable(Type, FieldInfo) FieldResolver<RectField, Rect>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class RectResolver : FieldResolver<RectField, Rect>, IFieldResolver Constructors RectResolver(FieldInfo) Declaration public RectResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override RectField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description RectField Overrides Ceres.Editor.Graph.FieldResolver<RectField, Rect>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<RectField, Rect>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.ResolveChildAttribute.html": {
    "href": "api/Ceres.Editor.Graph.ResolveChildAttribute.html",
    "title": "Class ResolveChildAttribute | Ceres Documentation",
    "keywords": "Class ResolveChildAttribute Use this attribute to let factory input child resolver as second constructor argument Inheritance object System.Attribute ResolveChildAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class)] public sealed class ResolveChildAttribute : Attribute"
  },
  "api/Ceres.Editor.Graph.SerializedObjectField.html": {
    "href": "api/Ceres.Editor.Graph.SerializedObjectField.html",
    "title": "Class SerializedObjectField | Ceres Documentation",
    "keywords": "Class SerializedObjectField Inheritance object SerializedObjectField Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SerializedObjectField : BaseField<SerializedObjectBase> Constructors SerializedObjectField(string, IMGUIContainer) Declaration public SerializedObjectField(string label, IMGUIContainer container) Parameters Type Name Description string label IMGUIContainer container SerializedObjectField(string) Declaration public SerializedObjectField(string label) Parameters Type Name Description string label Properties value Declaration public override SerializedObjectBase value { get; set; } Property Value Type Description SerializedObjectBase"
  },
  "api/Ceres.Editor.Graph.SerializedObjectFieldResolver.html": {
    "href": "api/Ceres.Editor.Graph.SerializedObjectFieldResolver.html",
    "title": "Class SerializedObjectFieldResolver | Ceres Documentation",
    "keywords": "Class SerializedObjectFieldResolver Inheritance object FieldResolver<SerializedObjectField, SerializedObjectBase> SerializedObjectFieldResolver Implements IFieldResolver Inherited Members FieldResolver<SerializedObjectField, SerializedObjectBase>.EditorField FieldResolver<SerializedObjectField, SerializedObjectBase>.BaseField FieldResolver<SerializedObjectField, SerializedObjectBase>.Value FieldResolver<SerializedObjectField, SerializedObjectBase>.CreateField() FieldResolver<SerializedObjectField, SerializedObjectBase>.Copy(IFieldResolver) FieldResolver<SerializedObjectField, SerializedObjectBase>.Restore(object) FieldResolver<SerializedObjectField, SerializedObjectBase>.Commit(object) FieldResolver<SerializedObjectField, SerializedObjectBase>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SerializedObjectField, SerializedObjectBase>.IsAcceptable(Type, FieldInfo) FieldResolver<SerializedObjectField, SerializedObjectBase>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax [Ordered(100)] public class SerializedObjectFieldResolver : FieldResolver<SerializedObjectField, SerializedObjectBase>, IFieldResolver Constructors SerializedObjectFieldResolver(FieldInfo) Declaration public SerializedObjectFieldResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override SerializedObjectField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description SerializedObjectField Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.SerializedObjectField, SerializedObjectBase>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo fieldInfo) Parameters Type Name Description System.Type fieldValueType FieldInfo fieldInfo Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.SerializedObjectField, SerializedObjectBase>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedBoolResolver.html": {
    "href": "api/Ceres.Editor.Graph.SharedBoolResolver.html",
    "title": "Class SharedBoolResolver | Ceres Documentation",
    "keywords": "Class SharedBoolResolver Inheritance object FieldResolver<SharedVariableResolver<SharedBool, bool, Toggle>.Field, SharedBool> SharedVariableResolver<SharedBool, bool, Toggle> SharedBoolResolver Implements IFieldResolver Inherited Members SharedVariableResolver<SharedBool, bool, Toggle>.CreateEditorField(FieldInfo) SharedVariableResolver<SharedBool, bool, Toggle>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedBool, bool, Toggle>.Field, SharedBool>.EditorField FieldResolver<SharedVariableResolver<SharedBool, bool, Toggle>.Field, SharedBool>.BaseField FieldResolver<SharedVariableResolver<SharedBool, bool, Toggle>.Field, SharedBool>.Value FieldResolver<SharedVariableResolver<SharedBool, bool, Toggle>.Field, SharedBool>.CreateField() FieldResolver<SharedVariableResolver<SharedBool, bool, Toggle>.Field, SharedBool>.Copy(IFieldResolver) FieldResolver<SharedVariableResolver<SharedBool, bool, Toggle>.Field, SharedBool>.Restore(object) FieldResolver<SharedVariableResolver<SharedBool, bool, Toggle>.Field, SharedBool>.Commit(object) FieldResolver<SharedVariableResolver<SharedBool, bool, Toggle>.Field, SharedBool>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedVariableResolver<SharedBool, bool, Toggle>.Field, SharedBool>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedBool, bool, Toggle>.Field, SharedBool>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedBoolResolver : SharedVariableResolver<SharedBool, bool, Toggle>, IFieldResolver Constructors SharedBoolResolver(FieldInfo) Declaration public SharedBoolResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedDoubleResolver.html": {
    "href": "api/Ceres.Editor.Graph.SharedDoubleResolver.html",
    "title": "Class SharedDoubleResolver | Ceres Documentation",
    "keywords": "Class SharedDoubleResolver Inheritance object FieldResolver<SharedVariableResolver<SharedDouble, double, DoubleField>.Field, SharedDouble> SharedVariableResolver<SharedDouble, double, DoubleField> SharedDoubleResolver Implements IFieldResolver Inherited Members SharedVariableResolver<SharedDouble, double, DoubleField>.CreateEditorField(FieldInfo) SharedVariableResolver<SharedDouble, double, DoubleField>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedDouble, double, DoubleField>.Field, SharedDouble>.EditorField FieldResolver<SharedVariableResolver<SharedDouble, double, DoubleField>.Field, SharedDouble>.BaseField FieldResolver<SharedVariableResolver<SharedDouble, double, DoubleField>.Field, SharedDouble>.Value FieldResolver<SharedVariableResolver<SharedDouble, double, DoubleField>.Field, SharedDouble>.CreateField() FieldResolver<SharedVariableResolver<SharedDouble, double, DoubleField>.Field, SharedDouble>.Copy(IFieldResolver) FieldResolver<SharedVariableResolver<SharedDouble, double, DoubleField>.Field, SharedDouble>.Restore(object) FieldResolver<SharedVariableResolver<SharedDouble, double, DoubleField>.Field, SharedDouble>.Commit(object) FieldResolver<SharedVariableResolver<SharedDouble, double, DoubleField>.Field, SharedDouble>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedVariableResolver<SharedDouble, double, DoubleField>.Field, SharedDouble>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedDouble, double, DoubleField>.Field, SharedDouble>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedDoubleResolver : SharedVariableResolver<SharedDouble, double, DoubleField>, IFieldResolver Constructors SharedDoubleResolver(FieldInfo) Declaration public SharedDoubleResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedFloatResolver.html": {
    "href": "api/Ceres.Editor.Graph.SharedFloatResolver.html",
    "title": "Class SharedFloatResolver | Ceres Documentation",
    "keywords": "Class SharedFloatResolver Inheritance object FieldResolver<SharedVariableResolver<SharedFloat, float, FloatField>.Field, SharedFloat> SharedVariableResolver<SharedFloat, float, FloatField> SharedFloatResolver Implements IFieldResolver Inherited Members SharedVariableResolver<SharedFloat, float, FloatField>.CreateEditorField(FieldInfo) SharedVariableResolver<SharedFloat, float, FloatField>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedFloat, float, FloatField>.Field, SharedFloat>.EditorField FieldResolver<SharedVariableResolver<SharedFloat, float, FloatField>.Field, SharedFloat>.BaseField FieldResolver<SharedVariableResolver<SharedFloat, float, FloatField>.Field, SharedFloat>.Value FieldResolver<SharedVariableResolver<SharedFloat, float, FloatField>.Field, SharedFloat>.CreateField() FieldResolver<SharedVariableResolver<SharedFloat, float, FloatField>.Field, SharedFloat>.Copy(IFieldResolver) FieldResolver<SharedVariableResolver<SharedFloat, float, FloatField>.Field, SharedFloat>.Restore(object) FieldResolver<SharedVariableResolver<SharedFloat, float, FloatField>.Field, SharedFloat>.Commit(object) FieldResolver<SharedVariableResolver<SharedFloat, float, FloatField>.Field, SharedFloat>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedVariableResolver<SharedFloat, float, FloatField>.Field, SharedFloat>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedFloat, float, FloatField>.Field, SharedFloat>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedFloatResolver : SharedVariableResolver<SharedFloat, float, FloatField>, IFieldResolver Constructors SharedFloatResolver(FieldInfo) Declaration public SharedFloatResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedIntResolver.html": {
    "href": "api/Ceres.Editor.Graph.SharedIntResolver.html",
    "title": "Class SharedIntResolver | Ceres Documentation",
    "keywords": "Class SharedIntResolver Inheritance object FieldResolver<SharedVariableResolver<SharedInt, int, IntegerField>.Field, SharedInt> SharedVariableResolver<SharedInt, int, IntegerField> SharedIntResolver Implements IFieldResolver Inherited Members SharedVariableResolver<SharedInt, int, IntegerField>.CreateEditorField(FieldInfo) SharedVariableResolver<SharedInt, int, IntegerField>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedInt, int, IntegerField>.Field, SharedInt>.EditorField FieldResolver<SharedVariableResolver<SharedInt, int, IntegerField>.Field, SharedInt>.BaseField FieldResolver<SharedVariableResolver<SharedInt, int, IntegerField>.Field, SharedInt>.Value FieldResolver<SharedVariableResolver<SharedInt, int, IntegerField>.Field, SharedInt>.CreateField() FieldResolver<SharedVariableResolver<SharedInt, int, IntegerField>.Field, SharedInt>.Copy(IFieldResolver) FieldResolver<SharedVariableResolver<SharedInt, int, IntegerField>.Field, SharedInt>.Restore(object) FieldResolver<SharedVariableResolver<SharedInt, int, IntegerField>.Field, SharedInt>.Commit(object) FieldResolver<SharedVariableResolver<SharedInt, int, IntegerField>.Field, SharedInt>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedVariableResolver<SharedInt, int, IntegerField>.Field, SharedInt>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedInt, int, IntegerField>.Field, SharedInt>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedIntResolver : SharedVariableResolver<SharedInt, int, IntegerField>, IFieldResolver Constructors SharedIntResolver(FieldInfo) Declaration public SharedIntResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedObjectField.html": {
    "href": "api/Ceres.Editor.Graph.SharedObjectField.html",
    "title": "Class SharedObjectField | Ceres Documentation",
    "keywords": "Class SharedObjectField Inheritance object SharedVariableField<SharedUObject, UObject> SharedObjectField Implements IBindableField Inherited Members SharedVariableField<SharedUObject, UObject>.ValueField SharedVariableField<SharedUObject, UObject>.BindGraph(CeresGraphView) SharedVariableField<SharedUObject, UObject>.CreateValueField() SharedVariableField<SharedUObject, UObject>.value SharedVariableField<SharedUObject, UObject>.SetValue(UObject) SharedVariableField<SharedUObject, UObject>.Repaint() SharedVariableField<SharedUObject, UObject>.NotifyValueChange() SharedVariableField<SharedUObject, UObject>.OnRepaint() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public sealed class SharedObjectField : SharedVariableField<SharedUObject, UObject>, IBindableField Constructors SharedObjectField(string, Type, FieldInfo) Declaration public SharedObjectField(string label, Type objectType, FieldInfo fieldInfo) Parameters Type Name Description string label System.Type objectType FieldInfo fieldInfo Methods CreateValueField() Declaration protected override BaseField<UObject> CreateValueField() Returns Type Description BaseField<><UObject> Overrides Ceres.Editor.Graph.SharedVariableField<Ceres.Graph.SharedUObject, UObject>.CreateValueField() OnRepaint() Declaration protected override void OnRepaint() Overrides Ceres.Editor.Graph.SharedVariableField<Ceres.Graph.SharedUObject, UObject>.OnRepaint() Implements IBindableField"
  },
  "api/Ceres.Editor.Graph.SharedObjectResolver.html": {
    "href": "api/Ceres.Editor.Graph.SharedObjectResolver.html",
    "title": "Class SharedObjectResolver | Ceres Documentation",
    "keywords": "Class SharedObjectResolver Inheritance object FieldResolver<SharedObjectField, SharedUObject> SharedObjectResolver Implements IFieldResolver Inherited Members FieldResolver<SharedObjectField, SharedUObject>.EditorField FieldResolver<SharedObjectField, SharedUObject>.BaseField FieldResolver<SharedObjectField, SharedUObject>.Value FieldResolver<SharedObjectField, SharedUObject>.CreateField() FieldResolver<SharedObjectField, SharedUObject>.Copy(IFieldResolver) FieldResolver<SharedObjectField, SharedUObject>.Restore(object) FieldResolver<SharedObjectField, SharedUObject>.Commit(object) FieldResolver<SharedObjectField, SharedUObject>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedObjectField, SharedUObject>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedObjectField, SharedUObject>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public sealed class SharedObjectResolver : FieldResolver<SharedObjectField, SharedUObject>, IFieldResolver Constructors SharedObjectResolver(FieldInfo) Declaration public SharedObjectResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override SharedObjectField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description SharedObjectField Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.SharedObjectField, Ceres.Graph.SharedUObject>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo _) Parameters Type Name Description System.Type fieldValueType FieldInfo _ Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.SharedObjectField, Ceres.Graph.SharedUObject>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedStringResolver.html": {
    "href": "api/Ceres.Editor.Graph.SharedStringResolver.html",
    "title": "Class SharedStringResolver | Ceres Documentation",
    "keywords": "Class SharedStringResolver Inheritance object FieldResolver<SharedVariableResolver<SharedString, string, TextField>.Ceres.Editor.Graph.SharedVariableResolver<Ceres.Graph.SharedString, string, TextField>.Field, SharedString> SharedVariableResolver<SharedString, string, TextField> SharedStringResolver Implements IFieldResolver Inherited Members SharedVariableResolver<SharedString, string, TextField>.CreateEditorField(FieldInfo) SharedVariableResolver<SharedString, string, TextField>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedString, string, TextField>.Field, SharedString>.EditorField FieldResolver<SharedVariableResolver<SharedString, string, TextField>.Field, SharedString>.BaseField FieldResolver<SharedVariableResolver<SharedString, string, TextField>.Field, SharedString>.Value FieldResolver<SharedVariableResolver<SharedString, string, TextField>.Field, SharedString>.CreateField() FieldResolver<SharedVariableResolver<SharedString, string, TextField>.Field, SharedString>.Copy(IFieldResolver) FieldResolver<SharedVariableResolver<SharedString, string, TextField>.Field, SharedString>.Restore(object) FieldResolver<SharedVariableResolver<SharedString, string, TextField>.Field, SharedString>.Commit(object) FieldResolver<SharedVariableResolver<SharedString, string, TextField>.Field, SharedString>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedVariableResolver<SharedString, string, TextField>.Field, SharedString>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedString, string, TextField>.Field, SharedString>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public sealed class SharedStringResolver : SharedVariableResolver<SharedString, string, TextField>, IFieldResolver Constructors SharedStringResolver(FieldInfo) Declaration public SharedStringResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override SharedVariableResolver<SharedString, string, TextField>.Field CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description SharedVariableResolver<SharedString, string, TextField>.Ceres.Editor.Graph.SharedVariableResolver<Ceres.Graph.SharedString, string, TextField>.Field Overrides Ceres.Editor.Graph.SharedVariableResolver<Ceres.Graph.SharedString, string, TextField>.CreateEditorField(FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedStringResolver.SharedStringField.html": {
    "href": "api/Ceres.Editor.Graph.SharedStringResolver.SharedStringField.html",
    "title": "Class SharedStringResolver.SharedStringField | Ceres Documentation",
    "keywords": "Class SharedStringResolver.SharedStringField Inheritance object SharedVariableField<SharedString, string> SharedVariableResolver<SharedString, string, TextField>.Ceres.Editor.Graph.SharedVariableResolver<Ceres.Graph.SharedString, string, TextField>.Field SharedStringResolver.SharedStringField Implements IBindableField Inherited Members SharedVariableResolver<SharedString, string, TextField>.Field.CreateValueField() SharedVariableField<SharedString, string>.ValueField SharedVariableField<SharedString, string>.BindGraph(CeresGraphView) SharedVariableField<SharedString, string>.CreateValueField() SharedVariableField<SharedString, string>.value SharedVariableField<SharedString, string>.SetValue(string) SharedVariableField<SharedString, string>.Repaint() SharedVariableField<SharedString, string>.NotifyValueChange() SharedVariableField<SharedString, string>.OnRepaint() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public sealed class SharedStringResolver.SharedStringField : SharedVariableResolver<SharedString, string, TextField>.Field, IBindableField Constructors SharedStringField(string, Type, FieldInfo) Declaration public SharedStringField(string label, Type objectType, FieldInfo fieldInfo) Parameters Type Name Description string label System.Type objectType FieldInfo fieldInfo Methods CreateValueField() Declaration protected override BaseField<string> CreateValueField() Returns Type Description BaseField<><string> Overrides Ceres.Editor.Graph.SharedVariableResolver<Ceres.Graph.SharedString, string, TextField>.Field.CreateValueField() Implements IBindableField"
  },
  "api/Ceres.Editor.Graph.SharedTObjectField-1.html": {
    "href": "api/Ceres.Editor.Graph.SharedTObjectField-1.html",
    "title": "Class SharedTObjectField<T> | Ceres Documentation",
    "keywords": "Class SharedTObjectField<T> Inheritance object SharedTObjectField<T> Implements IBindableField Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedTObjectField<T> : BaseField<SharedUObject<T>>, IBindableField where T : UObject Type Parameters Name Description T Constructors SharedTObjectField(string, FieldInfo) Declaration public SharedTObjectField(string label, FieldInfo fieldInfo) Parameters Type Name Description string label FieldInfo fieldInfo Properties value Declaration public override sealed SharedUObject<T> value { get; set; } Property Value Type Description SharedUObject<T> Methods BindGraph(CeresGraphView) Declaration public void BindGraph(CeresGraphView graph) Parameters Type Name Description CeresGraphView graph Repaint() Declaration public void Repaint() Implements IBindableField"
  },
  "api/Ceres.Editor.Graph.SharedTObjectResolver-1.html": {
    "href": "api/Ceres.Editor.Graph.SharedTObjectResolver-1.html",
    "title": "Class SharedTObjectResolver<T> | Ceres Documentation",
    "keywords": "Class SharedTObjectResolver<T> Inheritance object FieldResolver<SharedTObjectField<T>, SharedUObject<T>> SharedTObjectResolver<T> Implements IFieldResolver Inherited Members FieldResolver<SharedTObjectField<T>, SharedUObject<T>>.EditorField FieldResolver<SharedTObjectField<T>, SharedUObject<T>>.BaseField FieldResolver<SharedTObjectField<T>, SharedUObject<T>>.Value FieldResolver<SharedTObjectField<T>, SharedUObject<T>>.CreateField() FieldResolver<SharedTObjectField<T>, SharedUObject<T>>.Copy(IFieldResolver) FieldResolver<SharedTObjectField<T>, SharedUObject<T>>.Restore(object) FieldResolver<SharedTObjectField<T>, SharedUObject<T>>.Commit(object) FieldResolver<SharedTObjectField<T>, SharedUObject<T>>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedTObjectField<T>, SharedUObject<T>>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedTObjectField<T>, SharedUObject<T>>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public sealed class SharedTObjectResolver<T> : FieldResolver<SharedTObjectField<T>, SharedUObject<T>>, IFieldResolver where T : UObject Type Parameters Name Description T Constructors SharedTObjectResolver(FieldInfo) Declaration public SharedTObjectResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override SharedTObjectField<T> CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description SharedTObjectField<T> Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.SharedTObjectField<T>, Ceres.Graph.SharedUObject<T>>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo _) Parameters Type Name Description System.Type fieldValueType FieldInfo _ Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.SharedTObjectField<T>, Ceres.Graph.SharedUObject<T>>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedVariableField-2.html": {
    "href": "api/Ceres.Editor.Graph.SharedVariableField-2.html",
    "title": "Class SharedVariableField<TVariable, TKValue> | Ceres Documentation",
    "keywords": "Class SharedVariableField<TVariable, TKValue> Inheritance object SharedVariableField<TVariable, TKValue> SharedObjectField SharedVariableResolver<TVariable, TValue, TField>.Field Implements IBindableField Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public abstract class SharedVariableField<TVariable, TKValue> : BaseField<TVariable>, IBindableField where TVariable : SharedVariable<TKValue>, new() Type Parameters Name Description TVariable TKValue Constructors SharedVariableField(string, Type, FieldInfo) Declaration protected SharedVariableField(string label, Type objectType, FieldInfo fieldInfo) Parameters Type Name Description string label System.Type objectType FieldInfo fieldInfo Properties value Declaration public override sealed TVariable value { get; set; } Property Value Type Description TVariable ValueField Declaration protected BaseField<TKValue> ValueField { get; } Property Value Type Description BaseField<><TKValue> Methods BindGraph(CeresGraphView) Declaration public void BindGraph(CeresGraphView graph) Parameters Type Name Description CeresGraphView graph CreateValueField() Declaration protected abstract BaseField<TKValue> CreateValueField() Returns Type Description BaseField<><TKValue> NotifyValueChange() Declaration protected void NotifyValueChange() OnRepaint() Declaration protected virtual void OnRepaint() Repaint() Repaint SharedVariableField<TVariable, TKValue> and rebind property Declaration public void Repaint() SetValue(TKValue) Declaration public void SetValue(TKValue newValue) Parameters Type Name Description TKValue newValue Implements IBindableField"
  },
  "api/Ceres.Editor.Graph.SharedVariableListField-1.html": {
    "href": "api/Ceres.Editor.Graph.SharedVariableListField-1.html",
    "title": "Class SharedVariableListField<T> | Ceres Documentation",
    "keywords": "Class SharedVariableListField<T> Inheritance object ListField<T> SharedVariableListField<T> Implements IBindableField Inherited Members ListField<T>.ElementCreator ListField<T>.GetListItemHeight() ListField<T>.OnBindListItem(VisualElement, int) ListField<T>.OnRequestAddListItem() ListField<T>.value Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedVariableListField<T> : ListField<T>, IBindableField where T : SharedVariable Type Parameters Name Description T Constructors SharedVariableListField(string, Func<VisualElement>, Func<object>) Declaration public SharedVariableListField(string label, Func<VisualElement> elementCreator, Func<object> valueCreator) Parameters Type Name Description string label System.Func<TResult><VisualElement> elementCreator System.Func<TResult><object> valueCreator Methods BindGraph(CeresGraphView) Declaration public void BindGraph(CeresGraphView graph) Parameters Type Name Description CeresGraphView graph OnMakeListItem() Declaration protected override VisualElement OnMakeListItem() Returns Type Description VisualElement Overrides Ceres.Editor.Graph.ListField<T>.OnMakeListItem() Implements IBindableField"
  },
  "api/Ceres.Editor.Graph.SharedVariableListResolver-1.html": {
    "href": "api/Ceres.Editor.Graph.SharedVariableListResolver-1.html",
    "title": "Class SharedVariableListResolver<T> | Ceres Documentation",
    "keywords": "Class SharedVariableListResolver<T> Inheritance object FieldResolver<ListField<T>, System.Collections.Generic.List<T><T>> FieldResolver<ListField<T>, System.Collections.Generic.List<T><T>, IList<T>> ListResolver<T> SharedVariableListResolver<T> Implements IFieldResolver Inherited Members ListResolver<T>.ChildResolver FieldResolver<ListField<T>, List<T>, IList<T>>.Value FieldResolver<ListField<T>, List<T>, IList<T>>.ValueSetter FieldResolver<ListField<T>, List<T>, IList<T>>.ValueGetter FieldResolver<ListField<T>, List<T>>.EditorField FieldResolver<ListField<T>, List<T>>.BaseField FieldResolver<ListField<T>, List<T>>.Value FieldResolver<ListField<T>, List<T>>.CreateField() FieldResolver<ListField<T>, List<T>>.Copy(IFieldResolver) FieldResolver<ListField<T>, List<T>>.Restore(object) FieldResolver<ListField<T>, List<T>>.Commit(object) FieldResolver<ListField<T>, List<T>>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<ListField<T>, List<T>>.IsAcceptable(Type, FieldInfo) FieldResolver<ListField<T>, List<T>>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedVariableListResolver<T> : ListResolver<T>, IFieldResolver where T : SharedVariable, new() Type Parameters Name Description T Constructors SharedVariableListResolver(FieldInfo, IFieldResolver) Declaration public SharedVariableListResolver(FieldInfo fieldInfo, IFieldResolver resolver) Parameters Type Name Description FieldInfo fieldInfo IFieldResolver resolver Methods CreateEditorField(FieldInfo) Declaration protected override ListField<T> CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description ListField<T> Overrides Ceres.Editor.Graph.ListResolver<T>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo _) Parameters Type Name Description System.Type fieldValueType FieldInfo _ Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.ListField<T>, System.Collections.Generic.List<T>>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedVariableResolver-3.Field.html": {
    "href": "api/Ceres.Editor.Graph.SharedVariableResolver-3.Field.html",
    "title": "Class SharedVariableResolver<TVariable, TValue, TField>.Field | Ceres Documentation",
    "keywords": "Class SharedVariableResolver<TVariable, TValue, TField>.Field Inheritance object SharedVariableField<TVariable, TValue> SharedVariableResolver<TVariable, TValue, TField>.Field SharedStringResolver.SharedStringField Implements IBindableField Inherited Members SharedVariableField<TVariable, TValue>.ValueField SharedVariableField<TVariable, TValue>.BindGraph(CeresGraphView) SharedVariableField<TVariable, TValue>.CreateValueField() SharedVariableField<TVariable, TValue>.value SharedVariableField<TVariable, TValue>.SetValue(TValue) SharedVariableField<TVariable, TValue>.Repaint() SharedVariableField<TVariable, TValue>.NotifyValueChange() SharedVariableField<TVariable, TValue>.OnRepaint() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedVariableResolver<TVariable, TValue, TField>.Field : SharedVariableField<TVariable, TValue>, IBindableField Constructors Field(string, Type, FieldInfo) Declaration public Field(string label, Type objectType, FieldInfo fieldInfo) Parameters Type Name Description string label System.Type objectType FieldInfo fieldInfo Methods CreateValueField() Declaration protected override BaseField<TValue> CreateValueField() Returns Type Description BaseField<><TValue> Overrides Ceres.Editor.Graph.SharedVariableField<TVariable, TValue>.CreateValueField() Implements IBindableField"
  },
  "api/Ceres.Editor.Graph.SharedVariableResolver-3.html": {
    "href": "api/Ceres.Editor.Graph.SharedVariableResolver-3.html",
    "title": "Class SharedVariableResolver<TVariable, TValue, TField> | Ceres Documentation",
    "keywords": "Class SharedVariableResolver<TVariable, TValue, TField> Inheritance object FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable> SharedVariableResolver<TVariable, TValue, TField> SharedBoolResolver SharedDoubleResolver SharedFloatResolver SharedIntResolver SharedStringResolver SharedVector2IntResolver SharedVector2Resolver SharedVector3IntResolver SharedVector3Resolver Implements IFieldResolver Inherited Members FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.EditorField FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.BaseField FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.Value FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.CreateField() FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.Copy(IFieldResolver) FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.Restore(object) FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.Commit(object) FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public abstract class SharedVariableResolver<TVariable, TValue, TField> : FieldResolver<SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>, IFieldResolver where TVariable : SharedVariable<TValue>, new() where TField : BaseField<TValue>, new() Type Parameters Name Description TVariable TValue TField Constructors SharedVariableResolver(FieldInfo) Declaration protected SharedVariableResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override SharedVariableResolver<TVariable, TValue, TField>.Field CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description SharedVariableResolver<TVariable, TValue, TField>.Field Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo _) Parameters Type Name Description System.Type fieldValueType FieldInfo _ Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.SharedVariableResolver<TVariable, TValue, TField>.Field, TVariable>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedVector2IntResolver.html": {
    "href": "api/Ceres.Editor.Graph.SharedVector2IntResolver.html",
    "title": "Class SharedVector2IntResolver | Ceres Documentation",
    "keywords": "Class SharedVector2IntResolver Inheritance object FieldResolver<SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.Field, SharedVector2Int> SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField> SharedVector2IntResolver Implements IFieldResolver Inherited Members SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.CreateEditorField(FieldInfo) SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.Field, SharedVector2Int>.EditorField FieldResolver<SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.Field, SharedVector2Int>.BaseField FieldResolver<SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.Field, SharedVector2Int>.Value FieldResolver<SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.Field, SharedVector2Int>.CreateField() FieldResolver<SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.Field, SharedVector2Int>.Copy(IFieldResolver) FieldResolver<SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.Field, SharedVector2Int>.Restore(object) FieldResolver<SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.Field, SharedVector2Int>.Commit(object) FieldResolver<SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.Field, SharedVector2Int>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.Field, SharedVector2Int>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>.Field, SharedVector2Int>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedVector2IntResolver : SharedVariableResolver<SharedVector2Int, Vector2Int, Vector2IntField>, IFieldResolver Constructors SharedVector2IntResolver(FieldInfo) Declaration public SharedVector2IntResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedVector2Resolver.html": {
    "href": "api/Ceres.Editor.Graph.SharedVector2Resolver.html",
    "title": "Class SharedVector2Resolver | Ceres Documentation",
    "keywords": "Class SharedVector2Resolver Inheritance object FieldResolver<SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.Field, SharedVector2> SharedVariableResolver<SharedVector2, Vector2, Vector2Field> SharedVector2Resolver Implements IFieldResolver Inherited Members SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.CreateEditorField(FieldInfo) SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.Field, SharedVector2>.EditorField FieldResolver<SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.Field, SharedVector2>.BaseField FieldResolver<SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.Field, SharedVector2>.Value FieldResolver<SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.Field, SharedVector2>.CreateField() FieldResolver<SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.Field, SharedVector2>.Copy(IFieldResolver) FieldResolver<SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.Field, SharedVector2>.Restore(object) FieldResolver<SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.Field, SharedVector2>.Commit(object) FieldResolver<SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.Field, SharedVector2>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.Field, SharedVector2>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedVector2, Vector2, Vector2Field>.Field, SharedVector2>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedVector2Resolver : SharedVariableResolver<SharedVector2, Vector2, Vector2Field>, IFieldResolver Constructors SharedVector2Resolver(FieldInfo) Declaration public SharedVector2Resolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedVector3IntResolver.html": {
    "href": "api/Ceres.Editor.Graph.SharedVector3IntResolver.html",
    "title": "Class SharedVector3IntResolver | Ceres Documentation",
    "keywords": "Class SharedVector3IntResolver Inheritance object FieldResolver<SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.Field, SharedVector3Int> SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField> SharedVector3IntResolver Implements IFieldResolver Inherited Members SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.CreateEditorField(FieldInfo) SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.Field, SharedVector3Int>.EditorField FieldResolver<SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.Field, SharedVector3Int>.BaseField FieldResolver<SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.Field, SharedVector3Int>.Value FieldResolver<SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.Field, SharedVector3Int>.CreateField() FieldResolver<SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.Field, SharedVector3Int>.Copy(IFieldResolver) FieldResolver<SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.Field, SharedVector3Int>.Restore(object) FieldResolver<SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.Field, SharedVector3Int>.Commit(object) FieldResolver<SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.Field, SharedVector3Int>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.Field, SharedVector3Int>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>.Field, SharedVector3Int>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedVector3IntResolver : SharedVariableResolver<SharedVector3Int, Vector3Int, Vector3IntField>, IFieldResolver Constructors SharedVector3IntResolver(FieldInfo) Declaration public SharedVector3IntResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.SharedVector3Resolver.html": {
    "href": "api/Ceres.Editor.Graph.SharedVector3Resolver.html",
    "title": "Class SharedVector3Resolver | Ceres Documentation",
    "keywords": "Class SharedVector3Resolver Inheritance object FieldResolver<SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.Field, SharedVector3> SharedVariableResolver<SharedVector3, Vector3, Vector3Field> SharedVector3Resolver Implements IFieldResolver Inherited Members SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.CreateEditorField(FieldInfo) SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.Field, SharedVector3>.EditorField FieldResolver<SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.Field, SharedVector3>.BaseField FieldResolver<SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.Field, SharedVector3>.Value FieldResolver<SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.Field, SharedVector3>.CreateField() FieldResolver<SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.Field, SharedVector3>.Copy(IFieldResolver) FieldResolver<SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.Field, SharedVector3>.Restore(object) FieldResolver<SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.Field, SharedVector3>.Commit(object) FieldResolver<SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.Field, SharedVector3>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.Field, SharedVector3>.IsAcceptable(Type, FieldInfo) FieldResolver<SharedVariableResolver<SharedVector3, Vector3, Vector3Field>.Field, SharedVector3>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class SharedVector3Resolver : SharedVariableResolver<SharedVector3, Vector3, Vector3Field>, IFieldResolver Constructors SharedVector3Resolver(FieldInfo) Declaration public SharedVector3Resolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.StringListResolver.html": {
    "href": "api/Ceres.Editor.Graph.StringListResolver.html",
    "title": "Class StringListResolver | Ceres Documentation",
    "keywords": "Class StringListResolver Inheritance object FieldResolver<ListField<string>, System.Collections.Generic.List<T><string>> FieldResolver<ListField<string>, System.Collections.Generic.List<T><string>, IList<string>> ListResolver<string> StringListResolver Implements IFieldResolver Inherited Members ListResolver<string>.ChildResolver FieldResolver<ListField<string>, List<string>, IList<string>>.Value FieldResolver<ListField<string>, List<string>, IList<string>>.ValueSetter FieldResolver<ListField<string>, List<string>, IList<string>>.ValueGetter FieldResolver<ListField<string>, List<string>>.EditorField FieldResolver<ListField<string>, List<string>>.BaseField FieldResolver<ListField<string>, List<string>>.Value FieldResolver<ListField<string>, List<string>>.CreateField() FieldResolver<ListField<string>, List<string>>.Copy(IFieldResolver) FieldResolver<ListField<string>, List<string>>.Restore(object) FieldResolver<ListField<string>, List<string>>.Commit(object) FieldResolver<ListField<string>, List<string>>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<ListField<string>, List<string>>.IsAcceptable(Type, FieldInfo) FieldResolver<ListField<string>, List<string>>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class StringListResolver : ListResolver<string>, IFieldResolver Constructors StringListResolver(FieldInfo) Declaration public StringListResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override ListField<string> CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description ListField<string> Overrides Ceres.Editor.Graph.ListResolver<string>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo _) Parameters Type Name Description System.Type fieldValueType FieldInfo _ Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.ListField<string>, System.Collections.Generic.List<string>>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.StringResolver.html": {
    "href": "api/Ceres.Editor.Graph.StringResolver.html",
    "title": "Class StringResolver | Ceres Documentation",
    "keywords": "Class StringResolver Inheritance object FieldResolver<TextField, string> StringResolver Implements IFieldResolver Inherited Members FieldResolver<TextField, string>.EditorField FieldResolver<TextField, string>.BaseField FieldResolver<TextField, string>.Value FieldResolver<TextField, string>.CreateField() FieldResolver<TextField, string>.Copy(IFieldResolver) FieldResolver<TextField, string>.Restore(object) FieldResolver<TextField, string>.Commit(object) FieldResolver<TextField, string>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<TextField, string>.IsAcceptable(Type, FieldInfo) FieldResolver<TextField, string>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class StringResolver : FieldResolver<TextField, string>, IFieldResolver Constructors StringResolver(FieldInfo) Declaration public StringResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override TextField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description TextField Overrides Ceres.Editor.Graph.FieldResolver<TextField, string>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo _) Parameters Type Name Description System.Type fieldValueType FieldInfo _ Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<TextField, string>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.TagResolver.html": {
    "href": "api/Ceres.Editor.Graph.TagResolver.html",
    "title": "Class TagResolver | Ceres Documentation",
    "keywords": "Class TagResolver Inheritance object FieldResolver<TagField, string> TagResolver Implements IFieldResolver Inherited Members FieldResolver<TagField, string>.EditorField FieldResolver<TagField, string>.BaseField FieldResolver<TagField, string>.Value FieldResolver<TagField, string>.CreateField() FieldResolver<TagField, string>.Copy(IFieldResolver) FieldResolver<TagField, string>.Restore(object) FieldResolver<TagField, string>.Commit(object) FieldResolver<TagField, string>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<TagField, string>.IsAcceptable(Type, FieldInfo) FieldResolver<TagField, string>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax [Ordered(100)] public class TagResolver : FieldResolver<TagField, string>, IFieldResolver Constructors TagResolver(FieldInfo) Declaration public TagResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override TagField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description TagField Overrides Ceres.Editor.Graph.FieldResolver<TagField, string>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<TagField, string>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.ValueChangeDelegate.html": {
    "href": "api/Ceres.Editor.Graph.ValueChangeDelegate.html",
    "title": "Delegate ValueChangeDelegate | Ceres Documentation",
    "keywords": "Delegate ValueChangeDelegate Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public delegate void ValueChangeDelegate(object newValue) Parameters Type Name Description object newValue"
  },
  "api/Ceres.Editor.Graph.VariableChangeEvent.html": {
    "href": "api/Ceres.Editor.Graph.VariableChangeEvent.html",
    "title": "Class VariableChangeEvent | Ceres Documentation",
    "keywords": "Class VariableChangeEvent Inheritance object VariableChangeEvent Implements ICeresEvent Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class VariableChangeEvent : EventBase<VariableChangeEvent>, ICeresEvent Properties ChangeType Declaration public VariableChangeType ChangeType { get; } Property Value Type Description VariableChangeType Variable Declaration public SharedVariable Variable { get; } Property Value Type Description SharedVariable Methods GetPooled(SharedVariable, VariableChangeType) Declaration public static VariableChangeEvent GetPooled(SharedVariable notifyVariable, VariableChangeType changeType) Parameters Type Name Description SharedVariable notifyVariable VariableChangeType changeType Returns Type Description VariableChangeEvent Implements ICeresEvent"
  },
  "api/Ceres.Editor.Graph.VariableChangeType.html": {
    "href": "api/Ceres.Editor.Graph.VariableChangeType.html",
    "title": "Enum VariableChangeType | Ceres Documentation",
    "keywords": "Enum VariableChangeType Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public enum VariableChangeType Fields Name Description Add Call on variable is added Name Call on variable name change Remove Call on variable is removed Type Call on variable type change if has dynamic type Value Call on variable value change"
  },
  "api/Ceres.Editor.Graph.Vector2IntResolver.html": {
    "href": "api/Ceres.Editor.Graph.Vector2IntResolver.html",
    "title": "Class Vector2IntResolver | Ceres Documentation",
    "keywords": "Class Vector2IntResolver Inheritance object FieldResolver<Vector2IntField, Vector2Int> Vector2IntResolver Implements IFieldResolver Inherited Members FieldResolver<Vector2IntField, Vector2Int>.EditorField FieldResolver<Vector2IntField, Vector2Int>.BaseField FieldResolver<Vector2IntField, Vector2Int>.Value FieldResolver<Vector2IntField, Vector2Int>.CreateField() FieldResolver<Vector2IntField, Vector2Int>.Copy(IFieldResolver) FieldResolver<Vector2IntField, Vector2Int>.Restore(object) FieldResolver<Vector2IntField, Vector2Int>.Commit(object) FieldResolver<Vector2IntField, Vector2Int>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<Vector2IntField, Vector2Int>.IsAcceptable(Type, FieldInfo) FieldResolver<Vector2IntField, Vector2Int>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class Vector2IntResolver : FieldResolver<Vector2IntField, Vector2Int>, IFieldResolver Constructors Vector2IntResolver(FieldInfo) Declaration public Vector2IntResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override Vector2IntField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description Vector2IntField Overrides Ceres.Editor.Graph.FieldResolver<Vector2IntField, Vector2Int>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Vector2IntField, Vector2Int>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.Vector2Resolver.html": {
    "href": "api/Ceres.Editor.Graph.Vector2Resolver.html",
    "title": "Class Vector2Resolver | Ceres Documentation",
    "keywords": "Class Vector2Resolver Inheritance object FieldResolver<Vector2Field, Vector2> Vector2Resolver Implements IFieldResolver Inherited Members FieldResolver<Vector2Field, Vector2>.EditorField FieldResolver<Vector2Field, Vector2>.BaseField FieldResolver<Vector2Field, Vector2>.Value FieldResolver<Vector2Field, Vector2>.CreateField() FieldResolver<Vector2Field, Vector2>.Copy(IFieldResolver) FieldResolver<Vector2Field, Vector2>.Restore(object) FieldResolver<Vector2Field, Vector2>.Commit(object) FieldResolver<Vector2Field, Vector2>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<Vector2Field, Vector2>.IsAcceptable(Type, FieldInfo) FieldResolver<Vector2Field, Vector2>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class Vector2Resolver : FieldResolver<Vector2Field, Vector2>, IFieldResolver Constructors Vector2Resolver(FieldInfo) Declaration public Vector2Resolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override Vector2Field CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description Vector2Field Overrides Ceres.Editor.Graph.FieldResolver<Vector2Field, Vector2>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Vector2Field, Vector2>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.Vector3IntResolver.html": {
    "href": "api/Ceres.Editor.Graph.Vector3IntResolver.html",
    "title": "Class Vector3IntResolver | Ceres Documentation",
    "keywords": "Class Vector3IntResolver Inheritance object FieldResolver<Vector3IntField, Vector3Int> Vector3IntResolver Implements IFieldResolver Inherited Members FieldResolver<Vector3IntField, Vector3Int>.EditorField FieldResolver<Vector3IntField, Vector3Int>.BaseField FieldResolver<Vector3IntField, Vector3Int>.Value FieldResolver<Vector3IntField, Vector3Int>.CreateField() FieldResolver<Vector3IntField, Vector3Int>.Copy(IFieldResolver) FieldResolver<Vector3IntField, Vector3Int>.Restore(object) FieldResolver<Vector3IntField, Vector3Int>.Commit(object) FieldResolver<Vector3IntField, Vector3Int>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<Vector3IntField, Vector3Int>.IsAcceptable(Type, FieldInfo) FieldResolver<Vector3IntField, Vector3Int>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class Vector3IntResolver : FieldResolver<Vector3IntField, Vector3Int>, IFieldResolver Constructors Vector3IntResolver(FieldInfo) Declaration public Vector3IntResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override Vector3IntField CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description Vector3IntField Overrides Ceres.Editor.Graph.FieldResolver<Vector3IntField, Vector3Int>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Vector3IntField, Vector3Int>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.Vector3Resolver.html": {
    "href": "api/Ceres.Editor.Graph.Vector3Resolver.html",
    "title": "Class Vector3Resolver | Ceres Documentation",
    "keywords": "Class Vector3Resolver Inheritance object FieldResolver<Vector3Field, Vector3> Vector3Resolver Implements IFieldResolver Inherited Members FieldResolver<Vector3Field, Vector3>.EditorField FieldResolver<Vector3Field, Vector3>.BaseField FieldResolver<Vector3Field, Vector3>.Value FieldResolver<Vector3Field, Vector3>.CreateField() FieldResolver<Vector3Field, Vector3>.Copy(IFieldResolver) FieldResolver<Vector3Field, Vector3>.Restore(object) FieldResolver<Vector3Field, Vector3>.Commit(object) FieldResolver<Vector3Field, Vector3>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<Vector3Field, Vector3>.IsAcceptable(Type, FieldInfo) FieldResolver<Vector3Field, Vector3>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class Vector3Resolver : FieldResolver<Vector3Field, Vector3>, IFieldResolver Constructors Vector3Resolver(FieldInfo) Declaration public Vector3Resolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override Vector3Field CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description Vector3Field Overrides Ceres.Editor.Graph.FieldResolver<Vector3Field, Vector3>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Vector3Field, Vector3>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.Vector4Resolver.html": {
    "href": "api/Ceres.Editor.Graph.Vector4Resolver.html",
    "title": "Class Vector4Resolver | Ceres Documentation",
    "keywords": "Class Vector4Resolver Inheritance object FieldResolver<Vector4Field, Vector4> Vector4Resolver Implements IFieldResolver Inherited Members FieldResolver<Vector4Field, Vector4>.EditorField FieldResolver<Vector4Field, Vector4>.BaseField FieldResolver<Vector4Field, Vector4>.Value FieldResolver<Vector4Field, Vector4>.CreateField() FieldResolver<Vector4Field, Vector4>.Copy(IFieldResolver) FieldResolver<Vector4Field, Vector4>.Restore(object) FieldResolver<Vector4Field, Vector4>.Commit(object) FieldResolver<Vector4Field, Vector4>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<Vector4Field, Vector4>.IsAcceptable(Type, FieldInfo) FieldResolver<Vector4Field, Vector4>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class Vector4Resolver : FieldResolver<Vector4Field, Vector4>, IFieldResolver Constructors Vector4Resolver(FieldInfo) Declaration public Vector4Resolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override Vector4Field CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description Vector4Field Overrides Ceres.Editor.Graph.FieldResolver<Vector4Field, Vector4>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo info) Parameters Type Name Description System.Type fieldValueType FieldInfo info Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Vector4Field, Vector4>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.Graph.WrapField-1.html": {
    "href": "api/Ceres.Editor.Graph.WrapField-1.html",
    "title": "Class WrapField<T> | Ceres Documentation",
    "keywords": "Class WrapField<T> Inheritance object WrapField<T> Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax public class WrapField<T> : BaseField<T> Type Parameters Name Description T Constructors WrapField(string, FieldInfo) Declaration public WrapField(string label, FieldInfo fieldInfo) Parameters Type Name Description string label FieldInfo fieldInfo Properties value Declaration public override sealed T value { get; set; } Property Value Type Description T"
  },
  "api/Ceres.Editor.Graph.WrapFieldResolver-1.html": {
    "href": "api/Ceres.Editor.Graph.WrapFieldResolver-1.html",
    "title": "Class WrapFieldResolver<T> | Ceres Documentation",
    "keywords": "Class WrapFieldResolver<T> Inheritance object FieldResolver<WrapField<T>, T> WrapFieldResolver<T> Implements IFieldResolver Inherited Members FieldResolver<WrapField<T>, T>.EditorField FieldResolver<WrapField<T>, T>.BaseField FieldResolver<WrapField<T>, T>.Value FieldResolver<WrapField<T>, T>.CreateField() FieldResolver<WrapField<T>, T>.Copy(IFieldResolver) FieldResolver<WrapField<T>, T>.Restore(object) FieldResolver<WrapField<T>, T>.Commit(object) FieldResolver<WrapField<T>, T>.RegisterValueChangeCallback(ValueChangeDelegate) FieldResolver<WrapField<T>, T>.IsAcceptable(Type, FieldInfo) FieldResolver<WrapField<T>, T>.CreateEditorField(FieldInfo) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor.Graph Assembly: cs.temp.dll.dll Syntax [Ordered(100)] public class WrapFieldResolver<T> : FieldResolver<WrapField<T>, T>, IFieldResolver Type Parameters Name Description T Constructors WrapFieldResolver(FieldInfo) Declaration public WrapFieldResolver(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Methods CreateEditorField(FieldInfo) Declaration protected override WrapField<T> CreateEditorField(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description WrapField<T> Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.WrapField<T>, T>.CreateEditorField(FieldInfo) IsAcceptable(Type, FieldInfo) Declaration public override bool IsAcceptable(Type fieldValueType, FieldInfo fieldInfo) Parameters Type Name Description System.Type fieldValueType FieldInfo fieldInfo Returns Type Description bool Overrides Ceres.Editor.Graph.FieldResolver<Ceres.Editor.Graph.WrapField<T>, T>.IsAcceptable(System.Type, FieldInfo) Implements IFieldResolver"
  },
  "api/Ceres.Editor.html": {
    "href": "api/Ceres.Editor.html",
    "title": "Namespace Ceres.Editor | Ceres Documentation",
    "keywords": "Namespace Ceres.Editor Classes APIUpdateConfigEditor APIUpdater CeresGroupSelectorAttribute CeresGroupSelectorPropertyDrawer CeresSettings CustomNodeViewAttribute Tells a node view class which run-time node type it's an editor for. FlowGraphValidator Validate flow graph whether it can be compiled GameVariableScopeEditor OrderedAttribute Give priority for resolver (node or field) SceneVariableScopeEditor Enums CeresSettings.GraphEditorDisplayMode"
  },
  "api/Ceres.Editor.OrderedAttribute.html": {
    "href": "api/Ceres.Editor.OrderedAttribute.html",
    "title": "Class OrderedAttribute | Ceres Documentation",
    "keywords": "Class OrderedAttribute Give priority for resolver (node or field) Inheritance object System.Attribute OrderedAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Editor Assembly: cs.temp.dll.dll Syntax public sealed class OrderedAttribute : Attribute Constructors OrderedAttribute(int) Declaration public OrderedAttribute(int order = 100) Parameters Type Name Description int order Properties Order Declaration public int Order { get; } Property Value Type Description int"
  },
  "api/Ceres.Editor.SceneVariableScopeEditor.html": {
    "href": "api/Ceres.Editor.SceneVariableScopeEditor.html",
    "title": "Class SceneVariableScopeEditor | Ceres Documentation",
    "keywords": "Class SceneVariableScopeEditor Inheritance object SceneVariableScopeEditor Namespace: Ceres.Editor Assembly: cs.temp.dll.dll Syntax public class SceneVariableScopeEditor : UnityEditor.Editor Methods CreateInspectorGUI() Declaration public override VisualElement CreateInspectorGUI() Returns Type Description VisualElement"
  },
  "api/Ceres.Graph.AdapterPort-2.html": {
    "href": "api/Ceres.Graph.AdapterPort-2.html",
    "title": "Class AdapterPort<TIn, TOut> | Ceres Documentation",
    "keywords": "Class AdapterPort<TIn, TOut> Inheritance object AdapterPort<TIn, TOut> Implements IPort<TOut> IPort Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public class AdapterPort<TIn, TOut> : IPort<TOut>, IPort Type Parameters Name Description TIn TOut Constructors AdapterPort(IPort<TIn>, Func<TIn, TOut>) Declaration public AdapterPort(IPort<TIn> port, Func<TIn, TOut> adapterFunc) Parameters Type Name Description IPort<TIn> port System.Func<T, TResult><TIn, TOut> adapterFunc Properties Value Declaration public TOut Value { get; } Property Value Type Description TOut Methods GetValue() Declaration public object GetValue() Returns Type Description object Implements IPort<TValue> IPort"
  },
  "api/Ceres.Graph.APIUpdateConfig.ConfigAutoScope.html": {
    "href": "api/Ceres.Graph.APIUpdateConfig.ConfigAutoScope.html",
    "title": "Struct APIUpdateConfig.ConfigAutoScope | Ceres Documentation",
    "keywords": "Struct APIUpdateConfig.ConfigAutoScope Implements System.IDisposable Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public readonly struct APIUpdateConfig.ConfigAutoScope : IDisposable Constructors ConfigAutoScope(APIUpdateConfig) Declaration public ConfigAutoScope(APIUpdateConfig updateConfig) Parameters Type Name Description APIUpdateConfig updateConfig Methods Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/Ceres.Graph.APIUpdateConfig.html": {
    "href": "api/Ceres.Graph.APIUpdateConfig.html",
    "title": "Class APIUpdateConfig | Ceres Documentation",
    "keywords": "Class APIUpdateConfig Inheritance object APIUpdateConfig Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public class APIUpdateConfig : ScriptableObject Properties Current Current active config, can be null if no valid config Declaration public static APIUpdateConfig Current { get; } Property Value Type Description APIUpdateConfig Methods AutoScope() Declaration public static APIUpdateConfig.ConfigAutoScope AutoScope() Returns Type Description APIUpdateConfig.ConfigAutoScope RedirectManagedReference(ManagedReferenceType) Declaration public Type RedirectManagedReference(ManagedReferenceType managedReferenceType) Parameters Type Name Description ManagedReferenceType managedReferenceType Returns Type Description System.Type RedirectNode(in ManagedReferenceType) Declaration public Type RedirectNode(in ManagedReferenceType nodeType) Parameters Type Name Description ManagedReferenceType nodeType Returns Type Description System.Type RedirectSerializedType(string) Declaration public Type RedirectSerializedType(string serializedType) Parameters Type Name Description string serializedType Returns Type Description System.Type RedirectVariable(in ManagedReferenceType) Declaration public Type RedirectVariable(in ManagedReferenceType variableType) Parameters Type Name Description ManagedReferenceType variableType Returns Type Description System.Type"
  },
  "api/Ceres.Graph.BlackBoard.html": {
    "href": "api/Ceres.Graph.BlackBoard.html",
    "title": "Class BlackBoard | Ceres Documentation",
    "keywords": "Class BlackBoard A medium for centralized storage and exchange of graph data Inheritance object BlackBoard Implements IVariableSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public class BlackBoard : IVariableSource Properties SharedVariables Declaration public List<SharedVariable> SharedVariables { get; } Property Value Type Description System.Collections.Generic.List<T><SharedVariable> Methods Create(List<SharedVariable>, bool) Create a BlackBoard Declaration public static BlackBoard Create(List<SharedVariable> variables = null, bool clone = true) Parameters Type Name Description System.Collections.Generic.List<T><SharedVariable> variables Variables to add bool clone Whether clone source variable Returns Type Description BlackBoard SetBool(string, bool) Declaration public SharedVariable<bool> SetBool(string key, bool value) Parameters Type Name Description string key bool value Returns Type Description SharedVariable<bool> SetFloat(string, float) Declaration public SharedVariable<float> SetFloat(string key, float value) Parameters Type Name Description string key float value Returns Type Description SharedVariable<float> SetInt(string, int) Declaration public SharedVariable<int> SetInt(string key, int value) Parameters Type Name Description string key int value Returns Type Description SharedVariable<int> SetObject(string, object) Declaration public SharedVariable<object> SetObject(string key, object value) Parameters Type Name Description string key object value Returns Type Description SharedVariable<object> SetString(string, string) Declaration public SharedVariable<string> SetString(string key, string value) Parameters Type Name Description string key string value Returns Type Description SharedVariable<string> SetUObject(string, UObject) Declaration public SharedVariable<UObject> SetUObject(string key, UObject value) Parameters Type Name Description string key UObject value Returns Type Description SharedVariable<UObject> SetUObject<T>(string, T) Declaration public SharedVariable<UObject> SetUObject<T>(string key, T value) where T : UObject Parameters Type Name Description string key T value Returns Type Description SharedVariable<UObject> Type Parameters Name Description T SetVector2(string, Vector2) Declaration public SharedVariable<Vector2> SetVector2(string key, Vector2 value) Parameters Type Name Description string key Vector2 value Returns Type Description SharedVariable<Vector2> SetVector2Int(string, Vector2Int) Declaration public SharedVariable<Vector2Int> SetVector2Int(string key, Vector2Int value) Parameters Type Name Description string key Vector2Int value Returns Type Description SharedVariable<Vector2Int> SetVector3(string, Vector3) Declaration public SharedVariable<Vector3> SetVector3(string key, Vector3 value) Parameters Type Name Description string key Vector3 value Returns Type Description SharedVariable<Vector3> SetVector3Int(string, Vector3Int) Declaration public SharedVariable<Vector3Int> SetVector3Int(string key, Vector3Int value) Parameters Type Name Description string key Vector3Int value Returns Type Description SharedVariable<Vector3Int> Implements IVariableSource"
  },
  "api/Ceres.Graph.CeresGraph.html": {
    "href": "api/Ceres.Graph.CeresGraph.html",
    "title": "Class CeresGraph | Ceres Documentation",
    "keywords": "Class CeresGraph Inheritance object CeresGraph FlowGraph Implements System.IDisposable IDisposableUnregister Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class CeresGraph : IDisposable, IDisposableUnregister Constructors CeresGraph() Declaration public CeresGraph() CeresGraph(CeresGraphData) Declaration public CeresGraph(CeresGraphData graphData) Parameters Type Name Description CeresGraphData graphData Fields nodeGroups Declaration public List<NodeGroup> nodeGroups Field Value Type Description System.Collections.Generic.List<T><NodeGroup> nodes Declaration public List<CeresNode> nodes Field Value Type Description System.Collections.Generic.List<T><CeresNode> SubGraphSlots Declaration public CeresSubGraphSlot[] SubGraphSlots Field Value Type Description CeresSubGraphSlot[] variables Declaration public List<SharedVariable> variables Field Value Type Description System.Collections.Generic.List<T><SharedVariable> Properties BlackBoard Exposed blackboard for data exchange Declaration public BlackBoard BlackBoard { get; } Property Value Type Description BlackBoard Methods AddSubGraphSlot<TGraph>(CeresSubGraphSlot) Try to add a subGraph slot with specific type validation Declaration public bool AddSubGraphSlot<TGraph>(CeresSubGraphSlot slot) where TGraph : CeresGraph Parameters Type Name Description CeresSubGraphSlot slot Returns Type Description bool Type Parameters Name Description TGraph CollectDependencyPath(CeresGraph) Declaration protected static void CollectDependencyPath(CeresGraph graph) Parameters Type Name Description CeresGraph graph Compile(CeresGraphCompiler) Compile graph just in time Declaration public virtual void Compile(CeresGraphCompiler compiler) Parameters Type Name Description CeresGraphCompiler compiler Runtime compiler CompileNodes(CeresGraphCompiler) Declaration protected static void CompileNodes(CeresGraphCompiler compiler) Parameters Type Name Description CeresGraphCompiler compiler Dispose() Declaration public virtual void Dispose() FindNode(string) Find node by guid Declaration public CeresNode FindNode(string guid) Parameters Type Name Description string guid Returns Type Description CeresNode Null if not exist FindNode<TNode>(string) Find node with specific type by guid Declaration public TNode FindNode<TNode>(string guid) where TNode : CeresNode Parameters Type Name Description string guid Returns Type Description TNode Null if not exist Type Parameters Name Description TNode FindSubGraph<TGraph>(string) Find subGraph with specific type by name Declaration public TGraph FindSubGraph<TGraph>(string name) where TGraph : CeresGraph Parameters Type Name Description string name Returns Type Description TGraph Null if not exist Type Parameters Name Description TGraph GetDependencyPaths() Get graph node current dependency path if existed Declaration public int[][] GetDependencyPaths() Returns Type Description int[][] GetFirstNodeOfType<TNode>() Get first node with specific type Declaration public TNode GetFirstNodeOfType<TNode>() where TNode : CeresNode Returns Type Description TNode Null if not exist Type Parameters Name Description TNode GetNodeDependencyPath(CeresNode) Get dependency execution path for destination node Declaration public int[] GetNodeDependencyPath(CeresNode node) Parameters Type Name Description CeresNode node Returns Type Description int[] GetNodeDependencyPath(string) Get dependency execution path for destination node with guid Declaration public int[] GetNodeDependencyPath(string guid) Parameters Type Name Description string guid Returns Type Description int[] InitPorts(CeresGraph) Traverse the graph and init all ports automatically Declaration protected static void InitPorts(CeresGraph graph) Parameters Type Name Description CeresGraph graph InitVariables(CeresGraph) Traverse the graph and init all shared variables automatically Declaration protected static void InitVariables(CeresGraph graph) Parameters Type Name Description CeresGraph graph IsUberGraph() Is graph on top level which means it can have subGraphs Declaration public virtual bool IsUberGraph() Returns Type Description bool LinkPort(CeresPort, CeresNode, CeresPortData) Declaration protected virtual void LinkPort(CeresPort port, CeresNode ownerNode, CeresPortData portData) Parameters Type Name Description CeresPort port CeresNode ownerNode CeresPortData portData SetCompilerTarget(CeresGraphCompiler) Declaration protected void SetCompilerTarget(CeresGraphCompiler compiler) Parameters Type Name Description CeresGraphCompiler compiler SetDependencyPath(int[][]) Set graph node pre-cached dependency path Declaration public void SetDependencyPath(int[][] dependencyPath) Parameters Type Name Description int[][] dependencyPath TopologicalSort(CeresGraph, List<CeresNode>) Declaration protected static int[][] TopologicalSort(CeresGraph graph, List<CeresNode> nodes) Parameters Type Name Description CeresGraph graph System.Collections.Generic.List<T><CeresNode> nodes Returns Type Description int[][] Implements System.IDisposable IDisposableUnregister"
  },
  "api/Ceres.Graph.CeresGraphCompiler.html": {
    "href": "api/Ceres.Graph.CeresGraphCompiler.html",
    "title": "Class CeresGraphCompiler | Ceres Documentation",
    "keywords": "Class CeresGraphCompiler Ceres graph compiler Inheritance object CeresGraphCompiler Implements System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public sealed class CeresGraphCompiler : IDisposable Properties Context Declaration public ICeresGraphCompilationContext Context { get; set; } Property Value Type Description ICeresGraphCompilationContext Source Compilation source graph, will not change during compilation Declaration public CeresGraph Source { get; } Property Value Type Description CeresGraph Target Compilation target graph Declaration public CeresGraph Target { get; } Property Value Type Description CeresGraph Methods Dispose() Declaration public void Dispose() GetPooled(CeresGraph, ICeresGraphCompilationContext) Declaration public static CeresGraphCompiler GetPooled(CeresGraph graph, ICeresGraphCompilationContext context = null) Parameters Type Name Description CeresGraph graph ICeresGraphCompilationContext context Returns Type Description CeresGraphCompiler Implements System.IDisposable"
  },
  "api/Ceres.Graph.CeresGraphContainerExtensions.html": {
    "href": "api/Ceres.Graph.CeresGraphContainerExtensions.html",
    "title": "Class CeresGraphContainerExtensions | Ceres Documentation",
    "keywords": "Class CeresGraphContainerExtensions Inheritance object CeresGraphContainerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public static class CeresGraphContainerExtensions Methods GetIdentifier(ICeresGraphContainer) Get a CeresGraphIdentifier from ICeresGraphContainer instance Declaration public static CeresGraphIdentifier GetIdentifier(this ICeresGraphContainer container) Parameters Type Name Description ICeresGraphContainer container Returns Type Description CeresGraphIdentifier"
  },
  "api/Ceres.Graph.CeresGraphData.html": {
    "href": "api/Ceres.Graph.CeresGraphData.html",
    "title": "Class CeresGraphData | Ceres Documentation",
    "keywords": "Class CeresGraphData Metadata for CeresGraph Inheritance object CeresGraphData FlowGraphSerializedData LinkedGraphData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class CeresGraphData Fields nodeData Declaration public CeresNodeData[] nodeData Field Value Type Description CeresNodeData[] nodeGroups Declaration public NodeGroup[] nodeGroups Field Value Type Description NodeGroup[] variableData Declaration public SharedVariableData[] variableData Field Value Type Description SharedVariableData[] Methods BuildGraph(CeresGraph) Build graph from data Declaration public virtual void BuildGraph(CeresGraph graph) Parameters Type Name Description CeresGraph graph Exceptions Type Condition System.ArgumentException Clone() Declaration public CeresGraphData Clone() Returns Type Description CeresGraphData CloneT<T>() Declaration public T CloneT<T>() where T : CeresGraphData Returns Type Description T Type Parameters Name Description T FromJson<T>(string) Deserialize CeresGraphData from json Declaration public static T FromJson<T>(string serializedData) where T : CeresGraphData Parameters Type Name Description string serializedData Returns Type Description T Type Parameters Name Description T GetFallbackNode(CeresNodeData, int) Get fallback node for missing class Declaration protected virtual CeresNode GetFallbackNode(CeresNodeData fallbackNodeData, int index) Parameters Type Name Description CeresNodeData fallbackNodeData int index Returns Type Description CeresNode PreSerialization() Preprocess before graph data serialized to container Declaration public virtual void PreSerialization() RedirectNodeType(ManagedReferenceType) Redirect node type from ManagedReferenceType, default using redirectors from APIUpdateConfig Declaration protected virtual Type RedirectNodeType(ManagedReferenceType nodeType) Parameters Type Name Description ManagedReferenceType nodeType Returns Type Description System.Type RedirectSerializedType(string) Redirect serialized type from , default using redirectors from APIUpdateConfig Declaration protected virtual Type RedirectSerializedType(string serializedType) Parameters Type Name Description string serializedType Returns Type Description System.Type RedirectVariableType(ManagedReferenceType) Redirect variable type from ManagedReferenceType, default using redirectors from APIUpdateConfig Declaration protected virtual Type RedirectVariableType(ManagedReferenceType nodeType) Parameters Type Name Description ManagedReferenceType nodeType Returns Type Description System.Type ResolveSerializedType(string) Resolve type from Declaration protected Type ResolveSerializedType(string serializedType) Parameters Type Name Description string serializedType Returns Type Description System.Type RestoreNode(int, CeresNode[]) Declaration protected void RestoreNode(int index, CeresNode[] nodes) Parameters Type Name Description int index CeresNode[] nodes RestoreVariable(int, SharedVariable[]) Declaration protected void RestoreVariable(int index, SharedVariable[] variables) Parameters Type Name Description int index SharedVariable[] variables ToJson(bool) Serialize CeresGraphData to json Declaration public string ToJson(bool indented = false) Parameters Type Name Description bool indented Returns Type Description string"
  },
  "api/Ceres.Graph.CeresGraphIdentifier.html": {
    "href": "api/Ceres.Graph.CeresGraphIdentifier.html",
    "title": "Struct CeresGraphIdentifier | Ceres Documentation",
    "keywords": "Struct CeresGraphIdentifier Identifier for ICeresGraphContainer instance Implements System.IEquatable<T><CeresGraphIdentifier> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public struct CeresGraphIdentifier : IEquatable<CeresGraphIdentifier> Fields boundObject Declaration public UObject boundObject Field Value Type Description UObject containerType Declaration public string containerType Field Value Type Description string Methods Equals(CeresGraphIdentifier) Declaration public bool Equals(CeresGraphIdentifier other) Parameters Type Name Description CeresGraphIdentifier other Returns Type Description bool Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides System.ValueType.Equals(object) GetContainer<TContainer>() Get ICeresGraphContainer from identifier Declaration public TContainer GetContainer<TContainer>() where TContainer : class, ICeresGraphContainer Returns Type Description TContainer Type Parameters Name Description TContainer GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides System.ValueType.GetHashCode() IsValid() Declaration public bool IsValid() Returns Type Description bool ToString() Declaration public override string ToString() Returns Type Description string Overrides System.ValueType.ToString() Implements System.IEquatable<T>"
  },
  "api/Ceres.Graph.CeresNode.Enumerator.html": {
    "href": "api/Ceres.Graph.CeresNode.Enumerator.html",
    "title": "Struct CeresNode.Enumerator | Ceres Documentation",
    "keywords": "Struct CeresNode.Enumerator Implements System.Collections.Generic.IEnumerator<T><CeresNode> System.Collections.IEnumerator System.IDisposable Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax protected struct CeresNode.Enumerator : IEnumerator<CeresNode>, IEnumerator, IDisposable Constructors Enumerator(CeresNode) Declaration public Enumerator(CeresNode root) Parameters Type Name Description CeresNode root Properties Current Declaration public readonly CeresNode Current { get; } Property Value Type Description CeresNode Methods Dispose() Declaration public void Dispose() MoveNext() Declaration public bool MoveNext() Returns Type Description bool Reset() Declaration public void Reset() Explicit Interface Implementations IEnumerator.Current Declaration readonly object IEnumerator.Current { get; } Returns Type Description object Implements System.Collections.Generic.IEnumerator<T> System.Collections.IEnumerator System.IDisposable"
  },
  "api/Ceres.Graph.CeresNode.html": {
    "href": "api/Ceres.Graph.CeresNode.html",
    "title": "Class CeresNode | Ceres Documentation",
    "keywords": "Class CeresNode Base class for ceres graph node Inheritance object CeresNode ExecutableNode Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class CeresNode : IEnumerable<CeresNode>, IEnumerable, IDisposable Properties GraphPosition Node graph position Declaration public Rect GraphPosition { get; set; } Property Value Type Description Rect Guid Node unique id Declaration public string Guid { get; set; } Property Value Type Description string NodeData Declaration public CeresNodeData NodeData { get; protected set; } Property Value Type Description CeresNodeData Methods Dispose() Release on node destroy Declaration public virtual void Dispose() GetEnumerator() Declaration public virtual IEnumerator<CeresNode> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator<T><CeresNode> GetExecutionPath() Get node instance execution path Declaration public virtual ExecutionPath GetExecutionPath() Returns Type Description ExecutionPath GetExecutionPath(Type) Declaration public static ExecutionPath GetExecutionPath(Type nodeType) Parameters Type Name Description System.Type nodeType Returns Type Description ExecutionPath GetSerializedData() Get serialized data of this node Declaration public virtual CeresNodeData GetSerializedData() Returns Type Description CeresNodeData GetTargetSubtitle(string, bool) Declaration public static string GetTargetSubtitle(string name, bool richText = true) Parameters Type Name Description string name bool richText Returns Type Description string GetTargetSubtitle(Type, bool) Declaration public static string GetTargetSubtitle(Type type, bool richText = true) Parameters Type Name Description System.Type type bool richText Returns Type Description string GetTypeName() Get node type short name for debug purpose Declaration public string GetTypeName() Returns Type Description string MakeSubtitle(string, bool) Declaration public static string MakeSubtitle(string subtitle, bool richText = true) Parameters Type Name Description string subtitle bool richText Returns Type Description string Explicit Interface Implementations IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.CeresNodeData.html": {
    "href": "api/Ceres.Graph.CeresNodeData.html",
    "title": "Class CeresNodeData | Ceres Documentation",
    "keywords": "Class CeresNodeData Metadata for CeresNode Inheritance object CeresNodeData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class CeresNodeData Fields description Node user description Declaration public string description Field Value Type Description string executionPath Node execution path Declaration public ExecutionPath executionPath Field Value Type Description ExecutionPath genericParameters Generic type parameters Declaration public string[] genericParameters Field Value Type Description string[] graphPosition Node graph editor position Declaration public Rect graphPosition Field Value Type Description Rect guid Node unique id Declaration public string guid Field Value Type Description string nodeType Node type Declaration public ManagedReferenceType nodeType Field Value Type Description ManagedReferenceType portData Port metadata Declaration public CeresPortData[] portData Field Value Type Description CeresPortData[] serializedData Json serialized data of node properties Declaration public string serializedData Field Value Type Description string Methods AddPortData(CeresPortData) Declaration public void AddPortData(CeresPortData data) Parameters Type Name Description CeresPortData data ClearPortData() Declaration public void ClearPortData() Clone() Declaration public virtual CeresNodeData Clone() Returns Type Description CeresNodeData Deserialize(Type) Deserialize a CeresNode instance from this data Declaration public CeresNode Deserialize(Type outNodeType) Parameters Type Name Description System.Type outNodeType Returns Type Description CeresNode FindPortData(string, int) Declaration public CeresPortData FindPortData(string propertyName, int index) Parameters Type Name Description string propertyName int index Returns Type Description CeresPortData FindPortData(string) Declaration public CeresPortData FindPortData(string propertyName) Parameters Type Name Description string propertyName Returns Type Description CeresPortData RemovePortData(CeresPortData) Declaration public void RemovePortData(CeresPortData data) Parameters Type Name Description CeresPortData data Serialize(CeresNode) Serialize node data Declaration public void Serialize(CeresNode node) Parameters Type Name Description CeresNode node"
  },
  "api/Ceres.Graph.CeresPort-1.html": {
    "href": "api/Ceres.Graph.CeresPort-1.html",
    "title": "Class CeresPort<TValue> | Ceres Documentation",
    "keywords": "Class CeresPort<TValue> Generic port for any value worked as linked list at runtime Inheritance object CeresPort CeresPort<TValue> DelegatePort<TDelegate> NodePort Implements System.IDisposable IPort<TValue> IPort Inherited Members CeresPort.AdaptedGetter CeresPort.AssignValueType<T>() CeresPort.AssignValueType(Type) CeresPort.GetAssignedPortValueTypes() CeresPort.GetCompatibleStructure(Type) CeresPort.IsCompatibleTo(Type, Type) CeresPort.GetCompatibleTypes(Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class CeresPort<TValue> : CeresPort, IDisposable, IPort<TValue>, IPort Type Parameters Name Description TValue Constructors CeresPort() Declaration public CeresPort() CeresPort(TValue) Declaration public CeresPort(TValue value) Parameters Type Name Description TValue value Fields Default Declaration public static readonly CeresPort<TValue> Default Field Value Type Description CeresPort<TValue> DefaultArray Declaration public static readonly CeresPort<TValue>[] DefaultArray Field Value Type Description CeresPort<TValue>[] DefaultList Declaration public static readonly List<CeresPort<TValue>> DefaultList Field Value Type Description System.Collections.Generic.List<T><CeresPort<TValue>> defaultValue Port self value or default value if has no connection Declaration public TValue defaultValue Field Value Type Description TValue Properties Value Declaration public TValue Value { get; set; } Property Value Type Description TValue Methods AssignValueGetter(IPort) Declaration public override void AssignValueGetter(IPort port) Parameters Type Name Description IPort port Overrides CeresPort.AssignValueGetter(IPort) CreateProxyPort(CeresPort<CeresPort>) Declaration protected override IPort CreateProxyPort(CeresPort<CeresPort> ceresPort) Parameters Type Name Description CeresPort<CeresPort> ceresPort Returns Type Description IPort Overrides CeresPort.CreateProxyPort(CeresPort<CeresPort>) Dispose() Declaration public override void Dispose() Overrides CeresPort.Dispose() GetValue() Declaration public override object GetValue() Returns Type Description object Overrides CeresPort.GetValue() GetValueType() Get port value type Declaration public override Type GetValueType() Returns Type Description System.Type Overrides CeresPort.GetValueType() IsCompatibleTo(Type) Is this port value type compatible to specific type Declaration public static bool IsCompatibleTo(Type type) Parameters Type Name Description System.Type type Returns Type Description bool Link(CeresPort) Declaration public override void Link(CeresPort targetPort) Parameters Type Name Description CeresPort targetPort Overrides CeresPort.Link(CeresPort) MakeCompatibleTo<T>(Func<TValue, T>) Register an output value convert method to make is compatible to Declaration public static void MakeCompatibleTo<T>(Func<TValue, T> valueConvertFunc) Parameters Type Name Description System.Func<T, TResult><TValue, T> valueConvertFunc Func for converting input to Type Parameters Name Description T SetValue(object) Declaration public override void SetValue(object value) Parameters Type Name Description object value Overrides CeresPort.SetValue(object) Implements System.IDisposable IPort<TValue> IPort"
  },
  "api/Ceres.Graph.CeresPort.html": {
    "href": "api/Ceres.Graph.CeresPort.html",
    "title": "Class CeresPort | Ceres Documentation",
    "keywords": "Class CeresPort Base class for ceres graph port Inheritance object CeresPort CeresPort<TValue> Implements IPort System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public abstract class CeresPort : IPort, IDisposable Properties AdaptedGetter Last linked adapted port Declaration protected IPort AdaptedGetter { get; } Property Value Type Description IPort Methods AssignValueGetter(IPort) Assign this port's input value source Declaration public virtual void AssignValueGetter(IPort port) Parameters Type Name Description IPort port AssignValueType(Type) Declaration public static void AssignValueType(Type type) Parameters Type Name Description System.Type type AssignValueType<T>() Declaration public static void AssignValueType<T>() Type Parameters Name Description T CreateProxyPort(CeresPort<CeresPort>) Declaration protected abstract IPort CreateProxyPort(CeresPort<CeresPort> ceresPort) Parameters Type Name Description CeresPort<CeresPort> ceresPort Returns Type Description IPort Dispose() Declaration public virtual void Dispose() GetAssignedPortValueTypes() Declaration public static Type[] GetAssignedPortValueTypes() Returns Type Description System.Type[] GetCompatibleStructure(Type) Declaration protected static CeresPort.PortCompatibleStructure GetCompatibleStructure(Type type) Parameters Type Name Description System.Type type Returns Type Description CeresPort.PortCompatibleStructure GetCompatibleTypes(Type) Declaration public static Type[] GetCompatibleTypes(Type from) Parameters Type Name Description System.Type from Returns Type Description System.Type[] GetValue() Get port value Declaration public abstract object GetValue() Returns Type Description object GetValueType() Declaration public abstract Type GetValueType() Returns Type Description System.Type IsCompatibleTo(Type, Type) Whether port value type is compatible to another Declaration public static bool IsCompatibleTo(Type from, Type to) Parameters Type Name Description System.Type from System.Type to Returns Type Description bool Link(CeresPort) Link another CeresPort in forward path Declaration public abstract void Link(CeresPort targetPort) Parameters Type Name Description CeresPort targetPort SetValue(object) Set port default value Declaration public abstract void SetValue(object value) Parameters Type Name Description object value Implements IPort System.IDisposable"
  },
  "api/Ceres.Graph.CeresPort.PortCompatibleStructure.html": {
    "href": "api/Ceres.Graph.CeresPort.PortCompatibleStructure.html",
    "title": "Class CeresPort.PortCompatibleStructure | Ceres Documentation",
    "keywords": "Class CeresPort.PortCompatibleStructure Inheritance object CeresPort.PortCompatibleStructure Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax protected class CeresPort.PortCompatibleStructure Fields AdapterCreateFunc Declaration public readonly Dictionary<Type, Func<IPort, IPort>> AdapterCreateFunc Field Value Type Description System.Collections.Generic.Dictionary<TKey, TValue><System.Type, System.Func<T, TResult><IPort, IPort>> CompatibleTypes Declaration public readonly HashSet<Type> CompatibleTypes Field Value Type Description System.Collections.Generic.HashSet<T><System.Type>"
  },
  "api/Ceres.Graph.CeresPortData.html": {
    "href": "api/Ceres.Graph.CeresPortData.html",
    "title": "Class CeresPortData | Ceres Documentation",
    "keywords": "Class CeresPortData Metadata for CeresPort Inheritance object CeresPortData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class CeresPortData Fields arrayIndex Array index if bound property is an array Declaration public int arrayIndex Field Value Type Description int connections Port connection data Declaration public PortConnectionData[] connections Field Value Type Description PortConnectionData[] propertyName Bound property name Declaration public string propertyName Field Value Type Description string type Port generic parameter type string Declaration public string type Field Value Type Description string Methods FromFieldInfo(FieldInfo) Create port data from Declaration public static CeresPortData FromFieldInfo(FieldInfo fieldInfo) Parameters Type Name Description FieldInfo fieldInfo Returns Type Description CeresPortData FromParameterInfo(ParameterInfo) Create port data from Declaration public static CeresPortData FromParameterInfo(ParameterInfo parameterInfo) Parameters Type Name Description ParameterInfo parameterInfo Returns Type Description CeresPortData GetFieldInfo(Type) Declaration public FieldInfo GetFieldInfo(Type inNodeType) Parameters Type Name Description System.Type inNodeType Returns Type Description FieldInfo GetPort(CeresNode) Declaration public CeresPort GetPort(CeresNode nodeInstance) Parameters Type Name Description CeresNode nodeInstance Returns Type Description CeresPort GetValueType() Declaration public Type GetValueType() Returns Type Description System.Type SetValueType(Type) Declaration public void SetValueType(Type valueType) Parameters Type Name Description System.Type valueType"
  },
  "api/Ceres.Graph.CeresSubGraphData-1.html": {
    "href": "api/Ceres.Graph.CeresSubGraphData-1.html",
    "title": "Class CeresSubGraphData<TGraphData> | Ceres Documentation",
    "keywords": "Class CeresSubGraphData<TGraphData> SubGraph metadata of > Inheritance object CeresSubGraphData CeresSubGraphData<TGraphData> FlowSubGraphData Inherited Members CeresSubGraphData.name CeresSubGraphData.guid object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class CeresSubGraphData<TGraphData> : CeresSubGraphData where TGraphData : CeresGraphData Type Parameters Name Description TGraphData Fields graphData Declaration public TGraphData graphData Field Value Type Description TGraphData Methods GetSubGraphData() Declaration public override CeresGraphData GetSubGraphData() Returns Type Description CeresGraphData Overrides CeresSubGraphData.GetSubGraphData()"
  },
  "api/Ceres.Graph.CeresSubGraphData.html": {
    "href": "api/Ceres.Graph.CeresSubGraphData.html",
    "title": "Class CeresSubGraphData | Ceres Documentation",
    "keywords": "Class CeresSubGraphData SubGraph metadata Inheritance object CeresSubGraphData CeresSubGraphData<TGraphData> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class CeresSubGraphData Fields guid Declaration public string guid Field Value Type Description string name Declaration public string name Field Value Type Description string Methods GetSubGraphData() Declaration public abstract CeresGraphData GetSubGraphData() Returns Type Description CeresGraphData"
  },
  "api/Ceres.Graph.CeresSubGraphSlot.html": {
    "href": "api/Ceres.Graph.CeresSubGraphSlot.html",
    "title": "Class CeresSubGraphSlot | Ceres Documentation",
    "keywords": "Class CeresSubGraphSlot SubGraph container for CeresGraph Inheritance object CeresSubGraphSlot FlowSubGraphSlot Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public class CeresSubGraphSlot Fields Graph SubGraph instance Declaration public CeresGraph Graph Field Value Type Description CeresGraph Guid SubGraph persistent id Declaration public string Guid Field Value Type Description string Name SubGraph name Declaration public string Name Field Value Type Description string"
  },
  "api/Ceres.Graph.ExecutionPath.html": {
    "href": "api/Ceres.Graph.ExecutionPath.html",
    "title": "Enum ExecutionPath | Ceres Documentation",
    "keywords": "Enum ExecutionPath Define how to execute node Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public enum ExecutionPath Fields Name Description Dependency Execute node by a dependency graph that let node executed only when used Forward Execute node in a forward path that ensure order"
  },
  "api/Ceres.Graph.Flow.Annotations.ExecutableEventAttribute.html": {
    "href": "api/Ceres.Graph.Flow.Annotations.ExecutableEventAttribute.html",
    "title": "Class ExecutableEventAttribute | Ceres Documentation",
    "keywords": "Class ExecutableEventAttribute Allow this event can be implemented in flow graph Inheritance object System.Attribute ExecutableEventAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, Inherited = false)] public class ExecutableEventAttribute : Attribute Remarks Annotate event custom create method to let source generator generate wrapper node for creating event"
  },
  "api/Ceres.Graph.Flow.Annotations.ExecutableFunctionAttribute.html": {
    "href": "api/Ceres.Graph.Flow.Annotations.ExecutableFunctionAttribute.html",
    "title": "Class ExecutableFunctionAttribute | Ceres Documentation",
    "keywords": "Class ExecutableFunctionAttribute Allow flow graph to execute this method Inheritance object System.Attribute ExecutableFunctionAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Method, Inherited = false)] public sealed class ExecutableFunctionAttribute : Attribute Properties DisplayTarget Function should display first parameter as method declare type target, need set IsScriptMethod first Declaration public bool DisplayTarget { get; set; } Property Value Type Description bool ExecuteInDependency Function can be executed in dependency execution path, only support static method Declaration public bool ExecuteInDependency { get; set; } Property Value Type Description bool Remarks Functions executed in dependency mode should not depend on the execution order between nodes, and only execute based on the input values. For functions whose input parameters contain reference types, it is more appropriate to use forward path. IsScriptMethod Function should use first parameter type as its script type Declaration public bool IsScriptMethod { get; set; } Property Value Type Description bool IsSelfTarget Function first parameter that should pass graph context object as default value Declaration public bool IsSelfTarget { get; set; } Property Value Type Description bool SearchName Function entry name displayed in search window Declaration public string SearchName { get; set; } Property Value Type Description string"
  },
  "api/Ceres.Graph.Flow.Annotations.GenerateFlowAttribute.html": {
    "href": "api/Ceres.Graph.Flow.Annotations.GenerateFlowAttribute.html",
    "title": "Class GenerateFlowAttribute | Ceres Documentation",
    "keywords": "Class GenerateFlowAttribute Attribute for notifying Ceres source generator to emit code for partial class implementing IFlowGraphContainer Inheritance object System.Attribute GenerateFlowAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class GenerateFlowAttribute : Attribute Remarks Must add partial modifier Properties GenerateImplementation Whether add implementation for IFlowGraphContainer Declaration public bool GenerateImplementation { get; set; } Property Value Type Description bool Remarks Must add partial modifier GenerateRuntime Whether generate runtime implementation for IFlowGraphRuntime Declaration public bool GenerateRuntime { get; set; } Property Value Type Description bool Remarks Must add partial modifier"
  },
  "api/Ceres.Graph.Flow.Annotations.html": {
    "href": "api/Ceres.Graph.Flow.Annotations.html",
    "title": "Namespace Ceres.Graph.Flow.Annotations | Ceres Documentation",
    "keywords": "Namespace Ceres.Graph.Flow.Annotations Classes ExecutableEventAttribute Allow this event can be implemented in flow graph ExecutableFunctionAttribute Allow flow graph to execute this method GenerateFlowAttribute Attribute for notifying Ceres source generator to emit code for partial class implementing IFlowGraphContainer ImplementableEventAttribute Allow flow graph to execute event from this method, event execution should be implemented inside this method. ResolveReturnAttribute Notify graph editor to use function parameter value to display return type, only support"
  },
  "api/Ceres.Graph.Flow.Annotations.ImplementableEventAttribute.html": {
    "href": "api/Ceres.Graph.Flow.Annotations.ImplementableEventAttribute.html",
    "title": "Class ImplementableEventAttribute | Ceres Documentation",
    "keywords": "Class ImplementableEventAttribute Allow flow graph to execute event from this method, event execution should be implemented inside this method. Inheritance object System.Attribute ImplementableEventAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Method, Inherited = false)] public sealed class ImplementableEventAttribute : Attribute"
  },
  "api/Ceres.Graph.Flow.Annotations.ResolveReturnAttribute.html": {
    "href": "api/Ceres.Graph.Flow.Annotations.ResolveReturnAttribute.html",
    "title": "Class ResolveReturnAttribute | Ceres Documentation",
    "keywords": "Class ResolveReturnAttribute Notify graph editor to use function parameter value to display return type, only support Inheritance object System.Attribute ResolveReturnAttribute Inherited Members System.Attribute.Equals(object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, bool) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, bool) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, bool) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, bool) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, bool) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, bool) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, bool) System.Attribute.Match(object) System.Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Annotations Assembly: cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Parameter)] public sealed class ResolveReturnAttribute : Attribute"
  },
  "api/Ceres.Graph.Flow.CustomExecutionEvent-1.html": {
    "href": "api/Ceres.Graph.Flow.CustomExecutionEvent-1.html",
    "title": "Class CustomExecutionEvent<TEventBase> | Ceres Documentation",
    "keywords": "Class CustomExecutionEvent<TEventBase> Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase CustomExecutionEvent CustomExecutionEvent<TEventBase> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members CustomExecutionEvent.exec CustomExecutionEvent.Execute(ExecutionContext) CustomExecutionEvent.LocalExecute(ExecutionContext) CustomExecutionEvent.RegisterEventId<TEventBase>(string) ExecutionEventBase.eventName ExecutionEventBase.isImplementable ExecutionEventBase.GetEventName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public abstract class CustomExecutionEvent<TEventBase> : CustomExecutionEvent, IEnumerable<CeresNode>, IEnumerable, IDisposable where TEventBase : EventBase<TEventBase>, new() Type Parameters Name Description TEventBase Fields EventName Declaration protected static readonly string EventName Field Value Type Description string Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.CustomExecutionEvent.html": {
    "href": "api/Ceres.Graph.Flow.CustomExecutionEvent.html",
    "title": "Class CustomExecutionEvent | Ceres Documentation",
    "keywords": "Class CustomExecutionEvent Base class for ExecutionEventBase generated from by Ceres.SourceGenerator Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase CustomExecutionEvent CustomExecutionEvent<TEventBase> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutionEventBase.eventName ExecutionEventBase.isImplementable ExecutionEventBase.GetEventName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class CustomExecutionEvent : ExecutionEventBase, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields exec Declaration public NodePort exec Field Value Type Description NodePort Methods Execute(ExecutionContext) Declaration protected override sealed UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) LocalExecute(ExecutionContext) Declaration protected virtual void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext RegisterEventId<TEventBase>(string) Declaration protected static void RegisterEventId<TEventBase>(string eventName) where TEventBase : EventBase<TEventBase>, new() Parameters Type Name Description string eventName Type Parameters Name Description TEventBase Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.CustomFunctionInput.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.CustomFunctionInput.html",
    "title": "Class CustomFunctionInput | Ceres Documentation",
    "keywords": "Class CustomFunctionInput Inheritance object CeresNode ExecutableNode ExecutableEvent CustomFunctionInput Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver IReadOnlyPortArrayNode Inherited Members ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public class CustomFunctionInput : ExecutableEvent, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver, IReadOnlyPortArrayNode Fields exec Declaration public NodePort exec Field Value Type Description NodePort outputs Declaration public CeresPort<CeresPort>[] outputs Field Value Type Description CeresPort<CeresPort>[] parameters Declaration public CustomFunctionInputParameter[] parameters Field Value Type Description CustomFunctionInputParameter[] Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) GetEventName() Declaration public override string GetEventName() Returns Type Description string Overrides ExecutableEvent.GetEventName() GetPortArrayFieldName() Declaration public string GetPortArrayFieldName() Returns Type Description string GetPortArrayLength() Declaration public int GetPortArrayLength() Returns Type Description int OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver IReadOnlyPortArrayNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.CustomFunctionInputParameter.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.CustomFunctionInputParameter.html",
    "title": "Class CustomFunctionInputParameter | Ceres Documentation",
    "keywords": "Class CustomFunctionInputParameter Inheritance object CustomFunctionParameter CustomFunctionInputParameter Inherited Members CustomFunctionParameter.serializedTypeString CustomFunctionParameter.isArray CustomFunctionParameter.GetParameterType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public class CustomFunctionInputParameter : CustomFunctionParameter Fields parameterName Declaration public string parameterName Field Value Type Description string"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.CustomFunctionOutput.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.CustomFunctionOutput.html",
    "title": "Class CustomFunctionOutput | Ceres Documentation",
    "keywords": "Class CustomFunctionOutput Inheritance object CeresNode ExecutableNode ForwardNode CustomFunctionOutput Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public class CustomFunctionOutput : ForwardNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields parameter Declaration public CustomFunctionOutputParameter parameter Field Value Type Description CustomFunctionOutputParameter returnValue Declaration public CeresPort<CeresPort> returnValue Field Value Type Description CeresPort<CeresPort> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.CustomFunctionOutputParameter.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.CustomFunctionOutputParameter.html",
    "title": "Class CustomFunctionOutputParameter | Ceres Documentation",
    "keywords": "Class CustomFunctionOutputParameter Inheritance object CustomFunctionParameter CustomFunctionOutputParameter Inherited Members CustomFunctionParameter.serializedTypeString CustomFunctionParameter.isArray CustomFunctionParameter.GetParameterType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public class CustomFunctionOutputParameter : CustomFunctionParameter Fields hasReturn Declaration public bool hasReturn Field Value Type Description bool"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.CustomFunctionParameter.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.CustomFunctionParameter.html",
    "title": "Class CustomFunctionParameter | Ceres Documentation",
    "keywords": "Class CustomFunctionParameter Inheritance object CustomFunctionParameter CustomFunctionInputParameter CustomFunctionOutputParameter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public class CustomFunctionParameter Fields isArray Declaration public bool isArray Field Value Type Description bool serializedTypeString Declaration public string serializedTypeString Field Value Type Description string Methods GetParameterType() Declaration public Type GetParameterType() Returns Type Description System.Type"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunction.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunction.html",
    "title": "Class FlowNode_ExecuteCustomFunction | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunction Execute custom function implemented in flow graph Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionReturn FlowNode_ExecuteCustomFunctionVoid Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class FlowNode_ExecuteCustomFunction : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Fields functionAsset Declaration public FlowGraphFunctionAsset functionAsset Field Value Type Description FlowGraphFunctionAsset functionName Declaration public string functionName Field Value Type Description string Methods Compile(CeresGraphCompiler) Declaration public void Compile(CeresGraphCompiler compiler) Parameters Type Name Description CeresGraphCompiler compiler Execute(ExecutionContext) Declaration protected override sealed UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides FlowNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionReturn.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionReturn.html",
    "title": "Class FlowNode_ExecuteCustomFunctionReturn | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionReturn Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionReturn FlowNode_ExecuteCustomFunctionTReturn<TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TP6, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax public abstract class FlowNode_ExecuteCustomFunctionReturn : FlowNode_ExecuteCustomFunction, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-1.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-1.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTReturn<TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTReturn<TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionReturn FlowNode_ExecuteCustomFunctionTReturn<TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTReturn<TR> : FlowNode_ExecuteCustomFunctionReturn, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TR Fields output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-2.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-2.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionReturn FlowNode_ExecuteCustomFunctionTReturn<TP1, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTReturn<TP1, TR> : FlowNode_ExecuteCustomFunctionReturn, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-3.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-3.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionReturn FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TR> : FlowNode_ExecuteCustomFunctionReturn, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 TP2 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-4.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-4.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionReturn FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TR> : FlowNode_ExecuteCustomFunctionReturn, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 TP2 TP3 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-5.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-5.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionReturn FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TR> : FlowNode_ExecuteCustomFunctionReturn, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 TP2 TP3 TP4 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-6.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-6.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionReturn FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TR> : FlowNode_ExecuteCustomFunctionReturn, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 TP2 TP3 TP4 TP5 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> input5 Declaration public CeresPort<TP5> input5 Field Value Type Description CeresPort<TP5> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-7.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTReturn-7.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TP6, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TP6, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionReturn FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TP6, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TP6, TR> : FlowNode_ExecuteCustomFunctionReturn, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 TP2 TP3 TP4 TP5 TP6 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> input5 Declaration public CeresPort<TP5> input5 Field Value Type Description CeresPort<TP5> input6 Declaration public CeresPort<TP6> input6 Field Value Type Description CeresPort<TP6> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-1.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-1.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionVoid FlowNode_ExecuteCustomFunctionTVoid<TP1> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTVoid<TP1> : FlowNode_ExecuteCustomFunctionVoid, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-2.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-2.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionVoid FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2> : FlowNode_ExecuteCustomFunctionVoid, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 TP2 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-3.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-3.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionVoid FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3> : FlowNode_ExecuteCustomFunctionVoid, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 TP2 TP3 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-4.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-4.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionVoid FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4> : FlowNode_ExecuteCustomFunctionVoid, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 TP2 TP3 TP4 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-5.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-5.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionVoid FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5> : FlowNode_ExecuteCustomFunctionVoid, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 TP2 TP3 TP4 TP5 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> input5 Declaration public CeresPort<TP5> input5 Field Value Type Description CeresPort<TP5> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-6.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid-6.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5, TP6> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5, TP6> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionVoid FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5, TP6> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5, TP6> : FlowNode_ExecuteCustomFunctionVoid, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Type Parameters Name Description TP1 TP2 TP3 TP4 TP5 TP6 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> input5 Declaration public CeresPort<TP5> input5 Field Value Type Description CeresPort<TP5> input6 Declaration public CeresPort<TP6> input6 Field Value Type Description CeresPort<TP6> Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionTVoid.html",
    "title": "Class FlowNode_ExecuteCustomFunctionTVoid | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionTVoid Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionVoid FlowNode_ExecuteCustomFunctionTVoid Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteCustomFunctionTVoid : FlowNode_ExecuteCustomFunctionVoid, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionVoid.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.FlowNode_ExecuteCustomFunctionVoid.html",
    "title": "Class FlowNode_ExecuteCustomFunctionVoid | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteCustomFunctionVoid Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction FlowNode_ExecuteCustomFunctionVoid FlowNode_ExecuteCustomFunctionTVoid FlowNode_ExecuteCustomFunctionTVoid<TP1> FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2> FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3> FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4> FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5> FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5, TP6> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode Inherited Members FlowNode_ExecuteCustomFunction.functionName FlowNode_ExecuteCustomFunction.functionAsset FlowNode_ExecuteCustomFunction.Execute(ExecutionContext) FlowNode_ExecuteCustomFunction.Compile(CeresGraphCompiler) FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.CustomFunctions Assembly: cs.temp.dll.dll Syntax public abstract class FlowNode_ExecuteCustomFunctionVoid : FlowNode_ExecuteCustomFunction, IEnumerable<CeresNode>, IEnumerable, IDisposable, IRuntimeCompiledNode Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IRuntimeCompiledNode"
  },
  "api/Ceres.Graph.Flow.CustomFunctions.html": {
    "href": "api/Ceres.Graph.Flow.CustomFunctions.html",
    "title": "Namespace Ceres.Graph.Flow.CustomFunctions | Ceres Documentation",
    "keywords": "Namespace Ceres.Graph.Flow.CustomFunctions Classes CustomFunctionInput CustomFunctionInputParameter CustomFunctionOutput CustomFunctionOutputParameter CustomFunctionParameter FlowNode_ExecuteCustomFunction Execute custom function implemented in flow graph FlowNode_ExecuteCustomFunctionReturn FlowNode_ExecuteCustomFunctionTReturn<TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TR> FlowNode_ExecuteCustomFunctionTReturn<TP1, TP2, TP3, TP4, TP5, TP6, TR> FlowNode_ExecuteCustomFunctionTVoid FlowNode_ExecuteCustomFunctionTVoid<TP1> FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2> FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3> FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4> FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5> FlowNode_ExecuteCustomFunctionTVoid<TP1, TP2, TP3, TP4, TP5, TP6> FlowNode_ExecuteCustomFunctionVoid"
  },
  "api/Ceres.Graph.Flow.DelegatePort-1.html": {
    "href": "api/Ceres.Graph.Flow.DelegatePort-1.html",
    "title": "Class DelegatePort<TDelegate> | Ceres Documentation",
    "keywords": "Class DelegatePort<TDelegate> Inheritance object CeresPort CeresPort<TDelegate> DelegatePort<TDelegate> Implements System.IDisposable IPort<TDelegate> IPort IDelegatePort Inherited Members CeresPort<TDelegate>.defaultValue CeresPort<TDelegate>.Default CeresPort<TDelegate>.DefaultArray CeresPort<TDelegate>.DefaultList CeresPort<TDelegate>.Value CeresPort<TDelegate>.GetValueType() CeresPort<TDelegate>.MakeCompatibleTo<T>(Func<TDelegate, T>) CeresPort<TDelegate>.IsCompatibleTo(Type) CeresPort<TDelegate>.CreateProxyPort(CeresPort<CeresPort>) CeresPort<TDelegate>.Link(CeresPort) CeresPort<TDelegate>.AssignValueGetter(IPort) CeresPort<TDelegate>.SetValue(object) CeresPort<TDelegate>.GetValue() CeresPort<TDelegate>.Dispose() CeresPort.AdaptedGetter CeresPort.AssignValueType<T>() CeresPort.AssignValueType(Type) CeresPort.GetAssignedPortValueTypes() CeresPort.GetCompatibleStructure(Type) CeresPort.IsCompatibleTo(Type, Type) CeresPort.GetCompatibleTypes(Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class DelegatePort<TDelegate> : CeresPort<TDelegate>, IDisposable, IPort<TDelegate>, IPort, IDelegatePort where TDelegate : EventDelegateBase, new() Type Parameters Name Description TDelegate Constructors DelegatePort() Declaration public DelegatePort() DelegatePort(TDelegate) Declaration public DelegatePort(TDelegate value) Parameters Type Name Description TDelegate value Methods CreateDelegate(FlowGraph, string) Declaration public void CreateDelegate(FlowGraph flowGraph, string eventNodeEventName) Parameters Type Name Description FlowGraph flowGraph string eventNodeEventName Implements System.IDisposable IPort<TValue> IPort IDelegatePort"
  },
  "api/Ceres.Graph.Flow.EventDelegate-1.html": {
    "href": "api/Ceres.Graph.Flow.EventDelegate-1.html",
    "title": "Class EventDelegate<T1> | Ceres Documentation",
    "keywords": "Class EventDelegate<T1> Inheritance object EventDelegateBase EventDelegate<T1> Inherited Members EventDelegateBase.InvokeInternal(UObject, EventBase) EventDelegateBase.GetEventName() EventDelegateBase.GetContextObject() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class EventDelegate<T1> : EventDelegateBase Type Parameters Name Description T1 Methods Invoke(UObject, T1) Declaration public void Invoke(UObject contextObject, T1 input1) Parameters Type Name Description UObject contextObject T1 input1 Operators implicit operator Action<T1>(EventDelegate<T1>) Declaration public static implicit operator Action<T1>(EventDelegate<T1> @delegate) Parameters Type Name Description EventDelegate<T1> delegate Returns Type Description System.Action<T><T1>"
  },
  "api/Ceres.Graph.Flow.EventDelegate-2.html": {
    "href": "api/Ceres.Graph.Flow.EventDelegate-2.html",
    "title": "Class EventDelegate<T1, T2> | Ceres Documentation",
    "keywords": "Class EventDelegate<T1, T2> Inheritance object EventDelegateBase EventDelegate<T1, T2> Inherited Members EventDelegateBase.InvokeInternal(UObject, EventBase) EventDelegateBase.GetEventName() EventDelegateBase.GetContextObject() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class EventDelegate<T1, T2> : EventDelegateBase Type Parameters Name Description T1 T2 Methods Invoke(UObject, T1, T2) Declaration public void Invoke(UObject contextObject, T1 input1, T2 input2) Parameters Type Name Description UObject contextObject T1 input1 T2 input2 Operators implicit operator Action<T1, T2>(EventDelegate<T1, T2>) Declaration public static implicit operator Action<T1, T2>(EventDelegate<T1, T2> @delegate) Parameters Type Name Description EventDelegate<T1, T2> delegate Returns Type Description System.Action<T1, T2><T1, T2>"
  },
  "api/Ceres.Graph.Flow.EventDelegate-3.html": {
    "href": "api/Ceres.Graph.Flow.EventDelegate-3.html",
    "title": "Class EventDelegate<T1, T2, T3> | Ceres Documentation",
    "keywords": "Class EventDelegate<T1, T2, T3> Inheritance object EventDelegateBase EventDelegate<T1, T2, T3> Inherited Members EventDelegateBase.InvokeInternal(UObject, EventBase) EventDelegateBase.GetEventName() EventDelegateBase.GetContextObject() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class EventDelegate<T1, T2, T3> : EventDelegateBase Type Parameters Name Description T1 T2 T3 Methods Invoke(UObject, T1, T2, T3) Declaration public void Invoke(UObject contextObject, T1 input1, T2 input2, T3 input3) Parameters Type Name Description UObject contextObject T1 input1 T2 input2 T3 input3 Operators implicit operator Action<T1, T2, T3>(EventDelegate<T1, T2, T3>) Declaration public static implicit operator Action<T1, T2, T3>(EventDelegate<T1, T2, T3> @delegate) Parameters Type Name Description EventDelegate<T1, T2, T3> delegate Returns Type Description System.Action<T1, T2, T3><T1, T2, T3>"
  },
  "api/Ceres.Graph.Flow.EventDelegate-4.html": {
    "href": "api/Ceres.Graph.Flow.EventDelegate-4.html",
    "title": "Class EventDelegate<T1, T2, T3, T4> | Ceres Documentation",
    "keywords": "Class EventDelegate<T1, T2, T3, T4> Inheritance object EventDelegateBase EventDelegate<T1, T2, T3, T4> Inherited Members EventDelegateBase.InvokeInternal(UObject, EventBase) EventDelegateBase.GetEventName() EventDelegateBase.GetContextObject() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class EventDelegate<T1, T2, T3, T4> : EventDelegateBase Type Parameters Name Description T1 T2 T3 T4 Methods Invoke(UObject, T1, T2, T3, T4) Declaration public void Invoke(UObject contextObject, T1 input1, T2 input2, T3 input3, T4 input4) Parameters Type Name Description UObject contextObject T1 input1 T2 input2 T3 input3 T4 input4 Operators implicit operator Action<T1, T2, T3, T4>(EventDelegate<T1, T2, T3, T4>) Declaration public static implicit operator Action<T1, T2, T3, T4>(EventDelegate<T1, T2, T3, T4> @delegate) Parameters Type Name Description EventDelegate<T1, T2, T3, T4> delegate Returns Type Description System.Action<T1, T2, T3, T4><T1, T2, T3, T4>"
  },
  "api/Ceres.Graph.Flow.EventDelegate-5.html": {
    "href": "api/Ceres.Graph.Flow.EventDelegate-5.html",
    "title": "Class EventDelegate<T1, T2, T3, T4, T5> | Ceres Documentation",
    "keywords": "Class EventDelegate<T1, T2, T3, T4, T5> Inheritance object EventDelegateBase EventDelegate<T1, T2, T3, T4, T5> Inherited Members EventDelegateBase.InvokeInternal(UObject, EventBase) EventDelegateBase.GetEventName() EventDelegateBase.GetContextObject() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class EventDelegate<T1, T2, T3, T4, T5> : EventDelegateBase Type Parameters Name Description T1 T2 T3 T4 T5 Methods Invoke(UObject, T1, T2, T3, T4, T5) Declaration public void Invoke(UObject contextObject, T1 input1, T2 input2, T3 input3, T4 input4, T5 input5) Parameters Type Name Description UObject contextObject T1 input1 T2 input2 T3 input3 T4 input4 T5 input5 Operators implicit operator Action<T1, T2, T3, T4, T5>(EventDelegate<T1, T2, T3, T4, T5>) Declaration public static implicit operator Action<T1, T2, T3, T4, T5>(EventDelegate<T1, T2, T3, T4, T5> @delegate) Parameters Type Name Description EventDelegate<T1, T2, T3, T4, T5> delegate Returns Type Description System.Action<T1, T2, T3, T4, T5><T1, T2, T3, T4, T5>"
  },
  "api/Ceres.Graph.Flow.EventDelegate-6.html": {
    "href": "api/Ceres.Graph.Flow.EventDelegate-6.html",
    "title": "Class EventDelegate<T1, T2, T3, T4, T5, T6> | Ceres Documentation",
    "keywords": "Class EventDelegate<T1, T2, T3, T4, T5, T6> Inheritance object EventDelegateBase EventDelegate<T1, T2, T3, T4, T5, T6> Inherited Members EventDelegateBase.InvokeInternal(UObject, EventBase) EventDelegateBase.GetEventName() EventDelegateBase.GetContextObject() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class EventDelegate<T1, T2, T3, T4, T5, T6> : EventDelegateBase Type Parameters Name Description T1 T2 T3 T4 T5 T6 Methods Invoke(UObject, T1, T2, T3, T4, T5, T6) Declaration public void Invoke(UObject contextObject, T1 input1, T2 input2, T3 input3, T4 input4, T5 input5, T6 input6) Parameters Type Name Description UObject contextObject T1 input1 T2 input2 T3 input3 T4 input4 T5 input5 T6 input6 Operators implicit operator Action<T1, T2, T3, T4, T5, T6>(EventDelegate<T1, T2, T3, T4, T5, T6>) Declaration public static implicit operator Action<T1, T2, T3, T4, T5, T6>(EventDelegate<T1, T2, T3, T4, T5, T6> @delegate) Parameters Type Name Description EventDelegate<T1, T2, T3, T4, T5, T6> delegate Returns Type Description System.Action<T1, T2, T3, T4, T5, T6><T1, T2, T3, T4, T5, T6>"
  },
  "api/Ceres.Graph.Flow.EventDelegate.html": {
    "href": "api/Ceres.Graph.Flow.EventDelegate.html",
    "title": "Class EventDelegate | Ceres Documentation",
    "keywords": "Class EventDelegate Inheritance object EventDelegateBase EventDelegate Inherited Members EventDelegateBase.InvokeInternal(UObject, EventBase) EventDelegateBase.GetEventName() EventDelegateBase.GetContextObject() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class EventDelegate : EventDelegateBase Methods Invoke(UObject) Declaration public void Invoke(UObject contextObject) Parameters Type Name Description UObject contextObject Operators implicit operator Action(EventDelegate) Declaration public static implicit operator Action(EventDelegate @delegate) Parameters Type Name Description EventDelegate delegate Returns Type Description System.Action"
  },
  "api/Ceres.Graph.Flow.EventDelegateBase.html": {
    "href": "api/Ceres.Graph.Flow.EventDelegateBase.html",
    "title": "Class EventDelegateBase | Ceres Documentation",
    "keywords": "Class EventDelegateBase Weak delegate structure for ExecutableEvent Inheritance object EventDelegateBase EventDelegate EventDelegate<T1> EventDelegate<T1, T2> EventDelegate<T1, T2, T3> EventDelegate<T1, T2, T3, T4> EventDelegate<T1, T2, T3, T4, T5> EventDelegate<T1, T2, T3, T4, T5, T6> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public abstract class EventDelegateBase Methods GetContextObject() Declaration protected UObject GetContextObject() Returns Type Description UObject GetEventName() Declaration protected string GetEventName() Returns Type Description string InvokeInternal(UObject, EventBase) Declaration protected void InvokeInternal(UObject contextObject, EventBase eventBase) Parameters Type Name Description UObject contextObject EventBase eventBase"
  },
  "api/Ceres.Graph.Flow.EventDelegateExtensions.html": {
    "href": "api/Ceres.Graph.Flow.EventDelegateExtensions.html",
    "title": "Class EventDelegateExtensions | Ceres Documentation",
    "keywords": "Class EventDelegateExtensions Inheritance object EventDelegateExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public static class EventDelegateExtensions Methods IsValid(EventDelegateBase) Declaration public static bool IsValid(this EventDelegateBase @delegate) Parameters Type Name Description EventDelegateBase delegate Returns Type Description bool"
  },
  "api/Ceres.Graph.Flow.ExecutableEvent.html": {
    "href": "api/Ceres.Graph.Flow.ExecutableEvent.html",
    "title": "Class ExecutableEvent | Ceres Documentation",
    "keywords": "Class ExecutableEvent Inheritance object CeresNode ExecutableNode ExecutableEvent CustomFunctionInput ExecutionEventBase Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutableNode.Graph ExecutableNode.Execute(ExecutionContext) ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class ExecutableEvent : ExecutableNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Methods GetEventName() Declaration public abstract string GetEventName() Returns Type Description string Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutableFunction.ExecutableAttribute.html": {
    "href": "api/Ceres.Graph.Flow.ExecutableFunction.ExecutableAttribute.html",
    "title": "Class ExecutableFunction.ExecutableAttribute | Ceres Documentation",
    "keywords": "Class ExecutableFunction.ExecutableAttribute Inheritance object ExecutableFunction.ExecutableAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecutableFunction.ExecutableAttribute Constructors ExecutableAttribute(MethodInfo) Declaration public ExecutableAttribute(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Properties DisplayTarget Declaration public bool DisplayTarget { get; } Property Value Type Description bool ExecuteInDependency Declaration public bool ExecuteInDependency { get; } Property Value Type Description bool IsNeedResolveReturnType Declaration public bool IsNeedResolveReturnType { get; } Property Value Type Description bool IsScriptMethod Declaration public bool IsScriptMethod { get; } Property Value Type Description bool IsSelfTarget Declaration public bool IsSelfTarget { get; } Property Value Type Description bool ResolveReturnTypeParameter Declaration public ParameterInfo ResolveReturnTypeParameter { get; } Property Value Type Description ParameterInfo ScriptTargetType Declaration public Type ScriptTargetType { get; } Property Value Type Description System.Type SearchName Declaration public string SearchName { get; } Property Value Type Description string"
  },
  "api/Ceres.Graph.Flow.ExecutableFunction.html": {
    "href": "api/Ceres.Graph.Flow.ExecutableFunction.html",
    "title": "Class ExecutableFunction | Ceres Documentation",
    "keywords": "Class ExecutableFunction Inheritance object ExecutableFunction ExecutableReflection<TTarget>.ExecutableFunction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public abstract class ExecutableFunction Constructors ExecutableFunction(MethodInfo) Declaration protected ExecutableFunction(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Fields MethodInfo Declaration public readonly MethodInfo MethodInfo Field Value Type Description MethodInfo Methods GetFunctionName(MethodInfo, bool) Declaration public static string GetFunctionName(MethodInfo methodInfo, bool richText = true) Parameters Type Name Description MethodInfo methodInfo bool richText Returns Type Description string"
  },
  "api/Ceres.Graph.Flow.ExecutableFunctionInfo.html": {
    "href": "api/Ceres.Graph.Flow.ExecutableFunctionInfo.html",
    "title": "Struct ExecutableFunctionInfo | Ceres Documentation",
    "keywords": "Struct ExecutableFunctionInfo Implements System.IEquatable<T><ExecutableFunctionInfo> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public readonly struct ExecutableFunctionInfo : IEquatable<ExecutableFunctionInfo> Constructors ExecutableFunctionInfo(ExecutableFunctionType, string, int) Declaration public ExecutableFunctionInfo(ExecutableFunctionType functionType, string functionName, int parameterCount = -1) Parameters Type Name Description ExecutableFunctionType functionType string functionName int parameterCount Fields FunctionName Declaration public readonly string FunctionName Field Value Type Description string FunctionType Declaration public readonly ExecutableFunctionType FunctionType Field Value Type Description ExecutableFunctionType ParameterCount Declaration public readonly int ParameterCount Field Value Type Description int Methods AmbiguousEquals(ExecutableFunctionInfo) Declaration public bool AmbiguousEquals(ExecutableFunctionInfo other) Parameters Type Name Description ExecutableFunctionInfo other Returns Type Description bool Equals(ExecutableFunctionInfo) Declaration public bool Equals(ExecutableFunctionInfo other) Parameters Type Name Description ExecutableFunctionInfo other Returns Type Description bool Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides System.ValueType.Equals(object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides System.ValueType.GetHashCode() ToString() Declaration public override string ToString() Returns Type Description string Overrides System.ValueType.ToString() Implements System.IEquatable<T>"
  },
  "api/Ceres.Graph.Flow.ExecutableFunctionType.html": {
    "href": "api/Ceres.Graph.Flow.ExecutableFunctionType.html",
    "title": "Enum ExecutableFunctionType | Ceres Documentation",
    "keywords": "Enum ExecutableFunctionType Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public enum ExecutableFunctionType Fields Name Description InstanceMethod Method from class instance PropertyGetter Get method from instance property PropertySetter Set method from instance property StaticMethod Method from static class"
  },
  "api/Ceres.Graph.Flow.ExecutableNode.html": {
    "href": "api/Ceres.Graph.Flow.ExecutableNode.html",
    "title": "Class ExecutableNode | Ceres Documentation",
    "keywords": "Class ExecutableNode Inheritance object CeresNode ExecutableNode ExecutableEvent ForwardNode PropertyNode FlowNode_GetArrayElementT<T> FlowNode_MakeArray Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class ExecutableNode : CeresNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Properties Graph Declaration protected CeresGraph Graph { get; } Property Value Type Description CeresGraph Methods Execute(ExecutionContext) Declaration protected abstract UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask ExecuteNode(ExecutionContext) Declaration public UniTask ExecuteNode(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutableNodeReflectionHelper.html": {
    "href": "api/Ceres.Graph.Flow.ExecutableNodeReflectionHelper.html",
    "title": "Class ExecutableNodeReflectionHelper | Ceres Documentation",
    "keywords": "Class ExecutableNodeReflectionHelper Inheritance object ExecutableNodeReflectionHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public static class ExecutableNodeReflectionHelper Methods PredictCustomFunctionNodeType(Type, Type[]) Declaration public static Type PredictCustomFunctionNodeType(Type returnType, Type[] inputTypes) Parameters Type Name Description System.Type returnType System.Type[] inputTypes Returns Type Description System.Type PredictEventNodeType(MethodInfo) Declaration public static Type PredictEventNodeType(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Returns Type Description System.Type PredictEventNodeType(int) Declaration public static Type PredictEventNodeType(int parametersLength) Parameters Type Name Description int parametersLength Returns Type Description System.Type PredictFunctionNodeType(MethodInfo) Declaration public static Type PredictFunctionNodeType(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Returns Type Description System.Type"
  },
  "api/Ceres.Graph.Flow.ExecutableReflection-1.ExecutableFunction.html": {
    "href": "api/Ceres.Graph.Flow.ExecutableReflection-1.ExecutableFunction.html",
    "title": "Class ExecutableReflection<TTarget>.ExecutableFunction | Ceres Documentation",
    "keywords": "Class ExecutableReflection<TTarget>.ExecutableFunction Inheritance object ExecutableFunction ExecutableReflection<TTarget>.ExecutableFunction Inherited Members ExecutableFunction.MethodInfo ExecutableFunction.GetFunctionName(MethodInfo, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecutableReflection<TTarget>.ExecutableFunction : ExecutableFunction Fields FunctionInfo Declaration public readonly ExecutableFunctionInfo FunctionInfo Field Value Type Description ExecutableFunctionInfo"
  },
  "api/Ceres.Graph.Flow.ExecutableReflection-1.html": {
    "href": "api/Ceres.Graph.Flow.ExecutableReflection-1.html",
    "title": "Class ExecutableReflection<TTarget> | Ceres Documentation",
    "keywords": "Class ExecutableReflection<TTarget> Inheritance object ExecutableReflection ExecutableReflection<TTarget> Inherited Members ExecutableReflection.GetFunction(MethodInfo) ExecutableReflection.RegisterReflection<T>(ExecutableReflection) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecutableReflection<TTarget> : ExecutableReflection Type Parameters Name Description TTarget Methods GetFunction_Imp(MethodInfo) Declaration protected override ExecutableFunction GetFunction_Imp(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Returns Type Description ExecutableFunction Overrides ExecutableReflection.GetFunction_Imp(MethodInfo) GetFunction(ExecutableFunctionType, string, int) Declaration public static ExecutableReflection<TTarget>.ExecutableFunction GetFunction(ExecutableFunctionType functionType, string functionName, int parameterCount = -1) Parameters Type Name Description ExecutableFunctionType functionType string functionName int parameterCount Returns Type Description ExecutableReflection<TTarget>.ExecutableFunction"
  },
  "api/Ceres.Graph.Flow.ExecutableReflection.html": {
    "href": "api/Ceres.Graph.Flow.ExecutableReflection.html",
    "title": "Class ExecutableReflection | Ceres Documentation",
    "keywords": "Class ExecutableReflection Runtime reflection helper for executable functions Inheritance object ExecutableReflection ExecutableReflection<TTarget> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public abstract class ExecutableReflection Methods GetFunction_Imp(MethodInfo) Declaration protected abstract ExecutableFunction GetFunction_Imp(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Returns Type Description ExecutableFunction GetFunction(MethodInfo) Get ExecutableFunction from Declaration public static ExecutableFunction GetFunction(MethodInfo methodInfo) Parameters Type Name Description MethodInfo methodInfo Returns Type Description ExecutableFunction RegisterReflection<T>(ExecutableReflection) Declaration protected static void RegisterReflection<T>(ExecutableReflection instance) Parameters Type Name Description ExecutableReflection instance Type Parameters Name Description T"
  },
  "api/Ceres.Graph.Flow.ExecuteFlowEvent-1.html": {
    "href": "api/Ceres.Graph.Flow.ExecuteFlowEvent-1.html",
    "title": "Class ExecuteFlowEvent<T1> | Ceres Documentation",
    "keywords": "Class ExecuteFlowEvent<T1> Event with one param for executing Flow Graph Inheritance object ExecuteFlowEventBase<ExecuteFlowEvent<T1>> ExecuteFlowEvent<T1> Implements IFlowEvent Inherited Members ExecuteFlowEventBase<ExecuteFlowEvent<T1>>.FunctionName Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class ExecuteFlowEvent<T1> : ExecuteFlowEventBase<ExecuteFlowEvent<T1>>, IFlowEvent Type Parameters Name Description T1 Properties Arg1 Declaration public T1 Arg1 { get; } Property Value Type Description T1 Methods Create(string, T1) Declaration public static ExecuteFlowEvent<T1> Create(string functionName, T1 arg1) Parameters Type Name Description string functionName T1 arg1 Returns Type Description ExecuteFlowEvent<T1> Implements IFlowEvent"
  },
  "api/Ceres.Graph.Flow.ExecuteFlowEvent-2.html": {
    "href": "api/Ceres.Graph.Flow.ExecuteFlowEvent-2.html",
    "title": "Class ExecuteFlowEvent<T1, T2> | Ceres Documentation",
    "keywords": "Class ExecuteFlowEvent<T1, T2> Event with two params for executing Flow Graph Inheritance object ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2>> ExecuteFlowEvent<T1, T2> Implements IFlowEvent Inherited Members ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2>>.FunctionName Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class ExecuteFlowEvent<T1, T2> : ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2>>, IFlowEvent Type Parameters Name Description T1 T2 Properties Arg1 Declaration public T1 Arg1 { get; } Property Value Type Description T1 Arg2 Declaration public T2 Arg2 { get; } Property Value Type Description T2 Methods Create(string, T1, T2) Declaration public static ExecuteFlowEvent<T1, T2> Create(string functionName, T1 arg1, T2 arg2) Parameters Type Name Description string functionName T1 arg1 T2 arg2 Returns Type Description ExecuteFlowEvent<T1, T2> Implements IFlowEvent"
  },
  "api/Ceres.Graph.Flow.ExecuteFlowEvent-3.html": {
    "href": "api/Ceres.Graph.Flow.ExecuteFlowEvent-3.html",
    "title": "Class ExecuteFlowEvent<T1, T2, T3> | Ceres Documentation",
    "keywords": "Class ExecuteFlowEvent<T1, T2, T3> Event with three params for executing Flow Graph Inheritance object ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3>> ExecuteFlowEvent<T1, T2, T3> Implements IFlowEvent Inherited Members ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3>>.FunctionName Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class ExecuteFlowEvent<T1, T2, T3> : ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3>>, IFlowEvent Type Parameters Name Description T1 T2 T3 Properties Arg1 Declaration public T1 Arg1 { get; } Property Value Type Description T1 Arg2 Declaration public T2 Arg2 { get; } Property Value Type Description T2 Arg3 Declaration public T3 Arg3 { get; } Property Value Type Description T3 Methods Create(string, T1, T2, T3) Declaration public static ExecuteFlowEvent<T1, T2, T3> Create(string functionName, T1 arg1, T2 arg2, T3 arg3) Parameters Type Name Description string functionName T1 arg1 T2 arg2 T3 arg3 Returns Type Description ExecuteFlowEvent<T1, T2, T3> Implements IFlowEvent"
  },
  "api/Ceres.Graph.Flow.ExecuteFlowEvent-4.html": {
    "href": "api/Ceres.Graph.Flow.ExecuteFlowEvent-4.html",
    "title": "Class ExecuteFlowEvent<T1, T2, T3, T4> | Ceres Documentation",
    "keywords": "Class ExecuteFlowEvent<T1, T2, T3, T4> Event with four params for executing Flow Graph Inheritance object ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3, T4>> ExecuteFlowEvent<T1, T2, T3, T4> Implements IFlowEvent Inherited Members ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3, T4>>.FunctionName Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class ExecuteFlowEvent<T1, T2, T3, T4> : ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3, T4>>, IFlowEvent Type Parameters Name Description T1 T2 T3 T4 Properties Arg1 Declaration public T1 Arg1 { get; } Property Value Type Description T1 Arg2 Declaration public T2 Arg2 { get; } Property Value Type Description T2 Arg3 Declaration public T3 Arg3 { get; } Property Value Type Description T3 Arg4 Declaration public T4 Arg4 { get; } Property Value Type Description T4 Methods Create(string, T1, T2, T3, T4) Declaration public static ExecuteFlowEvent<T1, T2, T3, T4> Create(string functionName, T1 arg1, T2 arg2, T3 arg3, T4 arg4) Parameters Type Name Description string functionName T1 arg1 T2 arg2 T3 arg3 T4 arg4 Returns Type Description ExecuteFlowEvent<T1, T2, T3, T4> Implements IFlowEvent"
  },
  "api/Ceres.Graph.Flow.ExecuteFlowEvent-5.html": {
    "href": "api/Ceres.Graph.Flow.ExecuteFlowEvent-5.html",
    "title": "Class ExecuteFlowEvent<T1, T2, T3, T4, T5> | Ceres Documentation",
    "keywords": "Class ExecuteFlowEvent<T1, T2, T3, T4, T5> Event with five params for executing Flow Graph Inheritance object ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3, T4, T5>> ExecuteFlowEvent<T1, T2, T3, T4, T5> Implements IFlowEvent Inherited Members ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3, T4, T5>>.FunctionName Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class ExecuteFlowEvent<T1, T2, T3, T4, T5> : ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3, T4, T5>>, IFlowEvent Type Parameters Name Description T1 T2 T3 T4 T5 Properties Arg1 Declaration public T1 Arg1 { get; } Property Value Type Description T1 Arg2 Declaration public T2 Arg2 { get; } Property Value Type Description T2 Arg3 Declaration public T3 Arg3 { get; } Property Value Type Description T3 Arg4 Declaration public T4 Arg4 { get; } Property Value Type Description T4 Arg5 Declaration public T5 Arg5 { get; } Property Value Type Description T5 Methods Create(string, T1, T2, T3, T4, T5) Declaration public static ExecuteFlowEvent<T1, T2, T3, T4, T5> Create(string functionName, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5) Parameters Type Name Description string functionName T1 arg1 T2 arg2 T3 arg3 T4 arg4 T5 arg5 Returns Type Description ExecuteFlowEvent<T1, T2, T3, T4, T5> Implements IFlowEvent"
  },
  "api/Ceres.Graph.Flow.ExecuteFlowEvent-6.html": {
    "href": "api/Ceres.Graph.Flow.ExecuteFlowEvent-6.html",
    "title": "Class ExecuteFlowEvent<T1, T2, T3, T4, T5, T6> | Ceres Documentation",
    "keywords": "Class ExecuteFlowEvent<T1, T2, T3, T4, T5, T6> Event with six params for executing Flow Graph Inheritance object ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3, T4, T5, T6>> ExecuteFlowEvent<T1, T2, T3, T4, T5, T6> Implements IFlowEvent Inherited Members ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3, T4, T5, T6>>.FunctionName Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class ExecuteFlowEvent<T1, T2, T3, T4, T5, T6> : ExecuteFlowEventBase<ExecuteFlowEvent<T1, T2, T3, T4, T5, T6>>, IFlowEvent Type Parameters Name Description T1 T2 T3 T4 T5 T6 Properties Arg1 Declaration public T1 Arg1 { get; } Property Value Type Description T1 Arg2 Declaration public T2 Arg2 { get; } Property Value Type Description T2 Arg3 Declaration public T3 Arg3 { get; } Property Value Type Description T3 Arg4 Declaration public T4 Arg4 { get; } Property Value Type Description T4 Arg5 Declaration public T5 Arg5 { get; } Property Value Type Description T5 Arg6 Declaration public T6 Arg6 { get; } Property Value Type Description T6 Methods Create(string, T1, T2, T3, T4, T5, T6) Declaration public static ExecuteFlowEvent<T1, T2, T3, T4, T5, T6> Create(string functionName, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6) Parameters Type Name Description string functionName T1 arg1 T2 arg2 T3 arg3 T4 arg4 T5 arg5 T6 arg6 Returns Type Description ExecuteFlowEvent<T1, T2, T3, T4, T5, T6> Implements IFlowEvent"
  },
  "api/Ceres.Graph.Flow.ExecuteFlowEvent.html": {
    "href": "api/Ceres.Graph.Flow.ExecuteFlowEvent.html",
    "title": "Class ExecuteFlowEvent | Ceres Documentation",
    "keywords": "Class ExecuteFlowEvent Event for executing Flow Graph Inheritance object ExecuteFlowEventBase<ExecuteFlowEvent> ExecuteFlowEvent Implements IFlowEvent Inherited Members ExecuteFlowEventBase<ExecuteFlowEvent>.FunctionName Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class ExecuteFlowEvent : ExecuteFlowEventBase<ExecuteFlowEvent>, IFlowEvent Fields DefaultArgs Declaration public static readonly object[] DefaultArgs Field Value Type Description object[] Properties Args Input args Declaration public object[] Args { get; } Property Value Type Description object[] Methods Create(string, params object[]) Declaration public static ExecuteFlowEvent Create(string functionName, params object[] arguments) Parameters Type Name Description string functionName object[] arguments Returns Type Description ExecuteFlowEvent Implements IFlowEvent"
  },
  "api/Ceres.Graph.Flow.ExecuteFlowEventBase-1.html": {
    "href": "api/Ceres.Graph.Flow.ExecuteFlowEventBase-1.html",
    "title": "Class ExecuteFlowEventBase<TEvent> | Ceres Documentation",
    "keywords": "Class ExecuteFlowEventBase<TEvent> Inheritance object ExecuteFlowEventBase<TEvent> ExecuteFlowEvent ExecuteFlowEvent<T1> ExecuteFlowEvent<T1, T2> ExecuteFlowEvent<T1, T2, T3> ExecuteFlowEvent<T1, T2, T3, T4> ExecuteFlowEvent<T1, T2, T3, T4, T5> ExecuteFlowEvent<T1, T2, T3, T4, T5, T6> Implements IFlowEvent Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public abstract class ExecuteFlowEventBase<TEvent> : EventBase<TEvent>, IFlowEvent where TEvent : ExecuteFlowEventBase<TEvent>, new() Type Parameters Name Description TEvent Properties FunctionName Declaration public string FunctionName { get; protected set; } Property Value Type Description string Implements IFlowEvent"
  },
  "api/Ceres.Graph.Flow.ExecutionContext.html": {
    "href": "api/Ceres.Graph.Flow.ExecutionContext.html",
    "title": "Class ExecutionContext | Ceres Documentation",
    "keywords": "Class ExecutionContext Flow graph execution context Inheritance object ExecutionContext Implements System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class ExecutionContext : IDisposable Constructors ExecutionContext() Declaration protected ExecutionContext() Properties Context Execution source context object Declaration public UObject Context { get; } Property Value Type Description UObject Graph Execution owner graph Declaration public FlowGraph Graph { get; } Property Value Type Description FlowGraph Methods Dispose() Declaration public void Dispose() Forward(ExecutableNode) Execute node in forward path Declaration public UniTask Forward(ExecutableNode node) Parameters Type Name Description ExecutableNode node Returns Type Description UniTask GetEvent() Get source this execution fired from Declaration public EventBase GetEvent() Returns Type Description EventBase GetEventT<T>() Get source this execution fired from with specific type check Declaration public T GetEventT<T>() where T : EventBase<T>, new() Returns Type Description T Type Parameters Name Description T GetPooled(UObject, FlowGraph, EventBase) Declaration public static ExecutionContext GetPooled(UObject context, FlowGraph graph, EventBase evt = null) Parameters Type Name Description UObject context FlowGraph graph EventBase evt Returns Type Description ExecutionContext SetNext(ExecutableNode) Set execution flow next node Declaration public void SetNext(ExecutableNode node) Parameters Type Name Description ExecutableNode node Implements System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutionEvent-1.html": {
    "href": "api/Ceres.Graph.Flow.ExecutionEvent-1.html",
    "title": "Class ExecutionEvent<T1> | Ceres Documentation",
    "keywords": "Class ExecutionEvent<T1> Event entry node to start an execution Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase ExecutionEventGeneric ExecutionEvent<T1> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutionEventGeneric.exec ExecutionEventBase.eventName ExecutionEventBase.isImplementable ExecutionEventBase.GetEventName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class ExecutionEvent<T1> : ExecutionEventGeneric, IEnumerable<CeresNode>, IEnumerable, IDisposable Type Parameters Name Description T1 Fields eventDelegate Declaration public DelegatePort<EventDelegate<T1>> eventDelegate Field Value Type Description DelegatePort<EventDelegate<T1>> output1 Declaration public CeresPort<T1> output1 Field Value Type Description CeresPort<T1> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutionEvent-2.html": {
    "href": "api/Ceres.Graph.Flow.ExecutionEvent-2.html",
    "title": "Class ExecutionEvent<T1, T2> | Ceres Documentation",
    "keywords": "Class ExecutionEvent<T1, T2> Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase ExecutionEventGeneric ExecutionEvent<T1, T2> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutionEventGeneric.exec ExecutionEventBase.eventName ExecutionEventBase.isImplementable ExecutionEventBase.GetEventName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class ExecutionEvent<T1, T2> : ExecutionEventGeneric, IEnumerable<CeresNode>, IEnumerable, IDisposable Type Parameters Name Description T1 T2 Fields eventDelegate Declaration public DelegatePort<EventDelegate<T1, T2>> eventDelegate Field Value Type Description DelegatePort<EventDelegate<T1, T2>> output1 Declaration public CeresPort<T1> output1 Field Value Type Description CeresPort<T1> output2 Declaration public CeresPort<T2> output2 Field Value Type Description CeresPort<T2> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutionEvent-3.html": {
    "href": "api/Ceres.Graph.Flow.ExecutionEvent-3.html",
    "title": "Class ExecutionEvent<T1, T2, T3> | Ceres Documentation",
    "keywords": "Class ExecutionEvent<T1, T2, T3> Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase ExecutionEventGeneric ExecutionEvent<T1, T2, T3> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutionEventGeneric.exec ExecutionEventBase.eventName ExecutionEventBase.isImplementable ExecutionEventBase.GetEventName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class ExecutionEvent<T1, T2, T3> : ExecutionEventGeneric, IEnumerable<CeresNode>, IEnumerable, IDisposable Type Parameters Name Description T1 T2 T3 Fields eventDelegate Declaration public DelegatePort<EventDelegate<T1, T2, T3>> eventDelegate Field Value Type Description DelegatePort<EventDelegate<T1, T2, T3>> output1 Declaration public CeresPort<T1> output1 Field Value Type Description CeresPort<T1> output2 Declaration public CeresPort<T2> output2 Field Value Type Description CeresPort<T2> output3 Declaration public CeresPort<T3> output3 Field Value Type Description CeresPort<T3> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutionEvent-4.html": {
    "href": "api/Ceres.Graph.Flow.ExecutionEvent-4.html",
    "title": "Class ExecutionEvent<T1, T2, T3, T4> | Ceres Documentation",
    "keywords": "Class ExecutionEvent<T1, T2, T3, T4> Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase ExecutionEventGeneric ExecutionEvent<T1, T2, T3, T4> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutionEventGeneric.exec ExecutionEventBase.eventName ExecutionEventBase.isImplementable ExecutionEventBase.GetEventName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class ExecutionEvent<T1, T2, T3, T4> : ExecutionEventGeneric, IEnumerable<CeresNode>, IEnumerable, IDisposable Type Parameters Name Description T1 T2 T3 T4 Fields eventDelegate Declaration public DelegatePort<EventDelegate<T1, T2, T3, T4>> eventDelegate Field Value Type Description DelegatePort<EventDelegate<T1, T2, T3, T4>> output1 Declaration public CeresPort<T1> output1 Field Value Type Description CeresPort<T1> output2 Declaration public CeresPort<T2> output2 Field Value Type Description CeresPort<T2> output3 Declaration public CeresPort<T3> output3 Field Value Type Description CeresPort<T3> output4 Declaration public CeresPort<T4> output4 Field Value Type Description CeresPort<T4> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutionEvent-5.html": {
    "href": "api/Ceres.Graph.Flow.ExecutionEvent-5.html",
    "title": "Class ExecutionEvent<T1, T2, T3, T4, T5> | Ceres Documentation",
    "keywords": "Class ExecutionEvent<T1, T2, T3, T4, T5> Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase ExecutionEventGeneric ExecutionEvent<T1, T2, T3, T4, T5> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutionEventGeneric.exec ExecutionEventBase.eventName ExecutionEventBase.isImplementable ExecutionEventBase.GetEventName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class ExecutionEvent<T1, T2, T3, T4, T5> : ExecutionEventGeneric, IEnumerable<CeresNode>, IEnumerable, IDisposable Type Parameters Name Description T1 T2 T3 T4 T5 Fields eventDelegate Declaration public DelegatePort<EventDelegate<T1, T2, T3, T4, T5>> eventDelegate Field Value Type Description DelegatePort<EventDelegate<T1, T2, T3, T4, T5>> output1 Declaration public CeresPort<T1> output1 Field Value Type Description CeresPort<T1> output2 Declaration public CeresPort<T2> output2 Field Value Type Description CeresPort<T2> output3 Declaration public CeresPort<T3> output3 Field Value Type Description CeresPort<T3> output4 Declaration public CeresPort<T4> output4 Field Value Type Description CeresPort<T4> output5 Declaration public CeresPort<T5> output5 Field Value Type Description CeresPort<T5> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutionEvent-6.html": {
    "href": "api/Ceres.Graph.Flow.ExecutionEvent-6.html",
    "title": "Class ExecutionEvent<T1, T2, T3, T4, T5, T6> | Ceres Documentation",
    "keywords": "Class ExecutionEvent<T1, T2, T3, T4, T5, T6> Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase ExecutionEventGeneric ExecutionEvent<T1, T2, T3, T4, T5, T6> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutionEventGeneric.exec ExecutionEventBase.eventName ExecutionEventBase.isImplementable ExecutionEventBase.GetEventName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class ExecutionEvent<T1, T2, T3, T4, T5, T6> : ExecutionEventGeneric, IEnumerable<CeresNode>, IEnumerable, IDisposable Type Parameters Name Description T1 T2 T3 T4 T5 T6 Fields eventDelegate Declaration public DelegatePort<EventDelegate<T1, T2, T3, T4, T5, T6>> eventDelegate Field Value Type Description DelegatePort<EventDelegate<T1, T2, T3, T4, T5, T6>> output1 Declaration public CeresPort<T1> output1 Field Value Type Description CeresPort<T1> output2 Declaration public CeresPort<T2> output2 Field Value Type Description CeresPort<T2> output3 Declaration public CeresPort<T3> output3 Field Value Type Description CeresPort<T3> output4 Declaration public CeresPort<T4> output4 Field Value Type Description CeresPort<T4> output5 Declaration public CeresPort<T5> output5 Field Value Type Description CeresPort<T5> output6 Declaration public CeresPort<T6> output6 Field Value Type Description CeresPort<T6> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutionEvent.html": {
    "href": "api/Ceres.Graph.Flow.ExecutionEvent.html",
    "title": "Class ExecutionEvent | Ceres Documentation",
    "keywords": "Class ExecutionEvent Event entry node to start an execution Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase ExecutionEvent Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutionEventBase.eventName ExecutionEventBase.isImplementable ExecutionEventBase.GetEventName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class ExecutionEvent : ExecutionEventBase, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields eventDelegate Declaration public DelegatePort<EventDelegate> eventDelegate Field Value Type Description DelegatePort<EventDelegate> exec Declaration public NodePort exec Field Value Type Description NodePort Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutionEventBase.html": {
    "href": "api/Ceres.Graph.Flow.ExecutionEventBase.html",
    "title": "Class ExecutionEventBase | Ceres Documentation",
    "keywords": "Class ExecutionEventBase Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase CustomExecutionEvent ExecutionEvent ExecutionEventGeneric ExecutionEventUber Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutableNode.Graph ExecutableNode.Execute(ExecutionContext) ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class ExecutionEventBase : ExecutableEvent, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields eventName Declaration public string eventName Field Value Type Description string isImplementable Declaration public bool isImplementable Field Value Type Description bool Methods GetEventName() Declaration public override sealed string GetEventName() Returns Type Description string Overrides ExecutableEvent.GetEventName() Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutionEventGeneric.html": {
    "href": "api/Ceres.Graph.Flow.ExecutionEventGeneric.html",
    "title": "Class ExecutionEventGeneric | Ceres Documentation",
    "keywords": "Class ExecutionEventGeneric Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase ExecutionEventGeneric ExecutionEvent<T1> ExecutionEvent<T1, T2> ExecutionEvent<T1, T2, T3> ExecutionEvent<T1, T2, T3, T4> ExecutionEvent<T1, T2, T3, T4, T5> ExecutionEvent<T1, T2, T3, T4, T5, T6> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutionEventBase.eventName ExecutionEventBase.isImplementable ExecutionEventBase.GetEventName() ExecutableNode.Graph ExecutableNode.Execute(ExecutionContext) ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class ExecutionEventGeneric : ExecutionEventBase, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields exec Declaration public NodePort exec Field Value Type Description NodePort Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.ExecutionEventUber.html": {
    "href": "api/Ceres.Graph.Flow.ExecutionEventUber.html",
    "title": "Class ExecutionEventUber | Ceres Documentation",
    "keywords": "Class ExecutionEventUber Inheritance object CeresNode ExecutableNode ExecutableEvent ExecutionEventBase ExecutionEventUber Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members ExecutionEventBase.eventName ExecutionEventBase.isImplementable ExecutionEventBase.GetEventName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class ExecutionEventUber : ExecutionEventBase, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Fields argumentCount Declaration public int argumentCount Field Value Type Description int exec Declaration public NodePort exec Field Value Type Description NodePort outputs Declaration public CeresPort<object>[] outputs Field Value Type Description CeresPort<object>[] Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.FlowGraph.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraph.html",
    "title": "Class FlowGraph | Ceres Documentation",
    "keywords": "Class FlowGraph Inheritance object CeresGraph FlowGraph FlowUberGraph Implements System.IDisposable IDisposableUnregister Inherited Members CeresGraph.BlackBoard CeresGraph.variables CeresGraph.nodes CeresGraph.nodeGroups CeresGraph.SubGraphSlots CeresGraph.SetCompilerTarget(CeresGraphCompiler) CeresGraph.InitVariables(CeresGraph) CeresGraph.InitPorts(CeresGraph) CeresGraph.CompileNodes(CeresGraphCompiler) CeresGraph.CollectDependencyPath(CeresGraph) CeresGraph.FindNode(string) CeresGraph.FindNode<TNode>(string) CeresGraph.GetFirstNodeOfType<TNode>() CeresGraph.SetDependencyPath(int[][]) CeresGraph.GetDependencyPaths() CeresGraph.GetNodeDependencyPath(string) CeresGraph.GetNodeDependencyPath(CeresNode) CeresGraph.IsUberGraph() CeresGraph.FindSubGraph<TGraph>(string) CeresGraph.AddSubGraphSlot<TGraph>(CeresSubGraphSlot) CeresGraph.TopologicalSort(CeresGraph, List<CeresNode>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowGraph : CeresGraph, IDisposable, IDisposableUnregister Constructors FlowGraph(FlowGraphSerializedData) Declaration public FlowGraph(FlowGraphSerializedData flowGraphData) Parameters Type Name Description FlowGraphSerializedData flowGraphData Properties Events All ExecutableEvent inside this graph Declaration public ExecutableEvent[] Events { get; } Property Value Type Description ExecutableEvent[] Methods Compile(CeresGraphCompiler) Compile graph just in time Declaration public override void Compile(CeresGraphCompiler compiler) Parameters Type Name Description CeresGraphCompiler compiler Runtime compiler Overrides CeresGraph.Compile(CeresGraphCompiler) Dispose() Declaration public override void Dispose() Overrides CeresGraph.Dispose() ExecuteEvent(UObject, string, EventBase) Execute graph event Declaration public void ExecuteEvent(UObject contextObject, string eventName, EventBase evtBase = null) Parameters Type Name Description UObject contextObject Graph execution context object string eventName The name of event to execute EventBase evtBase Source event GetExecutionContext() Get current execution context Declaration public ExecutionContext GetExecutionContext() Returns Type Description ExecutionContext LinkPort(CeresPort, CeresNode, CeresPortData) Declaration protected override void LinkPort(CeresPort port, CeresNode ownerNode, CeresPortData portData) Parameters Type Name Description CeresPort port CeresNode ownerNode CeresPortData portData Overrides CeresGraph.LinkPort(CeresPort, CeresNode, CeresPortData) TryExecuteEvent(UObject, string, EventBase) Try to execute graph event Declaration public bool TryExecuteEvent(UObject contextObject, string eventName, EventBase evtBase = null) Parameters Type Name Description UObject contextObject string eventName EventBase evtBase Returns Type Description bool Implements System.IDisposable IDisposableUnregister"
  },
  "api/Ceres.Graph.Flow.FlowGraphAsset.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphAsset.html",
    "title": "Class FlowGraphAsset | Ceres Documentation",
    "keywords": "Class FlowGraphAsset Asset contains FlowGraphData that can be shared between multi IFlowGraphRuntime instances. Inheritance object FlowGraphScriptableObjectBase FlowGraphAsset FlowGraphFunctionAsset Implements IRedirectFlowGraphRuntimeType Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphAsset : FlowGraphScriptableObjectBase, IRedirectFlowGraphRuntimeType Fields runtimeType Specific IFlowGraphRuntime type this asset act as at runtime Declaration public SerializedType<IFlowGraphRuntime> runtimeType Field Value Type Description SerializedType<><IFlowGraphRuntime> Methods GetRuntimeType() Declaration public Type GetRuntimeType() Returns Type Description System.Type Implements IRedirectFlowGraphRuntimeType"
  },
  "api/Ceres.Graph.Flow.FlowGraphCompilationContext.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphCompilationContext.html",
    "title": "Class FlowGraphCompilationContext | Ceres Documentation",
    "keywords": "Class FlowGraphCompilationContext Inheritance object FlowGraphCompilationContext Implements ICeresGraphCompilationContext System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public sealed class FlowGraphCompilationContext : ICeresGraphCompilationContext, IDisposable Methods AddOrCreateFunctionSubGraph(CeresGraphCompiler, FlowGraphFunctionAsset) Declaration public FlowGraph AddOrCreateFunctionSubGraph(CeresGraphCompiler compiler, FlowGraphFunctionAsset asset) Parameters Type Name Description CeresGraphCompiler compiler FlowGraphFunctionAsset asset Returns Type Description FlowGraph Dispose() Declaration public void Dispose() GetPooled() Declaration public static FlowGraphCompilationContext GetPooled() Returns Type Description FlowGraphCompilationContext PostCompileGraph(CeresGraph) Declaration public void PostCompileGraph(CeresGraph source) Parameters Type Name Description CeresGraph source PreCompileGraph(CeresGraph) Declaration public void PreCompileGraph(CeresGraph source) Parameters Type Name Description CeresGraph source Implements ICeresGraphCompilationContext System.IDisposable"
  },
  "api/Ceres.Graph.Flow.FlowGraphData.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphData.html",
    "title": "Class FlowGraphData | Ceres Documentation",
    "keywords": "Class FlowGraphData Metadata for FlowGraph Inheritance object CeresGraphData FlowGraphSerializedData FlowGraphData Inherited Members FlowGraphSerializedData.GetFallbackNode(CeresNodeData, int) CeresGraphData.variableData CeresGraphData.nodeData CeresGraphData.nodeGroups CeresGraphData.RestoreNode(int, CeresNode[]) CeresGraphData.RestoreVariable(int, SharedVariable[]) CeresGraphData.RedirectNodeType(ManagedReferenceType) CeresGraphData.RedirectVariableType(ManagedReferenceType) CeresGraphData.RedirectSerializedType(string) CeresGraphData.ResolveSerializedType(string) CeresGraphData.Clone() CeresGraphData.CloneT<T>() CeresGraphData.ToJson(bool) CeresGraphData.FromJson<T>(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowGraphData : FlowGraphSerializedData Fields subGraphData Declaration public FlowSubGraphData[] subGraphData Field Value Type Description FlowSubGraphData[] Methods BuildGraph(CeresGraph) Declaration public override void BuildGraph(CeresGraph graph) Parameters Type Name Description CeresGraph graph Overrides FlowGraphSerializedData.BuildGraph(CeresGraph) CreateFlowGraphInstance() Create a FlowUberGraph instance from this data Declaration public FlowUberGraph CreateFlowGraphInstance() Returns Type Description FlowUberGraph PreSerialization() Declaration public override void PreSerialization() Overrides FlowGraphSerializedData.PreSerialization() RemoveSubGraphData(string) Declaration public bool RemoveSubGraphData(string guid) Parameters Type Name Description string guid Returns Type Description bool RenameSubGraphData(string, string) Declaration public bool RenameSubGraphData(string guid, string newName) Parameters Type Name Description string guid string newName Returns Type Description bool SetSubGraphData(FlowSubGraphSlot, FlowGraphSerializedData) Declaration public void SetSubGraphData(FlowSubGraphSlot slot, FlowGraphSerializedData data) Parameters Type Name Description FlowSubGraphSlot slot FlowGraphSerializedData data"
  },
  "api/Ceres.Graph.Flow.FlowGraphDependencyTracker.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphDependencyTracker.html",
    "title": "Class FlowGraphDependencyTracker | Ceres Documentation",
    "keywords": "Class FlowGraphDependencyTracker A helper tracker to dump nodes dependencies Inheritance object FlowGraphTracker FlowGraphDependencyTracker Implements System.IDisposable Inherited Members FlowGraphTracker.Auto() FlowGraphTracker.GetActiveTracker() FlowGraphTracker.SetActiveTracker(FlowGraphTracker) FlowGraphTracker.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphDependencyTracker : FlowGraphTracker, IDisposable Constructors FlowGraphDependencyTracker(FlowGraph) Declaration public FlowGraphDependencyTracker(FlowGraph flowGraph) Parameters Type Name Description FlowGraph flowGraph Methods EnterNode(ExecutableNode) Declaration public override UniTask EnterNode(ExecutableNode node) Parameters Type Name Description ExecutableNode node Returns Type Description UniTask Overrides FlowGraphTracker.EnterNode(ExecutableNode) ExitNode(ExecutableNode) Declaration public override UniTask ExitNode(ExecutableNode node) Parameters Type Name Description ExecutableNode node Returns Type Description UniTask Overrides FlowGraphTracker.ExitNode(ExecutableNode) Implements System.IDisposable"
  },
  "api/Ceres.Graph.Flow.FlowGraphFunctionAsset.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphFunctionAsset.html",
    "title": "Class FlowGraphFunctionAsset | Ceres Documentation",
    "keywords": "Class FlowGraphFunctionAsset Asset contains custom function that can be shared between multi IFlowGraphRuntime instances. Inheritance object FlowGraphScriptableObjectBase FlowGraphAsset FlowGraphFunctionAsset Implements IRedirectFlowGraphRuntimeType Inherited Members FlowGraphAsset.runtimeType FlowGraphAsset.GetRuntimeType() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphFunctionAsset : FlowGraphAsset, IRedirectFlowGraphRuntimeType Fields serializedInfo Declaration public FlowGraphFunctionSerializedInfo serializedInfo Field Value Type Description FlowGraphFunctionSerializedInfo Methods GetFlowGraph() Declaration public override FlowGraph GetFlowGraph() Returns Type Description FlowGraph SetGraphData(CeresGraphData) Declaration public override void SetGraphData(CeresGraphData graphData) Parameters Type Name Description CeresGraphData graphData Implements IRedirectFlowGraphRuntimeType"
  },
  "api/Ceres.Graph.Flow.FlowGraphFunctionSerializedInfo.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphFunctionSerializedInfo.html",
    "title": "Class FlowGraphFunctionSerializedInfo | Ceres Documentation",
    "keywords": "Class FlowGraphFunctionSerializedInfo Inheritance object FlowGraphFunctionSerializedInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowGraphFunctionSerializedInfo Fields inputParameters Declaration public CustomFunctionInputParameter[] inputParameters Field Value Type Description CustomFunctionInputParameter[] returnParameter Declaration public CustomFunctionOutputParameter returnParameter Field Value Type Description CustomFunctionOutputParameter"
  },
  "api/Ceres.Graph.Flow.FlowGraphInstanceObject.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphInstanceObject.html",
    "title": "Class FlowGraphInstanceObject | Ceres Documentation",
    "keywords": "Class FlowGraphInstanceObject only contains runtime Flow Graph instance Inheritance object FlowGraphObjectBase FlowGraphInstanceObject Implements IFlowGraphRuntime Inherited Members FlowGraphObjectBase.IFlowGraphRuntime.Object FlowGraphObjectBase.IFlowGraphRuntime.Graph FlowGraphObjectBase.ReleaseGraph() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphInstanceObject : FlowGraphObjectBase, IFlowGraphRuntime Methods CreateRuntimeFlowGraphInstance() Declaration protected override sealed FlowGraph CreateRuntimeFlowGraphInstance() Returns Type Description FlowGraph Overrides FlowGraphObjectBase.CreateRuntimeFlowGraphInstance() Implements IFlowGraphRuntime"
  },
  "api/Ceres.Graph.Flow.FlowGraphObject.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphObject.html",
    "title": "Class FlowGraphObject | Ceres Documentation",
    "keywords": "Class FlowGraphObject contains persistent FlowGraphData and runtime instance. Inheritance object FlowGraphObjectBase FlowGraphObject Implements IFlowGraphRuntime Inherited Members FlowGraphObjectBase.IFlowGraphRuntime.Object FlowGraphObjectBase.IFlowGraphRuntime.Graph FlowGraphObjectBase.ReleaseGraph() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphObject : FlowGraphObjectBase, IFlowGraphRuntime Methods CreateRuntimeFlowGraphInstance() Declaration protected override sealed FlowGraph CreateRuntimeFlowGraphInstance() Returns Type Description FlowGraph Overrides FlowGraphObjectBase.CreateRuntimeFlowGraphInstance() Implements IFlowGraphRuntime"
  },
  "api/Ceres.Graph.Flow.FlowGraphObjectBase.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphObjectBase.html",
    "title": "Class FlowGraphObjectBase | Ceres Documentation",
    "keywords": "Class FlowGraphObjectBase Base class for contains Flow Graph. Inheritance object FlowGraphObjectBase FlowGraphInstanceObject FlowGraphObject Implements IFlowGraphRuntime Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public abstract class FlowGraphObjectBase : MonoBehaviour, IFlowGraphRuntime Methods CreateRuntimeFlowGraphInstance() Declaration protected abstract FlowGraph CreateRuntimeFlowGraphInstance() Returns Type Description FlowGraph ReleaseGraph() Release graph instance safely Declaration protected void ReleaseGraph() Explicit Interface Implementations IFlowGraphRuntime.Graph Declaration FlowGraph IFlowGraphRuntime.Graph { get; } Returns Type Description FlowGraph IFlowGraphRuntime.Object Declaration UObject IFlowGraphRuntime.Object { get; } Returns Type Description UObject Implements IFlowGraphRuntime"
  },
  "api/Ceres.Graph.Flow.FlowGraphRuntimeExtensions.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphRuntimeExtensions.html",
    "title": "Class FlowGraphRuntimeExtensions | Ceres Documentation",
    "keywords": "Class FlowGraphRuntimeExtensions Inheritance object FlowGraphRuntimeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public static class FlowGraphRuntimeExtensions Methods GetEventHandler(IFlowGraphRuntime) Get the bound to runtime FlowGraph instance Declaration public static CallbackEventHandler GetEventHandler(this IFlowGraphRuntime runtime) Parameters Type Name Description IFlowGraphRuntime runtime Returns Type Description CallbackEventHandler GetRuntimeFlowGraph(IFlowGraphRuntime) Get runtime FlowGraph instance Declaration public static FlowGraph GetRuntimeFlowGraph(this IFlowGraphRuntime runtime) Parameters Type Name Description IFlowGraphRuntime runtime Returns Type Description FlowGraph Remarks Convenient for inheritors to implicitly obtain the runtime graph instance when Graph is explicitly implemented. OverrideEventImplementation<TEventType>(IFlowGraphRuntime, EventCallback<TEventType>) Override graph implementation of > Declaration public static IDisposable OverrideEventImplementation<TEventType>(this IFlowGraphRuntime runtime, EventCallback<TEventType> implementation) where TEventType : EventBase<TEventType>, new() Parameters Type Name Description IFlowGraphRuntime runtime EventCallback<><TEventType> implementation Returns Type Description System.IDisposable Type Parameters Name Description TEventType ProcessEvent(IFlowGraphRuntime, string) Invoke flow graph event Declaration public static void ProcessEvent(this IFlowGraphRuntime runtime, string eventName = \"\") Parameters Type Name Description IFlowGraphRuntime runtime string eventName ProcessEvent<T1>(IFlowGraphRuntime, T1, string) Invoke flow graph event with parameters Declaration public static void ProcessEvent<T1>(this IFlowGraphRuntime runtime, T1 arg1, string eventName = \"\") Parameters Type Name Description IFlowGraphRuntime runtime T1 arg1 string eventName Type Parameters Name Description T1 ProcessEvent<T1, T2>(IFlowGraphRuntime, T1, T2, string) Invoke flow graph event with parameters Declaration public static void ProcessEvent<T1, T2>(this IFlowGraphRuntime runtime, T1 arg1, T2 arg2, string eventName = \"\") Parameters Type Name Description IFlowGraphRuntime runtime T1 arg1 T2 arg2 string eventName Type Parameters Name Description T1 T2 ProcessEvent<T1, T2, T3>(IFlowGraphRuntime, T1, T2, T3, string) Invoke flow graph event with parameters Declaration public static void ProcessEvent<T1, T2, T3>(this IFlowGraphRuntime runtime, T1 arg1, T2 arg2, T3 arg3, string eventName = \"\") Parameters Type Name Description IFlowGraphRuntime runtime T1 arg1 T2 arg2 T3 arg3 string eventName Type Parameters Name Description T1 T2 T3 ProcessEvent<T1, T2, T3, T4>(IFlowGraphRuntime, T1, T2, T3, T4, string) Invoke flow graph event with parameters Declaration public static void ProcessEvent<T1, T2, T3, T4>(this IFlowGraphRuntime runtime, T1 arg1, T2 arg2, T3 arg3, T4 arg4, string eventName = \"\") Parameters Type Name Description IFlowGraphRuntime runtime T1 arg1 T2 arg2 T3 arg3 T4 arg4 string eventName Type Parameters Name Description T1 T2 T3 T4 ProcessEvent<T1, T2, T3, T4, T5>(IFlowGraphRuntime, T1, T2, T3, T4, T5, string) Invoke flow graph event with parameters Declaration public static void ProcessEvent<T1, T2, T3, T4, T5>(this IFlowGraphRuntime runtime, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, string eventName = \"\") Parameters Type Name Description IFlowGraphRuntime runtime T1 arg1 T2 arg2 T3 arg3 T4 arg4 T5 arg5 string eventName Type Parameters Name Description T1 T2 T3 T4 T5 ProcessEvent<T1, T2, T3, T4, T5, T6>(IFlowGraphRuntime, T1, T2, T3, T4, T5, T6, string) Invoke flow graph event with parameters Declaration public static void ProcessEvent<T1, T2, T3, T4, T5, T6>(this IFlowGraphRuntime runtime, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, string eventName = \"\") Parameters Type Name Description IFlowGraphRuntime runtime T1 arg1 T2 arg2 T3 arg3 T4 arg4 T5 arg5 T6 arg6 string eventName Type Parameters Name Description T1 T2 T3 T4 T5 T6 ProcessEventUber(IFlowGraphRuntime, object[], string) Invoke flow graph event with any parameters Declaration public static void ProcessEventUber(this IFlowGraphRuntime runtime, object[] parameters, string eventName = \"\") Parameters Type Name Description IFlowGraphRuntime runtime object[] parameters string eventName Remarks Note that this method causes boxing and unboxing, which results in allocation. Consider using an overload method with fewer parameters. SendEvent(IFlowGraphRuntime, EventBase) Send event to runtime FlowGraph instance Declaration public static void SendEvent(this IFlowGraphRuntime runtime, EventBase @event) Parameters Type Name Description IFlowGraphRuntime runtime EventBase event SubscribeExecution<TEventType>(CallbackEventHandler, IFlowGraphRuntime) Subscribe an execution of > as callback Declaration public static IDisposable SubscribeExecution<TEventType>(this CallbackEventHandler eventHandler, IFlowGraphRuntime runtime) where TEventType : EventBase<TEventType>, new() Parameters Type Name Description CallbackEventHandler eventHandler IFlowGraphRuntime runtime Returns Type Description System.IDisposable Type Parameters Name Description TEventType"
  },
  "api/Ceres.Graph.Flow.FlowGraphScriptableObject.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphScriptableObject.html",
    "title": "Class FlowGraphScriptableObject | Ceres Documentation",
    "keywords": "Class FlowGraphScriptableObject ScriptableObject contains Flow Graph that can be executed alone. Inheritance object FlowGraphScriptableObjectBase FlowGraphScriptableObject Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphScriptableObject : FlowGraphScriptableObjectBase"
  },
  "api/Ceres.Graph.Flow.FlowGraphScriptableObjectBase.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphScriptableObjectBase.html",
    "title": "Class FlowGraphScriptableObjectBase | Ceres Documentation",
    "keywords": "Class FlowGraphScriptableObjectBase Base class for contains Flow Graph. Inheritance object FlowGraphScriptableObjectBase FlowGraphAsset FlowGraphScriptableObject Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public abstract class FlowGraphScriptableObjectBase : ScriptableObject"
  },
  "api/Ceres.Graph.Flow.FlowGraphSerializedData.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphSerializedData.html",
    "title": "Class FlowGraphSerializedData | Ceres Documentation",
    "keywords": "Class FlowGraphSerializedData Serialized data for FlowGraph Inheritance object CeresGraphData FlowGraphSerializedData FlowGraphData Inherited Members CeresGraphData.variableData CeresGraphData.nodeData CeresGraphData.nodeGroups CeresGraphData.RestoreNode(int, CeresNode[]) CeresGraphData.RestoreVariable(int, SharedVariable[]) CeresGraphData.RedirectNodeType(ManagedReferenceType) CeresGraphData.RedirectVariableType(ManagedReferenceType) CeresGraphData.RedirectSerializedType(string) CeresGraphData.ResolveSerializedType(string) CeresGraphData.Clone() CeresGraphData.CloneT<T>() CeresGraphData.ToJson(bool) CeresGraphData.FromJson<T>(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowGraphSerializedData : CeresGraphData Methods BuildGraph(CeresGraph) Declaration public override void BuildGraph(CeresGraph graph) Parameters Type Name Description CeresGraph graph Overrides CeresGraphData.BuildGraph(CeresGraph) GetFallbackNode(CeresNodeData, int) Declaration protected override CeresNode GetFallbackNode(CeresNodeData fallbackNodeData, int index) Parameters Type Name Description CeresNodeData fallbackNodeData int index Returns Type Description CeresNode Overrides CeresGraphData.GetFallbackNode(CeresNodeData, int) PreSerialization() Declaration public override void PreSerialization() Overrides CeresGraphData.PreSerialization()"
  },
  "api/Ceres.Graph.Flow.FlowGraphTracker.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphTracker.html",
    "title": "Class FlowGraphTracker | Ceres Documentation",
    "keywords": "Class FlowGraphTracker Inheritance object FlowGraphTracker FlowGraphDependencyTracker Implements System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowGraphTracker : IDisposable Constructors FlowGraphTracker() Declaration protected FlowGraphTracker() Methods Auto() Creates a helper struct for the scoped using blocks. Declaration public FlowGraphTracker.TrackerAutoScope Auto() Returns Type Description FlowGraphTracker.TrackerAutoScope IDisposable struct which calls Begin and End automatically. Dispose() Declaration public virtual void Dispose() EnterNode(ExecutableNode) Declaration public virtual UniTask EnterNode(ExecutableNode node) Parameters Type Name Description ExecutableNode node Returns Type Description UniTask ExitNode(ExecutableNode) Declaration public virtual UniTask ExitNode(ExecutableNode node) Parameters Type Name Description ExecutableNode node Returns Type Description UniTask GetActiveTracker() Declaration public static FlowGraphTracker GetActiveTracker() Returns Type Description FlowGraphTracker SetActiveTracker(FlowGraphTracker) Set current active FlowGraphTracker Declaration public static void SetActiveTracker(FlowGraphTracker tracker) Parameters Type Name Description FlowGraphTracker tracker Implements System.IDisposable"
  },
  "api/Ceres.Graph.Flow.FlowGraphTracker.TrackerAutoScope.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphTracker.TrackerAutoScope.html",
    "title": "Struct FlowGraphTracker.TrackerAutoScope | Ceres Documentation",
    "keywords": "Struct FlowGraphTracker.TrackerAutoScope Implements System.IDisposable Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public readonly struct FlowGraphTracker.TrackerAutoScope : IDisposable Methods Dispose() Declaration public void Dispose() Implements System.IDisposable"
  },
  "api/Ceres.Graph.Flow.FlowGraphUsage.html": {
    "href": "api/Ceres.Graph.Flow.FlowGraphUsage.html",
    "title": "Enum FlowGraphUsage | Ceres Documentation",
    "keywords": "Enum FlowGraphUsage Flow graph usage type Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public enum FlowGraphUsage Fields Name Description Event Event graph Function Function graph, should always be subGraph"
  },
  "api/Ceres.Graph.Flow.FlowNode.html": {
    "href": "api/Ceres.Graph.Flow.FlowNode.html",
    "title": "Class FlowNode | Ceres Documentation",
    "keywords": "Class FlowNode Base class for nodes in an execution flow Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteCustomFunction IllegalExecutableNode InvalidExecutableNode FlowNode_DebugLog FlowNode_DebugLogString FlowNode_EqualsT<T> FlowNode_ExecuteEvent FlowNode_ExecuteFunction FlowNode_InstantiateT<TObject> FlowNode_ObservableSubscribeT<T> FlowNode_SoftAssetReferenceLoadAssetAsync FlowNode_SoftAssetReferenceTLoadAssetAsync<TObject> FlowNode_SubscribeEventExecutionT<TEventType> FlowNode_SubscribeGlobalEventExecutionT<TEventType> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class FlowNode : ForwardNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields exec Declaration public NodePort exec Field Value Type Description NodePort Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) LocalExecute(ExecutionContext) Do node local execution, sync only Declaration protected virtual void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.FlowSubGraphData.html": {
    "href": "api/Ceres.Graph.Flow.FlowSubGraphData.html",
    "title": "Class FlowSubGraphData | Ceres Documentation",
    "keywords": "Class FlowSubGraphData SubGraph slot for FlowGraphData Inheritance object CeresSubGraphData CeresSubGraphData<FlowGraphSerializedData> FlowSubGraphData Inherited Members CeresSubGraphData<FlowGraphSerializedData>.graphData CeresSubGraphData<FlowGraphSerializedData>.GetSubGraphData() CeresSubGraphData.name CeresSubGraphData.guid object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowSubGraphData : CeresSubGraphData<FlowGraphSerializedData> Fields usage Declaration public FlowGraphUsage usage Field Value Type Description FlowGraphUsage"
  },
  "api/Ceres.Graph.Flow.FlowSubGraphSlot.html": {
    "href": "api/Ceres.Graph.Flow.FlowSubGraphSlot.html",
    "title": "Class FlowSubGraphSlot | Ceres Documentation",
    "keywords": "Class FlowSubGraphSlot Inheritance object CeresSubGraphSlot FlowSubGraphSlot Inherited Members CeresSubGraphSlot.Name CeresSubGraphSlot.Guid CeresSubGraphSlot.Graph object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class FlowSubGraphSlot : CeresSubGraphSlot Fields Usage Declaration public FlowGraphUsage Usage Field Value Type Description FlowGraphUsage"
  },
  "api/Ceres.Graph.Flow.FlowUberGraph.html": {
    "href": "api/Ceres.Graph.Flow.FlowUberGraph.html",
    "title": "Class FlowUberGraph | Ceres Documentation",
    "keywords": "Class FlowUberGraph Top level graph type of FlowGraph, contains all sub-graphs. Inheritance object CeresGraph FlowGraph FlowUberGraph Implements System.IDisposable IDisposableUnregister Inherited Members FlowGraph.Events FlowGraph.Dispose() FlowGraph.ExecuteEvent(UObject, string, EventBase) FlowGraph.TryExecuteEvent(UObject, string, EventBase) FlowGraph.LinkPort(CeresPort, CeresNode, CeresPortData) FlowGraph.GetExecutionContext() CeresGraph.BlackBoard CeresGraph.variables CeresGraph.nodes CeresGraph.nodeGroups CeresGraph.SubGraphSlots CeresGraph.SetCompilerTarget(CeresGraphCompiler) CeresGraph.InitVariables(CeresGraph) CeresGraph.InitPorts(CeresGraph) CeresGraph.CompileNodes(CeresGraphCompiler) CeresGraph.CollectDependencyPath(CeresGraph) CeresGraph.FindNode(string) CeresGraph.FindNode<TNode>(string) CeresGraph.GetFirstNodeOfType<TNode>() CeresGraph.SetDependencyPath(int[][]) CeresGraph.GetDependencyPaths() CeresGraph.GetNodeDependencyPath(string) CeresGraph.GetNodeDependencyPath(CeresNode) CeresGraph.FindSubGraph<TGraph>(string) CeresGraph.AddSubGraphSlot<TGraph>(CeresSubGraphSlot) CeresGraph.TopologicalSort(CeresGraph, List<CeresNode>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowUberGraph : FlowGraph, IDisposable, IDisposableUnregister Constructors FlowUberGraph(FlowGraphData) Declaration public FlowUberGraph(FlowGraphData flowGraphData) Parameters Type Name Description FlowGraphData flowGraphData Methods Compile(CeresGraphCompiler) Compile graph just in time Declaration public override void Compile(CeresGraphCompiler compiler) Parameters Type Name Description CeresGraphCompiler compiler Runtime compiler Overrides FlowGraph.Compile(CeresGraphCompiler) IsUberGraph() Is graph on top level which means it can have subGraphs Declaration public override bool IsUberGraph() Returns Type Description bool Overrides CeresGraph.IsUberGraph() Implements System.IDisposable IDisposableUnregister"
  },
  "api/Ceres.Graph.Flow.ForwardNode.html": {
    "href": "api/Ceres.Graph.Flow.ForwardNode.html",
    "title": "Class ForwardNode | Ceres Documentation",
    "keywords": "Class ForwardNode Base class for executable nodes with parent node input, used in forward execution path Inheritance object CeresNode ExecutableNode ForwardNode CustomFunctionOutput FlowNode FlowNode_Branch FlowNode_CastT<TFrom, TTo> FlowNode_ForEachLoop FlowNode_Sequence FlowNode_SwitchEnum FlowNode_SwitchString Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutableNode.Graph ExecutableNode.Execute(ExecutionContext) ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class ForwardNode : ExecutableNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields input Dependency node port Declaration public NodePort input Field Value Type Description NodePort Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.html": {
    "href": "api/Ceres.Graph.Flow.html",
    "title": "Namespace Ceres.Graph.Flow | Ceres Documentation",
    "keywords": "Namespace Ceres.Graph.Flow Classes CustomExecutionEvent Base class for ExecutionEventBase generated from by Ceres.SourceGenerator CustomExecutionEvent<TEventBase> DelegatePort<TDelegate> EventDelegate EventDelegate<T1> EventDelegate<T1, T2> EventDelegate<T1, T2, T3> EventDelegate<T1, T2, T3, T4> EventDelegate<T1, T2, T3, T4, T5> EventDelegate<T1, T2, T3, T4, T5, T6> EventDelegateBase Weak delegate structure for ExecutableEvent EventDelegateExtensions ExecutableEvent ExecutableFunction ExecutableFunction.ExecutableAttribute ExecutableNode ExecutableNodeReflectionHelper ExecutableReflection Runtime reflection helper for executable functions ExecutableReflection<TTarget> ExecutableReflection<TTarget>.ExecutableFunction ExecuteFlowEvent Event for executing Flow Graph ExecuteFlowEvent<T1> Event with one param for executing Flow Graph ExecuteFlowEvent<T1, T2> Event with two params for executing Flow Graph ExecuteFlowEvent<T1, T2, T3> Event with three params for executing Flow Graph ExecuteFlowEvent<T1, T2, T3, T4> Event with four params for executing Flow Graph ExecuteFlowEvent<T1, T2, T3, T4, T5> Event with five params for executing Flow Graph ExecuteFlowEvent<T1, T2, T3, T4, T5, T6> Event with six params for executing Flow Graph ExecuteFlowEventBase<TEvent> ExecutionContext Flow graph execution context ExecutionEvent Event entry node to start an execution ExecutionEvent<T1> Event entry node to start an execution ExecutionEvent<T1, T2> ExecutionEvent<T1, T2, T3> ExecutionEvent<T1, T2, T3, T4> ExecutionEvent<T1, T2, T3, T4, T5> ExecutionEvent<T1, T2, T3, T4, T5, T6> ExecutionEventBase ExecutionEventGeneric ExecutionEventUber FlowGraph FlowGraphAsset Asset contains FlowGraphData that can be shared between multi IFlowGraphRuntime instances. FlowGraphCompilationContext FlowGraphData Metadata for FlowGraph FlowGraphDependencyTracker A helper tracker to dump nodes dependencies FlowGraphFunctionAsset Asset contains custom function that can be shared between multi IFlowGraphRuntime instances. FlowGraphFunctionSerializedInfo FlowGraphInstanceObject only contains runtime Flow Graph instance FlowGraphObject contains persistent FlowGraphData and runtime instance. FlowGraphObjectBase Base class for contains Flow Graph. FlowGraphRuntimeExtensions FlowGraphScriptableObject ScriptableObject contains Flow Graph that can be executed alone. FlowGraphScriptableObjectBase Base class for contains Flow Graph. FlowGraphSerializedData Serialized data for FlowGraph FlowGraphTracker FlowNode Base class for nodes in an execution flow FlowSubGraphData SubGraph slot for FlowGraphData FlowSubGraphSlot FlowUberGraph Top level graph type of FlowGraph, contains all sub-graphs. ForwardNode Base class for executable nodes with parent node input, used in forward execution path IllegalExecutableNode InvalidExecutableFunctionException InvalidExecutableNode PropertyNode Base class for executable nodes that contained graph property without execution Structs ExecutableFunctionInfo FlowGraphTracker.TrackerAutoScope Interfaces IDelegatePort IFlowEvent IFlowGraphContainer Interface for contains FlowGraph data IFlowGraphRuntime Interface for contains FlowGraph runtime instance IPropertyNode Interface for node contains named property IRedirectFlowGraphRuntimeType Interface for IFlowGraphContainer that use specific IFlowGraphRuntime type instance Enums ExecutableFunctionType FlowGraphUsage Flow graph usage type"
  },
  "api/Ceres.Graph.Flow.IDelegatePort.html": {
    "href": "api/Ceres.Graph.Flow.IDelegatePort.html",
    "title": "Interface IDelegatePort | Ceres Documentation",
    "keywords": "Interface IDelegatePort Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public interface IDelegatePort Methods CreateDelegate(FlowGraph, string) Declaration void CreateDelegate(FlowGraph flowGraph, string eventNodeEventName) Parameters Type Name Description FlowGraph flowGraph string eventNodeEventName"
  },
  "api/Ceres.Graph.Flow.IFlowEvent.html": {
    "href": "api/Ceres.Graph.Flow.IFlowEvent.html",
    "title": "Interface IFlowEvent | Ceres Documentation",
    "keywords": "Interface IFlowEvent Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public interface IFlowEvent"
  },
  "api/Ceres.Graph.Flow.IFlowGraphContainer.html": {
    "href": "api/Ceres.Graph.Flow.IFlowGraphContainer.html",
    "title": "Interface IFlowGraphContainer | Ceres Documentation",
    "keywords": "Interface IFlowGraphContainer Interface for contains FlowGraph data Inherited Members ICeresGraphContainer.Object ICeresGraphContainer.SetGraphData(CeresGraphData) Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public interface IFlowGraphContainer : ICeresGraphContainer Methods GetFlowGraph() Get a FlowGraph instance from this container Declaration FlowGraph GetFlowGraph() Returns Type Description FlowGraph Remarks Instance is isolated from persistent data GetFlowGraphData() Get persistent FlowGraphData from this container Declaration FlowGraphData GetFlowGraphData() Returns Type Description FlowGraphData"
  },
  "api/Ceres.Graph.Flow.IFlowGraphRuntime.html": {
    "href": "api/Ceres.Graph.Flow.IFlowGraphRuntime.html",
    "title": "Interface IFlowGraphRuntime | Ceres Documentation",
    "keywords": "Interface IFlowGraphRuntime Interface for contains FlowGraph runtime instance Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public interface IFlowGraphRuntime Properties Graph Get runtime FlowGraph instance Declaration FlowGraph Graph { get; } Property Value Type Description FlowGraph Object Runtime context Declaration UObject Object { get; } Property Value Type Description UObject"
  },
  "api/Ceres.Graph.Flow.IllegalExecutableNode.html": {
    "href": "api/Ceres.Graph.Flow.IllegalExecutableNode.html",
    "title": "Class IllegalExecutableNode | Ceres Documentation",
    "keywords": "Class IllegalExecutableNode Inheritance object CeresNode ExecutableNode ForwardNode FlowNode IllegalExecutableNode Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class IllegalExecutableNode : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields NodeInfo Declaration public const string NodeInfo = \"The presence of this node indicates that there are illegal properties that cause the node to fail to load correctly.\" Field Value Type Description string NodeLabel Declaration public const string NodeLabel = \"<color=#FFE000><b>Illegal Propeties!</b></color>\" Field Value Type Description string nodeType Declaration public string nodeType Field Value Type Description string serializedData Declaration public string serializedData Field Value Type Description string Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.InvalidExecutableFunctionException.html": {
    "href": "api/Ceres.Graph.Flow.InvalidExecutableFunctionException.html",
    "title": "Class InvalidExecutableFunctionException | Ceres Documentation",
    "keywords": "Class InvalidExecutableFunctionException Inheritance object System.Exception InvalidExecutableFunctionException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public class InvalidExecutableFunctionException : Exception, ISerializable Constructors InvalidExecutableFunctionException(string) Declaration public InvalidExecutableFunctionException(string message) Parameters Type Name Description string message Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Ceres.Graph.Flow.InvalidExecutableNode.html": {
    "href": "api/Ceres.Graph.Flow.InvalidExecutableNode.html",
    "title": "Class InvalidExecutableNode | Ceres Documentation",
    "keywords": "Class InvalidExecutableNode Inheritance object CeresNode ExecutableNode ForwardNode FlowNode InvalidExecutableNode Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public class InvalidExecutableNode : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields nodeType Declaration public string nodeType Field Value Type Description string serializedData Declaration public string serializedData Field Value Type Description string Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.IPropertyNode.html": {
    "href": "api/Ceres.Graph.Flow.IPropertyNode.html",
    "title": "Interface IPropertyNode | Ceres Documentation",
    "keywords": "Interface IPropertyNode Interface for node contains named property Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public interface IPropertyNode Methods GetPropertyName() Declaration string GetPropertyName() Returns Type Description string SetPropertyName(string) Declaration void SetPropertyName(string propertyName) Parameters Type Name Description string propertyName"
  },
  "api/Ceres.Graph.Flow.IRedirectFlowGraphRuntimeType.html": {
    "href": "api/Ceres.Graph.Flow.IRedirectFlowGraphRuntimeType.html",
    "title": "Interface IRedirectFlowGraphRuntimeType | Ceres Documentation",
    "keywords": "Interface IRedirectFlowGraphRuntimeType Interface for IFlowGraphContainer that use specific IFlowGraphRuntime type instance Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax public interface IRedirectFlowGraphRuntimeType Methods GetRuntimeType() Get the specific IFlowGraphRuntime type instance Declaration Type GetRuntimeType() Returns Type Description System.Type"
  },
  "api/Ceres.Graph.Flow.Properties.html": {
    "href": "api/Ceres.Graph.Flow.Properties.html",
    "title": "Namespace Ceres.Graph.Flow.Properties | Ceres Documentation",
    "keywords": "Namespace Ceres.Graph.Flow.Properties Classes PropertyNode_GetPropertyTValue<TTarget, T> PropertyNode_GetSelfTReference<TTarget> PropertyNode_GetSharedVariableTValue<T, TVariableValue, TOutValue> PropertyNode_PropertyValue PropertyNode_SetPropertyTValue<TTarget, T> PropertyNode_SetSharedVariableTValue<T, TVariableValue, TInValue> PropertyNode_SharedVariableValue"
  },
  "api/Ceres.Graph.Flow.Properties.PropertyNode_GetPropertyTValue-2.html": {
    "href": "api/Ceres.Graph.Flow.Properties.PropertyNode_GetPropertyTValue-2.html",
    "title": "Class PropertyNode_GetPropertyTValue<TTarget, T> | Ceres Documentation",
    "keywords": "Class PropertyNode_GetPropertyTValue<TTarget, T> Inheritance object CeresNode ExecutableNode PropertyNode PropertyNode_PropertyValue PropertyNode_GetPropertyTValue<TTarget, T> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IPropertyNode ISerializationCallbackReceiver Inherited Members PropertyNode_PropertyValue.isSelfTarget PropertyNode_PropertyValue.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) PropertyNode.propertyName PropertyNode.SetPropertyName(string) PropertyNode.GetPropertyName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Properties Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class PropertyNode_GetPropertyTValue<TTarget, T> : PropertyNode_PropertyValue, IEnumerable<CeresNode>, IEnumerable, IDisposable, IPropertyNode, ISerializationCallbackReceiver Type Parameters Name Description TTarget T Fields outputValue Declaration public CeresPort<T> outputValue Field Value Type Description CeresPort<T> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IPropertyNode ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Properties.PropertyNode_GetSelfTReference-1.html": {
    "href": "api/Ceres.Graph.Flow.Properties.PropertyNode_GetSelfTReference-1.html",
    "title": "Class PropertyNode_GetSelfTReference<TTarget> | Ceres Documentation",
    "keywords": "Class PropertyNode_GetSelfTReference<TTarget> Inheritance object CeresNode ExecutableNode PropertyNode PropertyNode_GetSelfTReference<TTarget> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IPropertyNode Inherited Members PropertyNode.propertyName PropertyNode.SetPropertyName(string) PropertyNode.GetPropertyName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Properties Assembly: cs.temp.dll.dll Syntax [Serializable] public class PropertyNode_GetSelfTReference<TTarget> : PropertyNode, IEnumerable<CeresNode>, IEnumerable, IDisposable, IPropertyNode where TTarget : UObject Type Parameters Name Description TTarget Fields outputValue Declaration public CeresPort<TTarget> outputValue Field Value Type Description CeresPort<TTarget> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IPropertyNode"
  },
  "api/Ceres.Graph.Flow.Properties.PropertyNode_GetSharedVariableTValue-3.html": {
    "href": "api/Ceres.Graph.Flow.Properties.PropertyNode_GetSharedVariableTValue-3.html",
    "title": "Class PropertyNode_GetSharedVariableTValue<T, TVariableValue, TOutValue> | Ceres Documentation",
    "keywords": "Class PropertyNode_GetSharedVariableTValue<T, TVariableValue, TOutValue> Inheritance object CeresNode ExecutableNode PropertyNode PropertyNode_SharedVariableValue PropertyNode_GetSharedVariableTValue<T, TVariableValue, TOutValue> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IPropertyNode Inherited Members PropertyNode.propertyName PropertyNode.SetPropertyName(string) PropertyNode.GetPropertyName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Properties Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class PropertyNode_GetSharedVariableTValue<T, TVariableValue, TOutValue> : PropertyNode_SharedVariableValue, IEnumerable<CeresNode>, IEnumerable, IDisposable, IPropertyNode where T : SharedVariable<TVariableValue> where TOutValue : TVariableValue Type Parameters Name Description T TVariableValue TOutValue Fields outputValue Declaration public CeresPort<TOutValue> outputValue Field Value Type Description CeresPort<TOutValue> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IPropertyNode"
  },
  "api/Ceres.Graph.Flow.Properties.PropertyNode_PropertyValue.html": {
    "href": "api/Ceres.Graph.Flow.Properties.PropertyNode_PropertyValue.html",
    "title": "Class PropertyNode_PropertyValue | Ceres Documentation",
    "keywords": "Class PropertyNode_PropertyValue Inheritance object CeresNode ExecutableNode PropertyNode PropertyNode_PropertyValue PropertyNode_GetPropertyTValue<TTarget, T> PropertyNode_SetPropertyTValue<TTarget, T> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IPropertyNode Inherited Members PropertyNode.propertyName PropertyNode.SetPropertyName(string) PropertyNode.GetPropertyName() ExecutableNode.Graph ExecutableNode.Execute(ExecutionContext) ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Properties Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class PropertyNode_PropertyValue : PropertyNode, IEnumerable<CeresNode>, IEnumerable, IDisposable, IPropertyNode Fields isSelfTarget Declaration public bool isSelfTarget Field Value Type Description bool Methods GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) Declaration protected TValue GetTargetOrDefault<TValue>(CeresPort<TValue> inputPort, ExecutionContext context) Parameters Type Name Description CeresPort<TValue> inputPort ExecutionContext context Returns Type Description TValue Type Parameters Name Description TValue Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IPropertyNode"
  },
  "api/Ceres.Graph.Flow.Properties.PropertyNode_SetPropertyTValue-2.html": {
    "href": "api/Ceres.Graph.Flow.Properties.PropertyNode_SetPropertyTValue-2.html",
    "title": "Class PropertyNode_SetPropertyTValue<TTarget, T> | Ceres Documentation",
    "keywords": "Class PropertyNode_SetPropertyTValue<TTarget, T> Inheritance object CeresNode ExecutableNode PropertyNode PropertyNode_PropertyValue PropertyNode_SetPropertyTValue<TTarget, T> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IPropertyNode ISerializationCallbackReceiver Inherited Members PropertyNode_PropertyValue.isSelfTarget PropertyNode_PropertyValue.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) PropertyNode.propertyName PropertyNode.SetPropertyName(string) PropertyNode.GetPropertyName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Properties Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class PropertyNode_SetPropertyTValue<TTarget, T> : PropertyNode_PropertyValue, IEnumerable<CeresNode>, IEnumerable, IDisposable, IPropertyNode, ISerializationCallbackReceiver Type Parameters Name Description TTarget T Fields exec Declaration public NodePort exec Field Value Type Description NodePort input Dependency node port Declaration public NodePort input Field Value Type Description NodePort inputValue Declaration public CeresPort<T> inputValue Field Value Type Description CeresPort<T> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IPropertyNode ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Properties.PropertyNode_SetSharedVariableTValue-3.html": {
    "href": "api/Ceres.Graph.Flow.Properties.PropertyNode_SetSharedVariableTValue-3.html",
    "title": "Class PropertyNode_SetSharedVariableTValue<T, TVariableValue, TInValue> | Ceres Documentation",
    "keywords": "Class PropertyNode_SetSharedVariableTValue<T, TVariableValue, TInValue> Inheritance object CeresNode ExecutableNode PropertyNode PropertyNode_SharedVariableValue PropertyNode_SetSharedVariableTValue<T, TVariableValue, TInValue> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IPropertyNode Inherited Members PropertyNode.propertyName PropertyNode.SetPropertyName(string) PropertyNode.GetPropertyName() ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Properties Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class PropertyNode_SetSharedVariableTValue<T, TVariableValue, TInValue> : PropertyNode_SharedVariableValue, IEnumerable<CeresNode>, IEnumerable, IDisposable, IPropertyNode where T : SharedVariable<TVariableValue> where TInValue : TVariableValue Type Parameters Name Description T TVariableValue TInValue Fields exec Declaration public NodePort exec Field Value Type Description NodePort input Dependency node port Declaration public NodePort input Field Value Type Description NodePort inputValue Declaration public CeresPort<TInValue> inputValue Field Value Type Description CeresPort<TInValue> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IPropertyNode"
  },
  "api/Ceres.Graph.Flow.Properties.PropertyNode_SharedVariableValue.html": {
    "href": "api/Ceres.Graph.Flow.Properties.PropertyNode_SharedVariableValue.html",
    "title": "Class PropertyNode_SharedVariableValue | Ceres Documentation",
    "keywords": "Class PropertyNode_SharedVariableValue Inheritance object CeresNode ExecutableNode PropertyNode PropertyNode_SharedVariableValue PropertyNode_GetSharedVariableTValue<T, TVariableValue, TOutValue> PropertyNode_SetSharedVariableTValue<T, TVariableValue, TInValue> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IPropertyNode Inherited Members PropertyNode.propertyName PropertyNode.SetPropertyName(string) PropertyNode.GetPropertyName() ExecutableNode.Graph ExecutableNode.Execute(ExecutionContext) ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Properties Assembly: cs.temp.dll.dll Syntax public abstract class PropertyNode_SharedVariableValue : PropertyNode, IEnumerable<CeresNode>, IEnumerable, IDisposable, IPropertyNode Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IPropertyNode"
  },
  "api/Ceres.Graph.Flow.PropertyNode.html": {
    "href": "api/Ceres.Graph.Flow.PropertyNode.html",
    "title": "Class PropertyNode | Ceres Documentation",
    "keywords": "Class PropertyNode Base class for executable nodes that contained graph property without execution Inheritance object CeresNode ExecutableNode PropertyNode PropertyNode_GetSelfTReference<TTarget> PropertyNode_PropertyValue PropertyNode_SharedVariableValue Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable IPropertyNode Inherited Members ExecutableNode.Graph ExecutableNode.Execute(ExecutionContext) ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class PropertyNode : ExecutableNode, IEnumerable<CeresNode>, IEnumerable, IDisposable, IPropertyNode Fields propertyName Declaration public string propertyName Field Value Type Description string Methods GetPropertyName() Declaration public string GetPropertyName() Returns Type Description string SetPropertyName(string) Declaration public void SetPropertyName(string inPropertyName) Parameters Type Name Description string inPropertyName Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable IPropertyNode"
  },
  "api/Ceres.Graph.Flow.Utilities.CeresExecutableLibrary.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.CeresExecutableLibrary.html",
    "title": "Class CeresExecutableLibrary | Ceres Documentation",
    "keywords": "Class CeresExecutableLibrary Executable function library for CeresAPI Inheritance object ExecutableFunctionLibrary CeresExecutableLibrary Inherited Members ExecutableFunctionLibrary.CollectExecutableFunctions() ExecutableFunctionLibrary.RegisterExecutableFunction<TLibrary>(string, int, void*) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public class CeresExecutableLibrary : ExecutableFunctionLibrary Methods Flow_GetLogLevel() Declaration public static LogType Flow_GetLogLevel() Returns Type Description LogType Flow_SetLogLevel(LogType) Declaration public static void Flow_SetLogLevel(LogType logType) Parameters Type Name Description LogType logType"
  },
  "api/Ceres.Graph.Flow.Utilities.DataDrivenExecutableLibrary.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.DataDrivenExecutableLibrary.html",
    "title": "Class DataDrivenExecutableLibrary | Ceres Documentation",
    "keywords": "Class DataDrivenExecutableLibrary Executable function library for Chris.DataDriven Inheritance object ExecutableFunctionLibrary DataDrivenExecutableLibrary Inherited Members ExecutableFunctionLibrary.CollectExecutableFunctions() ExecutableFunctionLibrary.RegisterExecutableFunction<TLibrary>(string, int, void*) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public class DataDrivenExecutableLibrary : ExecutableFunctionLibrary Methods Flow_DataTableGetAllRows(DataTable) Declaration public static IDataTableRow[] Flow_DataTableGetAllRows(DataTable dataTable) Parameters Type Name Description DataTable dataTable Returns Type Description IDataTableRow[] Flow_DataTableGetRow(DataTable, string, SerializedType<IDataTableRow>) Declaration public static IDataTableRow Flow_DataTableGetRow(DataTable dataTable, string rowId, SerializedType<IDataTableRow> rowType) Parameters Type Name Description DataTable dataTable string rowId SerializedType<><IDataTableRow> rowType Returns Type Description IDataTableRow Flow_DataTableGetRowByIndex(DataTable, int, SerializedType<IDataTableRow>) Declaration public static IDataTableRow Flow_DataTableGetRowByIndex(DataTable dataTable, int index, SerializedType<IDataTableRow> rowType) Parameters Type Name Description DataTable dataTable int index SerializedType<><IDataTableRow> rowType Returns Type Description IDataTableRow Flow_DataTableManagerGetDataTable(DataTableManager, string) Declaration public static DataTable Flow_DataTableManagerGetDataTable(DataTableManager dataTableManager, string name) Parameters Type Name Description DataTableManager dataTableManager string name Returns Type Description DataTable Flow_GetDataTableManager(SerializedType<DataTableManager>) Declaration public static DataTableManager Flow_GetDataTableManager(SerializedType<DataTableManager> managerType) Parameters Type Name Description SerializedType<><DataTableManager> managerType Returns Type Description DataTableManager"
  },
  "api/Ceres.Graph.Flow.Utilities.ExecutableFunctionLibrary.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.ExecutableFunctionLibrary.html",
    "title": "Class ExecutableFunctionLibrary | Ceres Documentation",
    "keywords": "Class ExecutableFunctionLibrary Derived from this class to add custom static functions Inheritance object ExecutableFunctionLibrary CeresExecutableLibrary DataDrivenExecutableLibrary MathExecutableLibrary ResourceExecutableLibrary RxExecutableLibrary SchedulerExecutableLibrary TextExecutableLibrary UnityExecutableLibrary Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public abstract class ExecutableFunctionLibrary Remarks Must add partial modifier Constructors ExecutableFunctionLibrary() Declaration protected ExecutableFunctionLibrary() Remarks Must add partial modifier Methods CollectExecutableFunctions() Collect all static executable functions in this library Declaration protected virtual void CollectExecutableFunctions() Remarks Must add partial modifier RegisterExecutableFunction<TLibrary>(string, int, void*) Register static executable function to reflection system Declaration protected static void RegisterExecutableFunction<TLibrary>(string functionName, int parameterCount, void* functionPtr) where TLibrary : ExecutableFunctionLibrary Parameters Type Name Description string functionName int parameterCount void* functionPtr Type Parameters Name Description TLibrary Remarks Must add partial modifier"
  },
  "api/Ceres.Graph.Flow.Utilities.ExecutableFunctionRegistry.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.ExecutableFunctionRegistry.html",
    "title": "Class ExecutableFunctionRegistry | Ceres Documentation",
    "keywords": "Class ExecutableFunctionRegistry Helper class for query executable functions Inheritance object ExecutableFunctionRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public class ExecutableFunctionRegistry Methods Get() Declaration public static ExecutableFunctionRegistry Get() Returns Type Description ExecutableFunctionRegistry GetFunctions(Type) Declaration public MethodInfo[] GetFunctions(Type type) Parameters Type Name Description System.Type type Returns Type Description MethodInfo[] GetManagedTypes() Declaration public Type[] GetManagedTypes() Returns Type Description System.Type[] GetStaticFunctions() Declaration public MethodInfo[] GetStaticFunctions() Returns Type Description MethodInfo[]"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_Branch.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_Branch.html",
    "title": "Class FlowNode_Branch | Ceres Documentation",
    "keywords": "Class FlowNode_Branch Branch will route the execution flow depending on the value of the condition input. Inheritance object CeresNode ExecutableNode ForwardNode FlowNode_Branch Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_Branch : ForwardNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields condition Declaration public CeresPort<bool> condition Field Value Type Description CeresPort<bool> falseOutput Declaration public NodePort falseOutput Field Value Type Description NodePort trueOutput Declaration public NodePort trueOutput Field Value Type Description NodePort Methods Execute(ExecutionContext) Declaration protected override sealed UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_CastT-2.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_CastT-2.html",
    "title": "Class FlowNode_CastT<TFrom, TTo> | Ceres Documentation",
    "keywords": "Class FlowNode_CastT<TFrom, TTo> Casting a value from type to type . Inheritance object CeresNode ExecutableNode ForwardNode FlowNode_CastT<TFrom, TTo> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_CastT<TFrom, TTo> : ForwardNode, IEnumerable<CeresNode>, IEnumerable, IDisposable where TTo : TFrom Type Parameters Name Description TFrom TTo Fields castFailed Declaration public NodePort castFailed Field Value Type Description NodePort exec Declaration public NodePort exec Field Value Type Description NodePort resultValue Declaration public CeresPort<TTo> resultValue Field Value Type Description CeresPort<TTo> sourceValue Declaration public CeresPort<TFrom> sourceValue Field Value Type Description CeresPort<TFrom> Methods Execute(ExecutionContext) Declaration protected override sealed UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_DebugLog.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_DebugLog.html",
    "title": "Class FlowNode_DebugLog | Ceres Documentation",
    "keywords": "Class FlowNode_DebugLog Logs message to the Unity Console Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_DebugLog Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_DebugLog : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields logType Declaration public LogType logType Field Value Type Description LogType message Declaration public CeresPort<object> message Field Value Type Description CeresPort<object> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_DebugLogString.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_DebugLogString.html",
    "title": "Class FlowNode_DebugLogString | Ceres Documentation",
    "keywords": "Class FlowNode_DebugLogString Logs string message to the Unity Console. Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_DebugLogString Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_DebugLogString : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields inString Declaration public CeresPort<string> inString Field Value Type Description CeresPort<string> logType Declaration public LogType logType Field Value Type Description LogType Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_EqualsT-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_EqualsT-1.html",
    "title": "Class FlowNode_EqualsT<T> | Ceres Documentation",
    "keywords": "Class FlowNode_EqualsT<T> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_EqualsT<T> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_EqualsT<T> : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Type Parameters Name Description T Fields resultValue Declaration public CeresPort<bool> resultValue Field Value Type Description CeresPort<bool> value1 Declaration public CeresPort<T> value1 Field Value Type Description CeresPort<T> value2 Declaration public CeresPort<T> value2 Field Value Type Description CeresPort<T> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteEvent.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteEvent.html",
    "title": "Class FlowNode_ExecuteEvent | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteEvent Execute an ExecutionEvent Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteEvent Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_ExecuteEvent : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields eventName Declaration public string eventName Field Value Type Description string Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides FlowNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunction.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunction.html",
    "title": "Class FlowNode_ExecuteFunction | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunction Execute function in flow Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionReturn FlowNode_ExecuteFunctionUber FlowNode_ExecuteFunctionVoid Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class FlowNode_ExecuteFunction : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields executeInDependency Declaration public bool executeInDependency Field Value Type Description bool isScriptMethod Declaration public bool isScriptMethod Field Value Type Description bool isSelfTarget Declaration public bool isSelfTarget Field Value Type Description bool isStatic Declaration public bool isStatic Field Value Type Description bool methodName Declaration public string methodName Field Value Type Description string parameterCount Declaration public int parameterCount Field Value Type Description int Methods GetExecutionPath() Declaration public override ExecutionPath GetExecutionPath() Returns Type Description ExecutionPath Overrides CeresNode.GetExecutionPath() GetMethodInfo(Type) Declaration public virtual MethodInfo GetMethodInfo(Type targetType) Parameters Type Name Description System.Type targetType Returns Type Description MethodInfo GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) Declaration protected TValue GetSelfTargetOrDefault<TValue>(CeresPort<TValue> inputPort, ExecutionContext context) Parameters Type Name Description CeresPort<TValue> inputPort ExecutionContext context Returns Type Description TValue Type Parameters Name Description TValue GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) Declaration protected TValue GetTargetOrDefault<TValue>(CeresPort<TValue> inputPort, ExecutionContext context) Parameters Type Name Description CeresPort<TValue> inputPort ExecutionContext context Returns Type Description TValue Type Parameters Name Description TValue Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionReturn-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionReturn-1.html",
    "title": "Class FlowNode_ExecuteFunctionReturn<TTarget> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionReturn<TTarget> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionReturn FlowNode_ExecuteFunctionReturn<TTarget> FlowNode_ExecuteFunctionTReturn<TTarget, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TP6, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public abstract class FlowNode_ExecuteFunctionReturn<TTarget> : FlowNode_ExecuteFunctionReturn, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget Methods GetExecutableFunction() Declaration public ExecutableReflection<TTarget>.ExecutableFunction GetExecutableFunction() Returns Type Description ExecutableReflection<TTarget>.ExecutableFunction GetMethodInfo(Type) Declaration public override MethodInfo GetMethodInfo(Type targetType) Parameters Type Name Description System.Type targetType Returns Type Description MethodInfo Overrides FlowNode_ExecuteFunction.GetMethodInfo(Type) OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionReturn.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionReturn.html",
    "title": "Class FlowNode_ExecuteFunctionReturn | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionReturn Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionReturn FlowNode_ExecuteFunctionReturn<TTarget> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetMethodInfo(Type) FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public abstract class FlowNode_ExecuteFunctionReturn : FlowNode_ExecuteFunction, IEnumerable<CeresNode>, IEnumerable, IDisposable Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionT-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionT-1.html",
    "title": "Class FlowNode_ExecuteFunctionT<TTarget> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionT<TTarget> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionUber FlowNode_ExecuteFunctionT<TTarget> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetMethodInfo(Type) FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionT<TTarget> : FlowNode_ExecuteFunctionUber, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget Fields inputs Declaration public CeresPort<object>[] inputs Field Value Type Description CeresPort<object>[] outputs Declaration public CeresPort<object>[] outputs Field Value Type Description CeresPort<object>[] target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-2.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-2.html",
    "title": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionReturn FlowNode_ExecuteFunctionReturn<TTarget> FlowNode_ExecuteFunctionTReturn<TTarget, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionReturn<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionReturn<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionReturn<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionReturn<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTReturn<TTarget, TR> : FlowNode_ExecuteFunctionReturn<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TR Fields output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-3.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-3.html",
    "title": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionReturn FlowNode_ExecuteFunctionReturn<TTarget> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionReturn<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionReturn<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionReturn<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionReturn<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TR> : FlowNode_ExecuteFunctionReturn<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-4.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-4.html",
    "title": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionReturn FlowNode_ExecuteFunctionReturn<TTarget> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionReturn<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionReturn<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionReturn<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionReturn<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TR> : FlowNode_ExecuteFunctionReturn<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 TP2 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-5.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-5.html",
    "title": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionReturn FlowNode_ExecuteFunctionReturn<TTarget> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionReturn<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionReturn<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionReturn<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionReturn<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TR> : FlowNode_ExecuteFunctionReturn<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 TP2 TP3 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-6.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-6.html",
    "title": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionReturn FlowNode_ExecuteFunctionReturn<TTarget> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionReturn<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionReturn<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionReturn<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionReturn<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TR> : FlowNode_ExecuteFunctionReturn<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 TP2 TP3 TP4 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-7.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-7.html",
    "title": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionReturn FlowNode_ExecuteFunctionReturn<TTarget> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionReturn<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionReturn<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionReturn<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionReturn<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TR> : FlowNode_ExecuteFunctionReturn<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 TP2 TP3 TP4 TP5 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> input5 Declaration public CeresPort<TP5> input5 Field Value Type Description CeresPort<TP5> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-8.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTReturn-8.html",
    "title": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TP6, TR> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TP6, TR> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionReturn FlowNode_ExecuteFunctionReturn<TTarget> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TP6, TR> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionReturn<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionReturn<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionReturn<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionReturn<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TP6, TR> : FlowNode_ExecuteFunctionReturn<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 TP2 TP3 TP4 TP5 TP6 TR Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> input5 Declaration public CeresPort<TP5> input5 Field Value Type Description CeresPort<TP5> input6 Declaration public CeresPort<TP6> input6 Field Value Type Description CeresPort<TP6> output Declaration public CeresPort<TR> output Field Value Type Description CeresPort<TR> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-1.html",
    "title": "Class FlowNode_ExecuteFunctionTVoid<TTarget> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTVoid<TTarget> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionVoid FlowNode_ExecuteFunctionVoid<TTarget> FlowNode_ExecuteFunctionTVoid<TTarget> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionVoid<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionVoid<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionVoid<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionVoid<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTVoid<TTarget> : FlowNode_ExecuteFunctionVoid<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget Fields target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-2.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-2.html",
    "title": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionVoid FlowNode_ExecuteFunctionVoid<TTarget> FlowNode_ExecuteFunctionTVoid<TTarget, TP1> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionVoid<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionVoid<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionVoid<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionVoid<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTVoid<TTarget, TP1> : FlowNode_ExecuteFunctionVoid<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-3.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-3.html",
    "title": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionVoid FlowNode_ExecuteFunctionVoid<TTarget> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionVoid<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionVoid<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionVoid<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionVoid<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2> : FlowNode_ExecuteFunctionVoid<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 TP2 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-4.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-4.html",
    "title": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionVoid FlowNode_ExecuteFunctionVoid<TTarget> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionVoid<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionVoid<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionVoid<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionVoid<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3> : FlowNode_ExecuteFunctionVoid<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 TP2 TP3 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-5.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-5.html",
    "title": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionVoid FlowNode_ExecuteFunctionVoid<TTarget> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionVoid<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionVoid<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionVoid<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionVoid<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4> : FlowNode_ExecuteFunctionVoid<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 TP2 TP3 TP4 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-6.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-6.html",
    "title": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionVoid FlowNode_ExecuteFunctionVoid<TTarget> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionVoid<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionVoid<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionVoid<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionVoid<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5> : FlowNode_ExecuteFunctionVoid<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 TP2 TP3 TP4 TP5 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> input5 Declaration public CeresPort<TP5> input5 Field Value Type Description CeresPort<TP5> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-7.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionTVoid-7.html",
    "title": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5, TP6> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5, TP6> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionVoid FlowNode_ExecuteFunctionVoid<TTarget> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5, TP6> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunctionVoid<TTarget>.GetMethodInfo(Type) FlowNode_ExecuteFunctionVoid<TTarget>.GetExecutableFunction() FlowNode_ExecuteFunctionVoid<TTarget>.OnBeforeSerialize() FlowNode_ExecuteFunctionVoid<TTarget>.OnAfterDeserialize() FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5, TP6> : FlowNode_ExecuteFunctionVoid<TTarget>, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget TP1 TP2 TP3 TP4 TP5 TP6 Fields input1 Declaration public CeresPort<TP1> input1 Field Value Type Description CeresPort<TP1> input2 Declaration public CeresPort<TP2> input2 Field Value Type Description CeresPort<TP2> input3 Declaration public CeresPort<TP3> input3 Field Value Type Description CeresPort<TP3> input4 Declaration public CeresPort<TP4> input4 Field Value Type Description CeresPort<TP4> input5 Declaration public CeresPort<TP5> input5 Field Value Type Description CeresPort<TP5> input6 Declaration public CeresPort<TP6> input6 Field Value Type Description CeresPort<TP6> target Declaration public CeresPort<TTarget> target Field Value Type Description CeresPort<TTarget> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionUber.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionUber.html",
    "title": "Class FlowNode_ExecuteFunctionUber | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionUber Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionUber FlowNode_ExecuteFunctionT<TTarget> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetMethodInfo(Type) FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public abstract class FlowNode_ExecuteFunctionUber : FlowNode_ExecuteFunction, IEnumerable<CeresNode>, IEnumerable, IDisposable Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionVoid-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionVoid-1.html",
    "title": "Class FlowNode_ExecuteFunctionVoid<TTarget> | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionVoid<TTarget> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionVoid FlowNode_ExecuteFunctionVoid<TTarget> FlowNode_ExecuteFunctionTVoid<TTarget> FlowNode_ExecuteFunctionTVoid<TTarget, TP1> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5, TP6> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver Inherited Members FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public abstract class FlowNode_ExecuteFunctionVoid<TTarget> : FlowNode_ExecuteFunctionVoid, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver Type Parameters Name Description TTarget Methods GetExecutableFunction() Declaration public ExecutableReflection<TTarget>.ExecutableFunction GetExecutableFunction() Returns Type Description ExecutableReflection<TTarget>.ExecutableFunction GetMethodInfo(Type) Declaration public override MethodInfo GetMethodInfo(Type targetType) Parameters Type Name Description System.Type targetType Returns Type Description MethodInfo Overrides FlowNode_ExecuteFunction.GetMethodInfo(Type) OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionVoid.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ExecuteFunctionVoid.html",
    "title": "Class FlowNode_ExecuteFunctionVoid | Ceres Documentation",
    "keywords": "Class FlowNode_ExecuteFunctionVoid Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ExecuteFunction FlowNode_ExecuteFunctionVoid FlowNode_ExecuteFunctionVoid<TTarget> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode_ExecuteFunction.methodName FlowNode_ExecuteFunction.parameterCount FlowNode_ExecuteFunction.isStatic FlowNode_ExecuteFunction.executeInDependency FlowNode_ExecuteFunction.isSelfTarget FlowNode_ExecuteFunction.isScriptMethod FlowNode_ExecuteFunction.GetMethodInfo(Type) FlowNode_ExecuteFunction.GetTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetSelfTargetOrDefault<TValue>(CeresPort<TValue>, ExecutionContext) FlowNode_ExecuteFunction.GetExecutionPath() FlowNode.exec FlowNode.Execute(ExecutionContext) FlowNode.LocalExecute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public abstract class FlowNode_ExecuteFunctionVoid : FlowNode_ExecuteFunction, IEnumerable<CeresNode>, IEnumerable, IDisposable Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ForEachLoop.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ForEachLoop.html",
    "title": "Class FlowNode_ForEachLoop | Ceres Documentation",
    "keywords": "Class FlowNode_ForEachLoop Inheritance object CeresNode ExecutableNode ForwardNode FlowNode_ForEachLoop Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_ForEachLoop : ForwardNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields array Declaration public CeresPort<Array> array Field Value Type Description CeresPort<Array> arrayElement Declaration public CeresPort<object> arrayElement Field Value Type Description CeresPort<object> completed Declaration public NodePort completed Field Value Type Description NodePort loopBody Declaration public NodePort loopBody Field Value Type Description NodePort Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_GetArrayElementT-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_GetArrayElementT-1.html",
    "title": "Class FlowNode_GetArrayElementT<T> | Ceres Documentation",
    "keywords": "Class FlowNode_GetArrayElementT<T> Retrieve an element from an array at a given index. Inheritance object CeresNode ExecutableNode FlowNode_GetArrayElementT<T> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_GetArrayElementT<T> : ExecutableNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Type Parameters Name Description T Fields array Declaration public CeresPort<IReadOnlyList<T>> array Field Value Type Description CeresPort<System.Collections.Generic.IReadOnlyList<T><T>> element Declaration public CeresPort<T> element Field Value Type Description CeresPort<T> index Declaration public CeresPort<int> index Field Value Type Description CeresPort<int> Methods Execute(ExecutionContext) Declaration protected override UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_InstantiateT-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_InstantiateT-1.html",
    "title": "Class FlowNode_InstantiateT<TObject> | Ceres Documentation",
    "keywords": "Class FlowNode_InstantiateT<TObject> Clones the object original and returns the clone. Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_InstantiateT<TObject> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_InstantiateT<TObject> : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable where TObject : UObject Type Parameters Name Description TObject Fields original Declaration public CeresPort<TObject> original Field Value Type Description CeresPort<TObject> parent Declaration public CeresPort<Transform> parent Field Value Type Description CeresPort<Transform> position Declaration public CeresPort<Vector3> position Field Value Type Description CeresPort<Vector3> resultValue Declaration public CeresPort<TObject> resultValue Field Value Type Description CeresPort<TObject> rotation Declaration public CeresPort<Quaternion> rotation Field Value Type Description CeresPort<Quaternion> worldPositionStays Declaration public CeresPort<bool> worldPositionStays Field Value Type Description CeresPort<bool> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_MakeArray.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_MakeArray.html",
    "title": "Class FlowNode_MakeArray | Ceres Documentation",
    "keywords": "Class FlowNode_MakeArray Inheritance object CeresNode ExecutableNode FlowNode_MakeArray FlowNode_MakeArrayT<T> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ExecutableNode.Graph ExecutableNode.Execute(ExecutionContext) ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public abstract class FlowNode_MakeArray : ExecutableNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_MakeArrayT-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_MakeArrayT-1.html",
    "title": "Class FlowNode_MakeArrayT<T> | Ceres Documentation",
    "keywords": "Class FlowNode_MakeArrayT<T> Make an array of type Inheritance object CeresNode ExecutableNode FlowNode_MakeArray FlowNode_MakeArrayT<T> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver IPortArrayNode IReadOnlyPortArrayNode Inherited Members ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_MakeArrayT<T> : FlowNode_MakeArray, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver, IPortArrayNode, IReadOnlyPortArrayNode Type Parameters Name Description T Fields array Declaration public CeresPort<T[]> array Field Value Type Description CeresPort<T[]> inputCount Declaration public int inputCount Field Value Type Description int items Declaration public CeresPort<T>[] items Field Value Type Description CeresPort<T>[] Methods Execute(ExecutionContext) Declaration protected override sealed UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) GetPortArrayFieldName() Declaration public string GetPortArrayFieldName() Returns Type Description string GetPortArrayLength() Declaration public int GetPortArrayLength() Returns Type Description int OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() SetPortArrayLength(int) Declaration public void SetPortArrayLength(int newLength) Parameters Type Name Description int newLength Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver IPortArrayNode IReadOnlyPortArrayNode"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_ObservableSubscribeT-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_ObservableSubscribeT-1.html",
    "title": "Class FlowNode_ObservableSubscribeT<T> | Ceres Documentation",
    "keywords": "Class FlowNode_ObservableSubscribeT<T> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_ObservableSubscribeT<T> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_ObservableSubscribeT<T> : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Type Parameters Name Description T Fields onNext Declaration public DelegatePort<EventDelegate<T>> onNext Field Value Type Description DelegatePort<EventDelegate<T>> subject Declaration public CeresPort<Observable<T>> subject Field Value Type Description CeresPort<Observable<T>> subscription Declaration public CeresPort<IDisposable> subscription Field Value Type Description CeresPort<System.IDisposable> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_Sequence.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_Sequence.html",
    "title": "Class FlowNode_Sequence | Ceres Documentation",
    "keywords": "Class FlowNode_Sequence Execute a series of output nodes sequentially, forwarding the execution flow to each output port in the defined sequence. Inheritance object CeresNode ExecutableNode ForwardNode FlowNode_Sequence Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver IPortArrayNode IReadOnlyPortArrayNode Inherited Members ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_Sequence : ForwardNode, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver, IPortArrayNode, IReadOnlyPortArrayNode Fields outputCount Declaration public int outputCount Field Value Type Description int outputs Declaration public NodePort[] outputs Field Value Type Description NodePort[] Methods Execute(ExecutionContext) Declaration protected override sealed UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) GetPortArrayFieldName() Declaration public string GetPortArrayFieldName() Returns Type Description string GetPortArrayLength() Declaration public int GetPortArrayLength() Returns Type Description int OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() SetPortArrayLength(int) Declaration public void SetPortArrayLength(int newLength) Parameters Type Name Description int newLength Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver IPortArrayNode IReadOnlyPortArrayNode"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_SoftAssetReferenceLoadAssetAsync.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_SoftAssetReferenceLoadAssetAsync.html",
    "title": "Class FlowNode_SoftAssetReferenceLoadAssetAsync | Ceres Documentation",
    "keywords": "Class FlowNode_SoftAssetReferenceLoadAssetAsync Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_SoftAssetReferenceLoadAssetAsync Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_SoftAssetReferenceLoadAssetAsync : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Fields onComplete Declaration public DelegatePort<EventDelegate<UObject>> onComplete Field Value Type Description DelegatePort<EventDelegate<UObject>> reference Declaration public CeresPort<SoftAssetReference> reference Field Value Type Description CeresPort<SoftAssetReference> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_SoftAssetReferenceTLoadAssetAsync-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_SoftAssetReferenceTLoadAssetAsync-1.html",
    "title": "Class FlowNode_SoftAssetReferenceTLoadAssetAsync<TObject> | Ceres Documentation",
    "keywords": "Class FlowNode_SoftAssetReferenceTLoadAssetAsync<TObject> Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_SoftAssetReferenceTLoadAssetAsync<TObject> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class FlowNode_SoftAssetReferenceTLoadAssetAsync<TObject> : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable where TObject : UObject Type Parameters Name Description TObject Fields onComplete Declaration public DelegatePort<EventDelegate<TObject>> onComplete Field Value Type Description DelegatePort<EventDelegate<TObject>> reference Declaration public CeresPort<SoftAssetReference<TObject>> reference Field Value Type Description CeresPort<SoftAssetReference<TObject>> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_SubscribeEventExecutionT-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_SubscribeEventExecutionT-1.html",
    "title": "Class FlowNode_SubscribeEventExecutionT<TEventType> | Ceres Documentation",
    "keywords": "Class FlowNode_SubscribeEventExecutionT<TEventType> Subscribe to with an execution of Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_SubscribeEventExecutionT<TEventType> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_SubscribeEventExecutionT<TEventType> : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable where TEventType : EventBase<TEventType>, new() Type Parameters Name Description TEventType Fields subscription Declaration public CeresPort<IDisposable> subscription Field Value Type Description CeresPort<System.IDisposable> target Declaration public CeresPort<CallbackEventHandler> target Field Value Type Description CeresPort<CallbackEventHandler> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_SubscribeGlobalEventExecutionT-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_SubscribeGlobalEventExecutionT-1.html",
    "title": "Class FlowNode_SubscribeGlobalEventExecutionT<TEventType> | Ceres Documentation",
    "keywords": "Class FlowNode_SubscribeGlobalEventExecutionT<TEventType> Subscribe to with an execution of Inheritance object CeresNode ExecutableNode ForwardNode FlowNode FlowNode_SubscribeGlobalEventExecutionT<TEventType> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members FlowNode.exec FlowNode.Execute(ExecutionContext) ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_SubscribeGlobalEventExecutionT<TEventType> : FlowNode, IEnumerable<CeresNode>, IEnumerable, IDisposable where TEventType : EventBase<TEventType>, new() Type Parameters Name Description TEventType Fields subscription Declaration public CeresPort<IDisposable> subscription Field Value Type Description CeresPort<System.IDisposable> Methods LocalExecute(ExecutionContext) Declaration protected override void LocalExecute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Overrides FlowNode.LocalExecute(ExecutionContext) Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_SwitchEnum.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_SwitchEnum.html",
    "title": "Class FlowNode_SwitchEnum | Ceres Documentation",
    "keywords": "Class FlowNode_SwitchEnum Inheritance object CeresNode ExecutableNode ForwardNode FlowNode_SwitchEnum FlowNode_SwitchEnumT<TEnum> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable Inherited Members ForwardNode.input ExecutableNode.Graph ExecutableNode.Execute(ExecutionContext) ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public abstract class FlowNode_SwitchEnum : ForwardNode, IEnumerable<CeresNode>, IEnumerable, IDisposable Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_SwitchEnumT-1.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_SwitchEnumT-1.html",
    "title": "Class FlowNode_SwitchEnumT<TEnum> | Ceres Documentation",
    "keywords": "Class FlowNode_SwitchEnumT<TEnum> Route execution to one of several output ports based on the value of an enum type, offering a dynamic branching mechanism in execution flow. Inheritance object CeresNode ExecutableNode ForwardNode FlowNode_SwitchEnum FlowNode_SwitchEnumT<TEnum> Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver IReadOnlyPortArrayNode Inherited Members ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_SwitchEnumT<TEnum> : FlowNode_SwitchEnum, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver, IReadOnlyPortArrayNode where TEnum : Enum Type Parameters Name Description TEnum Fields outputs Declaration public NodePort[] outputs Field Value Type Description NodePort[] sourceValue Declaration public CeresPort<TEnum> sourceValue Field Value Type Description CeresPort<TEnum> Methods Execute(ExecutionContext) Declaration protected override sealed UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) GetPortArrayFieldName() Declaration public string GetPortArrayFieldName() Returns Type Description string GetPortArrayLength() Declaration public int GetPortArrayLength() Returns Type Description int OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver IReadOnlyPortArrayNode"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_SwitchString.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_SwitchString.html",
    "title": "Class FlowNode_SwitchString | Ceres Documentation",
    "keywords": "Class FlowNode_SwitchString Inheritance object CeresNode ExecutableNode ForwardNode FlowNode_SwitchString Implements System.Collections.Generic.IEnumerable<T><CeresNode> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver IReadOnlyPortArrayNode Inherited Members ForwardNode.input ExecutableNode.Graph ExecutableNode.ExecuteNode(ExecutionContext) CeresNode.NodeData CeresNode.Guid CeresNode.GraphPosition CeresNode.Dispose() CeresNode.GetSerializedData() CeresNode.GetExecutionPath() CeresNode.GetEnumerator() CeresNode.IEnumerable.GetEnumerator() CeresNode.GetExecutionPath(Type) CeresNode.MakeSubtitle(string, bool) CeresNode.GetTargetSubtitle(string, bool) CeresNode.GetTargetSubtitle(Type, bool) CeresNode.GetTypeName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public class FlowNode_SwitchString : ForwardNode, IEnumerable<CeresNode>, IEnumerable, IDisposable, ISerializationCallbackReceiver, IReadOnlyPortArrayNode Fields defaultOutput Declaration public NodePort defaultOutput Field Value Type Description NodePort outputs Declaration public NodePort[] outputs Field Value Type Description NodePort[] settings Declaration public FlowNode_SwitchString.Settings settings Field Value Type Description FlowNode_SwitchString.Settings sourceValue Declaration public CeresPort<string> sourceValue Field Value Type Description CeresPort<string> Methods Execute(ExecutionContext) Declaration protected override sealed UniTask Execute(ExecutionContext executionContext) Parameters Type Name Description ExecutionContext executionContext Returns Type Description UniTask Overrides ExecutableNode.Execute(ExecutionContext) GetPortArrayFieldName() Declaration public string GetPortArrayFieldName() Returns Type Description string GetPortArrayLength() Declaration public int GetPortArrayLength() Returns Type Description int OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable System.IDisposable ISerializationCallbackReceiver IReadOnlyPortArrayNode"
  },
  "api/Ceres.Graph.Flow.Utilities.FlowNode_SwitchString.Settings.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.FlowNode_SwitchString.Settings.html",
    "title": "Struct FlowNode_SwitchString.Settings | Ceres Documentation",
    "keywords": "Struct FlowNode_SwitchString.Settings Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax [Serializable] public struct FlowNode_SwitchString.Settings Fields conditions Declaration public string[] conditions Field Value Type Description string[] hasDefault Declaration public bool hasDefault Field Value Type Description bool"
  },
  "api/Ceres.Graph.Flow.Utilities.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.html",
    "title": "Namespace Ceres.Graph.Flow.Utilities | Ceres Documentation",
    "keywords": "Namespace Ceres.Graph.Flow.Utilities Classes CeresExecutableLibrary Executable function library for CeresAPI DataDrivenExecutableLibrary Executable function library for Chris.DataDriven ExecutableFunctionLibrary Derived from this class to add custom static functions ExecutableFunctionRegistry Helper class for query executable functions FlowNode_Branch Branch will route the execution flow depending on the value of the condition input. FlowNode_CastT<TFrom, TTo> Casting a value from type to type . FlowNode_DebugLog Logs message to the Unity Console FlowNode_DebugLogString Logs string message to the Unity Console. FlowNode_EqualsT<T> FlowNode_ExecuteEvent Execute an ExecutionEvent FlowNode_ExecuteFunction Execute function in flow FlowNode_ExecuteFunctionReturn FlowNode_ExecuteFunctionReturn<TTarget> FlowNode_ExecuteFunctionT<TTarget> FlowNode_ExecuteFunctionTReturn<TTarget, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TR> FlowNode_ExecuteFunctionTReturn<TTarget, TP1, TP2, TP3, TP4, TP5, TP6, TR> FlowNode_ExecuteFunctionTVoid<TTarget> FlowNode_ExecuteFunctionTVoid<TTarget, TP1> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5> FlowNode_ExecuteFunctionTVoid<TTarget, TP1, TP2, TP3, TP4, TP5, TP6> FlowNode_ExecuteFunctionUber FlowNode_ExecuteFunctionVoid FlowNode_ExecuteFunctionVoid<TTarget> FlowNode_ForEachLoop FlowNode_GetArrayElementT<T> Retrieve an element from an array at a given index. FlowNode_InstantiateT<TObject> Clones the object original and returns the clone. FlowNode_MakeArray FlowNode_MakeArrayT<T> Make an array of type FlowNode_ObservableSubscribeT<T> FlowNode_Sequence Execute a series of output nodes sequentially, forwarding the execution flow to each output port in the defined sequence. FlowNode_SoftAssetReferenceLoadAssetAsync FlowNode_SoftAssetReferenceTLoadAssetAsync<TObject> FlowNode_SubscribeEventExecutionT<TEventType> Subscribe to with an execution of FlowNode_SubscribeGlobalEventExecutionT<TEventType> Subscribe to with an execution of FlowNode_SwitchEnum FlowNode_SwitchEnumT<TEnum> Route execution to one of several output ports based on the value of an enum type, offering a dynamic branching mechanism in execution flow. FlowNode_SwitchString MathExecutableLibrary Executable function library for basic math operations ResourceExecutableLibrary Executable function library for Chris.Resource RxExecutableLibrary Executable function library for R3 SchedulerExecutableLibrary Executable function library for Chris.Schedulers TextExecutableLibrary Executable function library for texts UnityExecutableLibrary Executable function library for Unity built-in types Structs FlowNode_SwitchString.Settings"
  },
  "api/Ceres.Graph.Flow.Utilities.MathExecutableLibrary.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.MathExecutableLibrary.html",
    "title": "Class MathExecutableLibrary | Ceres Documentation",
    "keywords": "Class MathExecutableLibrary Executable function library for basic math operations Inheritance object ExecutableFunctionLibrary MathExecutableLibrary Inherited Members ExecutableFunctionLibrary.CollectExecutableFunctions() ExecutableFunctionLibrary.RegisterExecutableFunction<TLibrary>(string, int, void*) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public class MathExecutableLibrary : ExecutableFunctionLibrary Methods Flow_BoolAnd(bool, bool) Declaration public static bool Flow_BoolAnd(bool value1, bool value2) Parameters Type Name Description bool value1 bool value2 Returns Type Description bool Flow_BoolInvert(bool) Declaration public static bool Flow_BoolInvert(bool boolValue) Parameters Type Name Description bool boolValue Returns Type Description bool Flow_BoolOr(bool, bool) Declaration public static bool Flow_BoolOr(bool value1, bool value2) Parameters Type Name Description bool value1 bool value2 Returns Type Description bool Flow_FloatAdd(float, float) Declaration public static float Flow_FloatAdd(float value1, float value2) Parameters Type Name Description float value1 float value2 Returns Type Description float Flow_FloatDivide(float, float) Declaration public static float Flow_FloatDivide(float value1, float value2) Parameters Type Name Description float value1 float value2 Returns Type Description float Flow_FloatExp(float) Declaration public static float Flow_FloatExp(float floatValue) Parameters Type Name Description float floatValue Returns Type Description float Flow_FloatGreaterThan(float, float) Declaration public static bool Flow_FloatGreaterThan(float value1, float value2) Parameters Type Name Description float value1 float value2 Returns Type Description bool Flow_FloatGreaterThanOrEqualTo(float, float) Declaration public static bool Flow_FloatGreaterThanOrEqualTo(float value1, float value2) Parameters Type Name Description float value1 float value2 Returns Type Description bool Flow_FloatLessThan(float, float) Declaration public static bool Flow_FloatLessThan(float value1, float value2) Parameters Type Name Description float value1 float value2 Returns Type Description bool Flow_FloatLessThanOrEqualTo(float, float) Declaration public static bool Flow_FloatLessThanOrEqualTo(float value1, float value2) Parameters Type Name Description float value1 float value2 Returns Type Description bool Flow_FloatModulo(float, float) Declaration public static float Flow_FloatModulo(float value1, float value2) Parameters Type Name Description float value1 float value2 Returns Type Description float Flow_FloatMultiply(float, float) Declaration public static float Flow_FloatMultiply(float value1, float value2) Parameters Type Name Description float value1 float value2 Returns Type Description float Flow_FloatPow(float, float) Declaration public static float Flow_FloatPow(float value1, float value2) Parameters Type Name Description float value1 float value2 Returns Type Description float Flow_FloatSqrt(float) Declaration public static float Flow_FloatSqrt(float floatValue) Parameters Type Name Description float floatValue Returns Type Description float Flow_FloatSubtract(float, float) Declaration public static float Flow_FloatSubtract(float value1, float value2) Parameters Type Name Description float value1 float value2 Returns Type Description float Flow_FloatToInt(float) Declaration public static int Flow_FloatToInt(float floatValue) Parameters Type Name Description float floatValue Returns Type Description int Flow_IntAdd(int, int) Declaration public static int Flow_IntAdd(int value1, int value2) Parameters Type Name Description int value1 int value2 Returns Type Description int Flow_IntDivide(int, int) Declaration public static int Flow_IntDivide(int value1, int value2) Parameters Type Name Description int value1 int value2 Returns Type Description int Flow_IntGreaterThan(int, int) Declaration public static bool Flow_IntGreaterThan(int value1, int value2) Parameters Type Name Description int value1 int value2 Returns Type Description bool Flow_IntGreaterThanOrEqualTo(int, int) Declaration public static bool Flow_IntGreaterThanOrEqualTo(int value1, int value2) Parameters Type Name Description int value1 int value2 Returns Type Description bool Flow_IntLessThan(int, int) Declaration public static bool Flow_IntLessThan(int value1, int value2) Parameters Type Name Description int value1 int value2 Returns Type Description bool Flow_IntLessThanOrEqualTo(int, int) Declaration public static bool Flow_IntLessThanOrEqualTo(int value1, int value2) Parameters Type Name Description int value1 int value2 Returns Type Description bool Flow_IntModulo(int, int) Declaration public static int Flow_IntModulo(int value1, int value2) Parameters Type Name Description int value1 int value2 Returns Type Description int Flow_IntMultiply(int, int) Declaration public static int Flow_IntMultiply(int value1, int value2) Parameters Type Name Description int value1 int value2 Returns Type Description int Flow_IntSubtract(int, int) Declaration public static int Flow_IntSubtract(int value1, int value2) Parameters Type Name Description int value1 int value2 Returns Type Description int Flow_IntToFloat(int) Declaration public static float Flow_IntToFloat(int intValue) Parameters Type Name Description int intValue Returns Type Description float"
  },
  "api/Ceres.Graph.Flow.Utilities.ResourceExecutableLibrary.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.ResourceExecutableLibrary.html",
    "title": "Class ResourceExecutableLibrary | Ceres Documentation",
    "keywords": "Class ResourceExecutableLibrary Executable function library for Chris.Resource Inheritance object ExecutableFunctionLibrary ResourceExecutableLibrary Inherited Members ExecutableFunctionLibrary.CollectExecutableFunctions() ExecutableFunctionLibrary.RegisterExecutableFunction<TLibrary>(string, int, void*) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public class ResourceExecutableLibrary : ExecutableFunctionLibrary Methods Flow_InstantiateAsync(string, Transform, EventDelegate<GameObject>) Declaration public static void Flow_InstantiateAsync(string address, Transform parent, EventDelegate<GameObject> onComplete) Parameters Type Name Description string address Transform parent EventDelegate<GameObject> onComplete Flow_InstantiateAsync(string, Transform) Declaration public static GameObject Flow_InstantiateAsync(string address, Transform parent) Parameters Type Name Description string address Transform parent Returns Type Description GameObject Flow_LoadAssetAsync(string, EventDelegate<UObject>) Declaration public static void Flow_LoadAssetAsync(string address, EventDelegate<UObject> onComplete) Parameters Type Name Description string address EventDelegate<UObject> onComplete Flow_LoadAssetSynchronous(string) Declaration public static UObject Flow_LoadAssetSynchronous(string address) Parameters Type Name Description string address Returns Type Description UObject"
  },
  "api/Ceres.Graph.Flow.Utilities.RxExecutableLibrary.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.RxExecutableLibrary.html",
    "title": "Class RxExecutableLibrary | Ceres Documentation",
    "keywords": "Class RxExecutableLibrary Executable function library for R3 Inheritance object ExecutableFunctionLibrary RxExecutableLibrary Inherited Members ExecutableFunctionLibrary.CollectExecutableFunctions() ExecutableFunctionLibrary.RegisterExecutableFunction<TLibrary>(string, int, void*) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public class RxExecutableLibrary : ExecutableFunctionLibrary Methods Flow_DisposableCreate(EventDelegate) Declaration public static IDisposable Flow_DisposableCreate(EventDelegate onDispose) Parameters Type Name Description EventDelegate onDispose Returns Type Description System.IDisposable Flow_IDisposableAddToComponent(IDisposable, Component) Declaration public static void Flow_IDisposableAddToComponent(IDisposable disposable, Component component) Parameters Type Name Description System.IDisposable disposable Component component Flow_IDisposableAddToGameObject(IDisposable, GameObject) Declaration public static void Flow_IDisposableAddToGameObject(IDisposable disposable, GameObject gameObject) Parameters Type Name Description System.IDisposable disposable GameObject gameObject Flow_IDisposableAddToIDisposableUnregister(IDisposable, IDisposableUnregister) Declaration public static void Flow_IDisposableAddToIDisposableUnregister(IDisposable disposable, IDisposableUnregister disposableUnregister) Parameters Type Name Description System.IDisposable disposable IDisposableUnregister disposableUnregister Flow_IDisposableDispose(IDisposable) Declaration public static void Flow_IDisposableDispose(IDisposable disposable) Parameters Type Name Description System.IDisposable disposable"
  },
  "api/Ceres.Graph.Flow.Utilities.SchedulerExecutableLibrary.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.SchedulerExecutableLibrary.html",
    "title": "Class SchedulerExecutableLibrary | Ceres Documentation",
    "keywords": "Class SchedulerExecutableLibrary Executable function library for Chris.Schedulers Inheritance object ExecutableFunctionLibrary SchedulerExecutableLibrary Inherited Members ExecutableFunctionLibrary.CollectExecutableFunctions() ExecutableFunctionLibrary.RegisterExecutableFunction<TLibrary>(string, int, void*) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public class SchedulerExecutableLibrary : ExecutableFunctionLibrary Methods Flow_SchedulerCancel(SchedulerHandle) Declaration public static void Flow_SchedulerCancel(SchedulerHandle handle) Parameters Type Name Description SchedulerHandle handle Flow_SchedulerDelay(float, EventDelegate, EventDelegate<float>, TickFrame, bool, bool) Declaration public static SchedulerHandle Flow_SchedulerDelay(float delaySeconds, EventDelegate onComplete, EventDelegate<float> onUpdate, TickFrame tickFrame, bool isLooped, bool ignoreTimeScale) Parameters Type Name Description float delaySeconds EventDelegate onComplete EventDelegate<float> onUpdate TickFrame tickFrame bool isLooped bool ignoreTimeScale Returns Type Description SchedulerHandle Flow_SchedulerWaitFrame(int, EventDelegate, EventDelegate<int>, TickFrame, bool) Declaration public static SchedulerHandle Flow_SchedulerWaitFrame(int frame, EventDelegate onComplete, EventDelegate<int> onUpdate, TickFrame tickFrame, bool isLooped) Parameters Type Name Description int frame EventDelegate onComplete EventDelegate<int> onUpdate TickFrame tickFrame bool isLooped Returns Type Description SchedulerHandle"
  },
  "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_CastT_Template.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_CastT_Template.html",
    "title": "Class FlowNode_CastT_Template | Ceres Documentation",
    "keywords": "Class FlowNode_CastT_Template Inheritance object GenericNodeTemplate FlowNode_CastT_Template Implements IGenericNodeTemplate Inherited Members GenericNodeTemplate.CanFilterPort(Type) GenericNodeTemplate.GetGenericNodeEntryName(string, Type) GenericNodeTemplate.GetGenericNodeName(string, Type[]) GenericNodeTemplate.GetTargetName(Type[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities.Templates Assembly: cs.temp.dll.dll Syntax public class FlowNode_CastT_Template : GenericNodeTemplate, IGenericNodeTemplate Methods GetAvailableArguments(Type) Declaration public override Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetAvailableArguments(Type) GetGenericArguments(Type, Type) Declaration public override Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType System.Type selectArgumentType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetGenericArguments(Type, Type) GetGenericNodeBaseName(string, Type[]) Declaration protected override string GetGenericNodeBaseName(string label, Type[] argumentTypes) Parameters Type Name Description string label System.Type[] argumentTypes Returns Type Description string Overrides GenericNodeTemplate.GetGenericNodeBaseName(string, Type[]) RequirePort() Declaration public override bool RequirePort() Returns Type Description bool Overrides GenericNodeTemplate.RequirePort() Implements IGenericNodeTemplate"
  },
  "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_EqualsT_Template.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_EqualsT_Template.html",
    "title": "Class FlowNode_EqualsT_Template | Ceres Documentation",
    "keywords": "Class FlowNode_EqualsT_Template Inheritance object GenericNodeTemplate FlowNode_EqualsT_Template Implements IGenericNodeTemplate Inherited Members GenericNodeTemplate.CanFilterPort(Type) GenericNodeTemplate.GetGenericNodeName(string, Type[]) GenericNodeTemplate.GetTargetName(Type[]) GenericNodeTemplate.GetGenericNodeBaseName(string, Type[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities.Templates Assembly: cs.temp.dll.dll Syntax public class FlowNode_EqualsT_Template : GenericNodeTemplate, IGenericNodeTemplate Methods GetAvailableArguments(Type) Declaration public override Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetAvailableArguments(Type) GetGenericArguments(Type, Type) Declaration public override Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType System.Type selectArgumentType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetGenericArguments(Type, Type) GetGenericNodeEntryName(string, Type) Declaration public override string GetGenericNodeEntryName(string label, Type selectArgumentType) Parameters Type Name Description string label System.Type selectArgumentType Returns Type Description string Overrides GenericNodeTemplate.GetGenericNodeEntryName(string, Type) RequirePort() Declaration public override bool RequirePort() Returns Type Description bool Overrides GenericNodeTemplate.RequirePort() Implements IGenericNodeTemplate"
  },
  "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_GetArrayElementT_Template.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_GetArrayElementT_Template.html",
    "title": "Class FlowNode_GetArrayElementT_Template | Ceres Documentation",
    "keywords": "Class FlowNode_GetArrayElementT_Template Inheritance object GenericNodeTemplate FlowNode_GetArrayElementT_Template Implements IGenericNodeTemplate Inherited Members GenericNodeTemplate.GetGenericNodeEntryName(string, Type) GenericNodeTemplate.GetGenericNodeName(string, Type[]) GenericNodeTemplate.GetTargetName(Type[]) GenericNodeTemplate.GetGenericNodeBaseName(string, Type[]) GenericNodeTemplate.RequirePort() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities.Templates Assembly: cs.temp.dll.dll Syntax public class FlowNode_GetArrayElementT_Template : GenericNodeTemplate, IGenericNodeTemplate Methods CanFilterPort(Type) Declaration public override bool CanFilterPort(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description bool Overrides GenericNodeTemplate.CanFilterPort(Type) GetAvailableArguments(Type) Declaration public override Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetAvailableArguments(Type) GetGenericArguments(Type, Type) Declaration public override Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType System.Type selectArgumentType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetGenericArguments(Type, Type) Implements IGenericNodeTemplate"
  },
  "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_InstantiateT_Template.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_InstantiateT_Template.html",
    "title": "Class FlowNode_InstantiateT_Template | Ceres Documentation",
    "keywords": "Class FlowNode_InstantiateT_Template Inheritance object GenericNodeTemplate FlowNode_InstantiateT_Template Implements IGenericNodeTemplate Inherited Members GenericNodeTemplate.GetGenericNodeEntryName(string, Type) GenericNodeTemplate.GetGenericNodeName(string, Type[]) GenericNodeTemplate.GetTargetName(Type[]) GenericNodeTemplate.GetGenericNodeBaseName(string, Type[]) GenericNodeTemplate.RequirePort() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities.Templates Assembly: cs.temp.dll.dll Syntax public class FlowNode_InstantiateT_Template : GenericNodeTemplate, IGenericNodeTemplate Methods CanFilterPort(Type) Declaration public override bool CanFilterPort(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description bool Overrides GenericNodeTemplate.CanFilterPort(Type) GetAvailableArguments(Type) Declaration public override Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetAvailableArguments(Type) GetGenericArguments(Type, Type) Declaration public override Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType System.Type selectArgumentType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetGenericArguments(Type, Type) Implements IGenericNodeTemplate"
  },
  "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_MakeArrayT_Template.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_MakeArrayT_Template.html",
    "title": "Class FlowNode_MakeArrayT_Template | Ceres Documentation",
    "keywords": "Class FlowNode_MakeArrayT_Template Inheritance object GenericNodeTemplate FlowNode_MakeArrayT_Template Implements IGenericNodeTemplate Inherited Members GenericNodeTemplate.GetGenericNodeEntryName(string, Type) GenericNodeTemplate.GetGenericNodeName(string, Type[]) GenericNodeTemplate.GetTargetName(Type[]) GenericNodeTemplate.GetGenericNodeBaseName(string, Type[]) GenericNodeTemplate.RequirePort() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities.Templates Assembly: cs.temp.dll.dll Syntax public class FlowNode_MakeArrayT_Template : GenericNodeTemplate, IGenericNodeTemplate Methods CanFilterPort(Type) Declaration public override bool CanFilterPort(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description bool Overrides GenericNodeTemplate.CanFilterPort(Type) GetAvailableArguments(Type) Declaration public override Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetAvailableArguments(Type) GetGenericArguments(Type, Type) Declaration public override Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType System.Type selectArgumentType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetGenericArguments(Type, Type) Implements IGenericNodeTemplate"
  },
  "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_ObservableSubscribeT_Template.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_ObservableSubscribeT_Template.html",
    "title": "Class FlowNode_ObservableSubscribeT_Template | Ceres Documentation",
    "keywords": "Class FlowNode_ObservableSubscribeT_Template Inheritance object GenericNodeTemplate FlowNode_ObservableSubscribeT_Template Implements IGenericNodeTemplate Inherited Members GenericNodeTemplate.GetGenericNodeEntryName(string, Type) GenericNodeTemplate.GetGenericNodeName(string, Type[]) GenericNodeTemplate.GetGenericNodeBaseName(string, Type[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities.Templates Assembly: cs.temp.dll.dll Syntax public class FlowNode_ObservableSubscribeT_Template : GenericNodeTemplate, IGenericNodeTemplate Methods CanFilterPort(Type) Declaration public override bool CanFilterPort(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description bool Overrides GenericNodeTemplate.CanFilterPort(Type) GetAvailableArguments(Type) Declaration public override Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetAvailableArguments(Type) GetGenericArguments(Type, Type) Declaration public override Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType System.Type selectArgumentType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetGenericArguments(Type, Type) GetTargetName(Type[]) Declaration protected override string GetTargetName(Type[] argumentTypes) Parameters Type Name Description System.Type[] argumentTypes Returns Type Description string Overrides GenericNodeTemplate.GetTargetName(Type[]) RequirePort() Declaration public override bool RequirePort() Returns Type Description bool Overrides GenericNodeTemplate.RequirePort() Implements IGenericNodeTemplate"
  },
  "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_SoftAssetReferenceTLoadAssetAsync_Template.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_SoftAssetReferenceTLoadAssetAsync_Template.html",
    "title": "Class FlowNode_SoftAssetReferenceTLoadAssetAsync_Template | Ceres Documentation",
    "keywords": "Class FlowNode_SoftAssetReferenceTLoadAssetAsync_Template Inheritance object GenericNodeTemplate FlowNode_SoftAssetReferenceTLoadAssetAsync_Template Implements IGenericNodeTemplate Inherited Members GenericNodeTemplate.GetGenericNodeEntryName(string, Type) GenericNodeTemplate.GetGenericNodeName(string, Type[]) GenericNodeTemplate.GetGenericNodeBaseName(string, Type[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities.Templates Assembly: cs.temp.dll.dll Syntax public class FlowNode_SoftAssetReferenceTLoadAssetAsync_Template : GenericNodeTemplate, IGenericNodeTemplate Methods CanFilterPort(Type) Declaration public override bool CanFilterPort(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description bool Overrides GenericNodeTemplate.CanFilterPort(Type) GetAvailableArguments(Type) Declaration public override Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetAvailableArguments(Type) GetGenericArguments(Type, Type) Declaration public override Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType System.Type selectArgumentType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetGenericArguments(Type, Type) GetTargetName(Type[]) Declaration protected override string GetTargetName(Type[] argumentTypes) Parameters Type Name Description System.Type[] argumentTypes Returns Type Description string Overrides GenericNodeTemplate.GetTargetName(Type[]) RequirePort() Declaration public override bool RequirePort() Returns Type Description bool Overrides GenericNodeTemplate.RequirePort() Implements IGenericNodeTemplate"
  },
  "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_SubscribeEventExecutionT_Template.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_SubscribeEventExecutionT_Template.html",
    "title": "Class FlowNode_SubscribeEventExecutionT_Template | Ceres Documentation",
    "keywords": "Class FlowNode_SubscribeEventExecutionT_Template Inheritance object GenericNodeTemplate FlowNode_SubscribeEventExecutionT_Template FlowNode_SubscribeGlobalEventExecutionT_Template Implements IGenericNodeTemplate Inherited Members GenericNodeTemplate.CanFilterPort(Type) GenericNodeTemplate.GetGenericNodeEntryName(string, Type) GenericNodeTemplate.GetGenericNodeName(string, Type[]) GenericNodeTemplate.GetTargetName(Type[]) GenericNodeTemplate.GetGenericNodeBaseName(string, Type[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities.Templates Assembly: cs.temp.dll.dll Syntax public class FlowNode_SubscribeEventExecutionT_Template : GenericNodeTemplate, IGenericNodeTemplate Methods GetAvailableArguments(Type) Declaration public override Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetAvailableArguments(Type) GetGenericArguments(Type, Type) Declaration public override Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType System.Type selectArgumentType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetGenericArguments(Type, Type) RequirePort() Declaration public override bool RequirePort() Returns Type Description bool Overrides GenericNodeTemplate.RequirePort() Implements IGenericNodeTemplate"
  },
  "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_SubscribeGlobalEventExecutionT_Template.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_SubscribeGlobalEventExecutionT_Template.html",
    "title": "Class FlowNode_SubscribeGlobalEventExecutionT_Template | Ceres Documentation",
    "keywords": "Class FlowNode_SubscribeGlobalEventExecutionT_Template Inheritance object GenericNodeTemplate FlowNode_SubscribeEventExecutionT_Template FlowNode_SubscribeGlobalEventExecutionT_Template Implements IGenericNodeTemplate Inherited Members GenericNodeTemplate.CanFilterPort(Type) GenericNodeTemplate.GetGenericNodeEntryName(string, Type) GenericNodeTemplate.GetGenericNodeName(string, Type[]) GenericNodeTemplate.GetTargetName(Type[]) GenericNodeTemplate.GetGenericNodeBaseName(string, Type[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities.Templates Assembly: cs.temp.dll.dll Syntax public class FlowNode_SubscribeGlobalEventExecutionT_Template : FlowNode_SubscribeEventExecutionT_Template, IGenericNodeTemplate Methods GetAvailableArguments(Type) Declaration public override Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description System.Type[] Overrides FlowNode_SubscribeEventExecutionT_Template.GetAvailableArguments(Type) GetGenericArguments(Type, Type) Declaration public override Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType System.Type selectArgumentType Returns Type Description System.Type[] Overrides FlowNode_SubscribeEventExecutionT_Template.GetGenericArguments(Type, Type) RequirePort() Declaration public override bool RequirePort() Returns Type Description bool Overrides FlowNode_SubscribeEventExecutionT_Template.RequirePort() Implements IGenericNodeTemplate"
  },
  "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_SwitchEnumT_Template.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.Templates.FlowNode_SwitchEnumT_Template.html",
    "title": "Class FlowNode_SwitchEnumT_Template | Ceres Documentation",
    "keywords": "Class FlowNode_SwitchEnumT_Template Inheritance object GenericNodeTemplate FlowNode_SwitchEnumT_Template Implements IGenericNodeTemplate Inherited Members GenericNodeTemplate.GetGenericNodeEntryName(string, Type) GenericNodeTemplate.GetGenericNodeName(string, Type[]) GenericNodeTemplate.GetTargetName(Type[]) GenericNodeTemplate.GetGenericNodeBaseName(string, Type[]) GenericNodeTemplate.RequirePort() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities.Templates Assembly: cs.temp.dll.dll Syntax public class FlowNode_SwitchEnumT_Template : GenericNodeTemplate, IGenericNodeTemplate Methods CanFilterPort(Type) Declaration public override bool CanFilterPort(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description bool Overrides GenericNodeTemplate.CanFilterPort(Type) GetAvailableArguments(Type) Declaration public override Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetAvailableArguments(Type) GetGenericArguments(Type, Type) Declaration public override Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType System.Type selectArgumentType Returns Type Description System.Type[] Overrides GenericNodeTemplate.GetGenericArguments(Type, Type) Implements IGenericNodeTemplate"
  },
  "api/Ceres.Graph.Flow.Utilities.Templates.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.Templates.html",
    "title": "Namespace Ceres.Graph.Flow.Utilities.Templates | Ceres Documentation",
    "keywords": "Namespace Ceres.Graph.Flow.Utilities.Templates Classes FlowNode_CastT_Template FlowNode_EqualsT_Template FlowNode_GetArrayElementT_Template FlowNode_InstantiateT_Template FlowNode_MakeArrayT_Template FlowNode_ObservableSubscribeT_Template FlowNode_SoftAssetReferenceTLoadAssetAsync_Template FlowNode_SubscribeEventExecutionT_Template FlowNode_SubscribeGlobalEventExecutionT_Template FlowNode_SwitchEnumT_Template"
  },
  "api/Ceres.Graph.Flow.Utilities.TextExecutableLibrary.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.TextExecutableLibrary.html",
    "title": "Class TextExecutableLibrary | Ceres Documentation",
    "keywords": "Class TextExecutableLibrary Executable function library for texts Inheritance object ExecutableFunctionLibrary TextExecutableLibrary Inherited Members ExecutableFunctionLibrary.CollectExecutableFunctions() ExecutableFunctionLibrary.RegisterExecutableFunction<TLibrary>(string, int, void*) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public class TextExecutableLibrary : ExecutableFunctionLibrary Methods Flow_StringConcat(string[]) Declaration public static string Flow_StringConcat(string[] values) Parameters Type Name Description string[] values Returns Type Description string Flow_StringFormat(string, object[]) Declaration public static string Flow_StringFormat(string separator, object[] arguments) Parameters Type Name Description string separator object[] arguments Returns Type Description string Flow_StringFormatOneArgument(string, object) Declaration public static string Flow_StringFormatOneArgument(string separator, object argument) Parameters Type Name Description string separator object argument Returns Type Description string Flow_StringFormatThreeArguments(string, object, object, object) Declaration public static string Flow_StringFormatThreeArguments(string separator, object argument0, object argument1, object argument2) Parameters Type Name Description string separator object argument0 object argument1 object argument2 Returns Type Description string Flow_StringFormatTwoArguments(string, object, object) Declaration public static string Flow_StringFormatTwoArguments(string separator, object argument0, object argument1) Parameters Type Name Description string separator object argument0 object argument1 Returns Type Description string Flow_StringHash64(string) Declaration public static ulong Flow_StringHash64(string stringValue) Parameters Type Name Description string stringValue Returns Type Description ulong Flow_StringJoin(string, string[]) Declaration public static string Flow_StringJoin(string separator, string[] values) Parameters Type Name Description string separator string[] values Returns Type Description string Flow_StringReplace(string, string, string) Declaration public static string Flow_StringReplace(string stringValue, string oldValue, string newValue) Parameters Type Name Description string stringValue string oldValue string newValue Returns Type Description string Flow_StringToLower(string) Declaration public static string Flow_StringToLower(string stringValue) Parameters Type Name Description string stringValue Returns Type Description string Flow_StringToUpper(string) Declaration public static string Flow_StringToUpper(string stringValue) Parameters Type Name Description string stringValue Returns Type Description string"
  },
  "api/Ceres.Graph.Flow.Utilities.UnityExecutableLibrary.html": {
    "href": "api/Ceres.Graph.Flow.Utilities.UnityExecutableLibrary.html",
    "title": "Class UnityExecutableLibrary | Ceres Documentation",
    "keywords": "Class UnityExecutableLibrary Executable function library for Unity built-in types Inheritance object ExecutableFunctionLibrary UnityExecutableLibrary Inherited Members ExecutableFunctionLibrary.CollectExecutableFunctions() ExecutableFunctionLibrary.RegisterExecutableFunction<TLibrary>(string, int, void*) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph.Flow.Utilities Assembly: cs.temp.dll.dll Syntax public class UnityExecutableLibrary : ExecutableFunctionLibrary Methods Flow_BehaviourGetIsActiveAndEnabled(Behaviour) Declaration public static bool Flow_BehaviourGetIsActiveAndEnabled(Behaviour behaviour) Parameters Type Name Description Behaviour behaviour Returns Type Description bool Flow_ComponentGetComponent(Component, SerializedType<Component>) Declaration public static Component Flow_ComponentGetComponent(Component component, SerializedType<Component> type) Parameters Type Name Description Component component SerializedType<><Component> type Returns Type Description Component Flow_ComponentGetComponentInChildren(Component, SerializedType<Component>) Declaration public static Component Flow_ComponentGetComponentInChildren(Component component, SerializedType<Component> type) Parameters Type Name Description Component component SerializedType<><Component> type Returns Type Description Component Flow_Destroy(UObject) Declaration public static void Flow_Destroy(UObject uObject) Parameters Type Name Description UObject uObject Flow_FindGameObject(string) Declaration public static GameObject Flow_FindGameObject(string name) Parameters Type Name Description string name Returns Type Description GameObject Flow_FindGameObjectWithTag(string) Declaration public static GameObject Flow_FindGameObjectWithTag(string tag) Parameters Type Name Description string tag Returns Type Description GameObject Flow_FindObjectOfType(SerializedType<UObject>) Declaration public static UObject Flow_FindObjectOfType(SerializedType<UObject> type) Parameters Type Name Description SerializedType<><UObject> type Returns Type Description UObject Flow_GameObjectGetActiveSelf(GameObject) Declaration public static bool Flow_GameObjectGetActiveSelf(GameObject gameObject) Parameters Type Name Description GameObject gameObject Returns Type Description bool Flow_GameObjectGetComponent(GameObject, SerializedType<Component>) Declaration public static Component Flow_GameObjectGetComponent(GameObject gameObject, SerializedType<Component> type) Parameters Type Name Description GameObject gameObject SerializedType<><Component> type Returns Type Description Component Flow_GameObjectGetComponentInChildren(GameObject, SerializedType<Component>) Declaration public static Component Flow_GameObjectGetComponentInChildren(GameObject gameObject, SerializedType<Component> type) Parameters Type Name Description GameObject gameObject SerializedType<><Component> type Returns Type Description Component Flow_GameObjectSetActive(GameObject, bool) Declaration public static void Flow_GameObjectSetActive(GameObject gameObject, bool value) Parameters Type Name Description GameObject gameObject bool value Flow_RandomRange(float, float) Declaration public static float Flow_RandomRange(float minInclusive, float maxInclusive) Parameters Type Name Description float minInclusive float maxInclusive Returns Type Description float Flow_RandomRangeInt(int, int) Declaration public static int Flow_RandomRangeInt(int minInclusive, int maxInclusive) Parameters Type Name Description int minInclusive int maxInclusive Returns Type Description int Flow_TransformFind(Transform, string) Declaration public static Transform Flow_TransformFind(Transform transform, string name) Parameters Type Name Description Transform transform string name Returns Type Description Transform Flow_TransformGetChild(Transform, int) Declaration public static Transform Flow_TransformGetChild(Transform transform, int index) Parameters Type Name Description Transform transform int index Returns Type Description Transform Flow_UObjectIsValid(UObject) Declaration public static bool Flow_UObjectIsValid(UObject uObject) Parameters Type Name Description UObject uObject Returns Type Description bool"
  },
  "api/Ceres.Graph.GameVariableScope.html": {
    "href": "api/Ceres.Graph.GameVariableScope.html",
    "title": "Class GameVariableScope | Ceres Documentation",
    "keywords": "Class GameVariableScope Component contains SharedVariable in game lifetime scope Inheritance object GameVariableScope Implements IVariableScope IVariableSource Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public class GameVariableScope : ScriptableObject, IVariableScope, IVariableSource Properties GlobalVariables Declaration public GlobalVariables GlobalVariables { get; } Property Value Type Description GlobalVariables SharedVariables Declaration public List<SharedVariable> SharedVariables { get; } Property Value Type Description System.Collections.Generic.List<T><SharedVariable> Methods IsCurrentScope() Declaration public bool IsCurrentScope() Returns Type Description bool Implements IVariableScope IVariableSource"
  },
  "api/Ceres.Graph.GenericNodeTemplate.html": {
    "href": "api/Ceres.Graph.GenericNodeTemplate.html",
    "title": "Class GenericNodeTemplate | Ceres Documentation",
    "keywords": "Class GenericNodeTemplate Base class for generic node template, class name should match '{node name}_Template' Inheritance object GenericNodeTemplate FlowNode_CastT_Template FlowNode_EqualsT_Template FlowNode_GetArrayElementT_Template FlowNode_InstantiateT_Template FlowNode_MakeArrayT_Template FlowNode_ObservableSubscribeT_Template FlowNode_SoftAssetReferenceTLoadAssetAsync_Template FlowNode_SubscribeEventExecutionT_Template FlowNode_SwitchEnumT_Template Implements IGenericNodeTemplate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public abstract class GenericNodeTemplate : IGenericNodeTemplate Methods CanFilterPort(Type) Declaration public virtual bool CanFilterPort(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description bool GetAvailableArguments(Type) Declaration public abstract Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Returns Type Description System.Type[] GetGenericArguments(Type, Type) Declaration public abstract Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType System.Type selectArgumentType Returns Type Description System.Type[] GetGenericNodeBaseName(string, Type[]) Declaration protected virtual string GetGenericNodeBaseName(string label, Type[] argumentTypes) Parameters Type Name Description string label System.Type[] argumentTypes Returns Type Description string GetGenericNodeEntryName(string, Type) Declaration public virtual string GetGenericNodeEntryName(string label, Type selectArgumentType) Parameters Type Name Description string label System.Type selectArgumentType Returns Type Description string GetGenericNodeName(string, Type[]) Declaration public virtual string GetGenericNodeName(string label, Type[] argumentTypes) Parameters Type Name Description string label System.Type[] argumentTypes Returns Type Description string GetTargetName(Type[]) Declaration protected virtual string GetTargetName(Type[] argumentTypes) Parameters Type Name Description System.Type[] argumentTypes Returns Type Description string RequirePort() Declaration public virtual bool RequirePort() Returns Type Description bool Implements IGenericNodeTemplate"
  },
  "api/Ceres.Graph.GenericNodeTemplateRegistry.html": {
    "href": "api/Ceres.Graph.GenericNodeTemplateRegistry.html",
    "title": "Class GenericNodeTemplateRegistry | Ceres Documentation",
    "keywords": "Class GenericNodeTemplateRegistry Inheritance object GenericNodeTemplateRegistry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public static class GenericNodeTemplateRegistry Methods GetTemplate(Type) Declaration public static IGenericNodeTemplate GetTemplate(Type nodeType) Parameters Type Name Description System.Type nodeType Returns Type Description IGenericNodeTemplate"
  },
  "api/Ceres.Graph.GlobalVariables.html": {
    "href": "api/Ceres.Graph.GlobalVariables.html",
    "title": "Class GlobalVariables | Ceres Documentation",
    "keywords": "Class GlobalVariables Global variables are variables managed by a variable scope and any graph initialized in this scope will map global variable IsGlobal to it Inheritance object GlobalVariables Implements IVariableSource System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public class GlobalVariables : IVariableSource, IDisposable Constructors GlobalVariables(List<SharedVariable>, IVariableScope) Declaration public GlobalVariables(List<SharedVariable> sharedVariables, IVariableScope parentScope) Parameters Type Name Description System.Collections.Generic.List<T><SharedVariable> sharedVariables IVariableScope parentScope GlobalVariables(List<SharedVariable>) Declaration public GlobalVariables(List<SharedVariable> sharedVariables) Parameters Type Name Description System.Collections.Generic.List<T><SharedVariable> sharedVariables Properties Instance Declaration public static GlobalVariables Instance { get; } Property Value Type Description GlobalVariables SharedVariables Declaration public List<SharedVariable> SharedVariables { get; } Property Value Type Description System.Collections.Generic.List<T><SharedVariable> Methods Dispose() Declaration public void Dispose() Implements IVariableSource System.IDisposable"
  },
  "api/Ceres.Graph.html": {
    "href": "api/Ceres.Graph.html",
    "title": "Namespace Ceres.Graph | Ceres Documentation",
    "keywords": "Namespace Ceres.Graph Classes AdapterPort<TIn, TOut> APIUpdateConfig BlackBoard A medium for centralized storage and exchange of graph data CeresGraph CeresGraphCompiler Ceres graph compiler CeresGraphContainerExtensions CeresGraphData Metadata for CeresGraph CeresNode Base class for ceres graph node CeresNodeData Metadata for CeresNode CeresPort Base class for ceres graph port CeresPort.PortCompatibleStructure CeresPort<TValue> Generic port for any value worked as linked list at runtime CeresPortData Metadata for CeresPort CeresSubGraphData SubGraph metadata CeresSubGraphData<TGraphData> SubGraph metadata of > CeresSubGraphSlot SubGraph container for CeresGraph GameVariableScope Component contains SharedVariable in game lifetime scope GenericNodeTemplate Base class for generic node template, class name should match '{node name}_Template' GenericNodeTemplateRegistry GlobalVariables Global variables are variables managed by a variable scope and any graph initialized in this scope will map global variable IsGlobal to it LinkedGraphData Linked graph data for nodes implement ILinkedNode LinkedGraphData.Edge NodeGroup NodePort Port for providing weak reference to any node in graph scope ObserveProxyVariable Proxy variable to observe value change ObserveProxyVariable<T> PortArrayNodeReflection PortArrayNodeReflection<TNode> PortConnectionData SceneVariableScope Component contains SharedVariable in scene lifetime scope SharedBool SharedDouble SharedFloat SharedInt SharedObject Shared variable for any object SharedString SharedUObject SharedUObject<TObject> SharedVariable Variable can be shared between behaviors in behavior tree SharedVariable<T> SharedVariableData Metadata for SharedVariable SharedVariableExtension SharedVector2 SharedVector2Int SharedVector3 SharedVector3Int Structs APIUpdateConfig.ConfigAutoScope CeresGraphIdentifier Identifier for ICeresGraphContainer instance CeresNode.Enumerator NodeReference Ref to a node of graph Interfaces ICeresGraphCompilationContext Ceres graph compilation context ICeresGraphContainer Interface for containing CeresGraph data IGenericNodeTemplate Interface for generic node template ILinkedNode Interface for iterate linked node, useful when your graph is based on a linked list which is often used in a forward execution mode like behavior tree IPort IPort<TValue> IPortArrayNode Interface for node has port array that can be resized IReadOnlyLinkedNode Interface for iterate read-only linked node IReadOnlyPortArrayNode Interface for node has port array IRuntimeCompiledNode Interface for node need runtime compilation IVariable<T> Interface for variables IVariableScope Global variables scope IVariableSource Shared variables owner Enums ExecutionPath Define how to execute node"
  },
  "api/Ceres.Graph.ICeresGraphCompilationContext.html": {
    "href": "api/Ceres.Graph.ICeresGraphCompilationContext.html",
    "title": "Interface ICeresGraphCompilationContext | Ceres Documentation",
    "keywords": "Interface ICeresGraphCompilationContext Ceres graph compilation context Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface ICeresGraphCompilationContext Methods PostCompileGraph(CeresGraph) Declaration void PostCompileGraph(CeresGraph source) Parameters Type Name Description CeresGraph source PreCompileGraph(CeresGraph) Declaration void PreCompileGraph(CeresGraph source) Parameters Type Name Description CeresGraph source"
  },
  "api/Ceres.Graph.ICeresGraphContainer.html": {
    "href": "api/Ceres.Graph.ICeresGraphContainer.html",
    "title": "Interface ICeresGraphContainer | Ceres Documentation",
    "keywords": "Interface ICeresGraphContainer Interface for containing CeresGraph data Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface ICeresGraphContainer Properties Object Container bound Declaration UObject Object { get; } Property Value Type Description UObject Remarks Prefer use GameObject as container key since component is not persistent Methods SetGraphData(CeresGraphData) Set graph persistent data Declaration void SetGraphData(CeresGraphData graphData) Parameters Type Name Description CeresGraphData graphData"
  },
  "api/Ceres.Graph.IGenericNodeTemplate.html": {
    "href": "api/Ceres.Graph.IGenericNodeTemplate.html",
    "title": "Interface IGenericNodeTemplate | Ceres Documentation",
    "keywords": "Interface IGenericNodeTemplate Interface for generic node template Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface IGenericNodeTemplate Methods CanFilterPort(Type) Whether input port value type is allowed for this template Declaration bool CanFilterPort(Type portValueType) Parameters Type Name Description System.Type portValueType Port value type, null if no port dropped Returns Type Description bool GetAvailableArguments(Type) Get available argument types based on port value type Declaration Type[] GetAvailableArguments(Type portValueType) Parameters Type Name Description System.Type portValueType Port value type, null if no port dropped Returns Type Description System.Type[] GetGenericArguments(Type, Type) Get arguments to construct generic node type Declaration Type[] GetGenericArguments(Type portValueType, Type selectArgumentType) Parameters Type Name Description System.Type portValueType Port value type, null if no port dropped System.Type selectArgumentType Returns Type Description System.Type[] GetGenericNodeEntryName(string, Type) Make generic node view editor name Declaration string GetGenericNodeEntryName(string label, Type selectArgumentType) Parameters Type Name Description string label System.Type selectArgumentType Returns Type Description string GetGenericNodeName(string, Type[]) Make generic node view editor name Declaration string GetGenericNodeName(string label, Type[] argumentTypes) Parameters Type Name Description string label System.Type[] argumentTypes Returns Type Description string RequirePort() Whether this template require to know port value type Declaration bool RequirePort() Returns Type Description bool"
  },
  "api/Ceres.Graph.ILinkedNode.html": {
    "href": "api/Ceres.Graph.ILinkedNode.html",
    "title": "Interface ILinkedNode | Ceres Documentation",
    "keywords": "Interface ILinkedNode Interface for iterate linked node, useful when your graph is based on a linked list which is often used in a forward execution mode like behavior tree Inherited Members IReadOnlyLinkedNode.GetChildAt(int) IReadOnlyLinkedNode.GetChildrenCount() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface ILinkedNode : IReadOnlyLinkedNode Methods AddChild(CeresNode) Add new child node Declaration void AddChild(CeresNode node) Parameters Type Name Description CeresNode node ClearChildren() Clear all child nodes Declaration void ClearChildren()"
  },
  "api/Ceres.Graph.IPort-1.html": {
    "href": "api/Ceres.Graph.IPort-1.html",
    "title": "Interface IPort<TValue> | Ceres Documentation",
    "keywords": "Interface IPort<TValue> Inherited Members IPort.GetValue() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface IPort<out TValue> : IPort Type Parameters Name Description TValue Properties Value Declaration TValue Value { get; } Property Value Type Description TValue"
  },
  "api/Ceres.Graph.IPort.html": {
    "href": "api/Ceres.Graph.IPort.html",
    "title": "Interface IPort | Ceres Documentation",
    "keywords": "Interface IPort Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface IPort Methods GetValue() Declaration object GetValue() Returns Type Description object"
  },
  "api/Ceres.Graph.IPortArrayNode.html": {
    "href": "api/Ceres.Graph.IPortArrayNode.html",
    "title": "Interface IPortArrayNode | Ceres Documentation",
    "keywords": "Interface IPortArrayNode Interface for node has port array that can be resized Inherited Members IReadOnlyPortArrayNode.GetPortArrayLength() IReadOnlyPortArrayNode.GetPortArrayFieldName() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface IPortArrayNode : IReadOnlyPortArrayNode Methods SetPortArrayLength(int) Declaration void SetPortArrayLength(int newLength) Parameters Type Name Description int newLength"
  },
  "api/Ceres.Graph.IReadOnlyLinkedNode.html": {
    "href": "api/Ceres.Graph.IReadOnlyLinkedNode.html",
    "title": "Interface IReadOnlyLinkedNode | Ceres Documentation",
    "keywords": "Interface IReadOnlyLinkedNode Interface for iterate read-only linked node Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface IReadOnlyLinkedNode Methods GetChildAt(int) Get child not at index Declaration CeresNode GetChildAt(int index) Parameters Type Name Description int index Returns Type Description CeresNode GetChildrenCount() Get child node count Declaration int GetChildrenCount() Returns Type Description int"
  },
  "api/Ceres.Graph.IReadOnlyPortArrayNode.html": {
    "href": "api/Ceres.Graph.IReadOnlyPortArrayNode.html",
    "title": "Interface IReadOnlyPortArrayNode | Ceres Documentation",
    "keywords": "Interface IReadOnlyPortArrayNode Interface for node has port array Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface IReadOnlyPortArrayNode Methods GetPortArrayFieldName() Declaration string GetPortArrayFieldName() Returns Type Description string GetPortArrayLength() Declaration int GetPortArrayLength() Returns Type Description int"
  },
  "api/Ceres.Graph.IRuntimeCompiledNode.html": {
    "href": "api/Ceres.Graph.IRuntimeCompiledNode.html",
    "title": "Interface IRuntimeCompiledNode | Ceres Documentation",
    "keywords": "Interface IRuntimeCompiledNode Interface for node need runtime compilation Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface IRuntimeCompiledNode Methods Compile(CeresGraphCompiler) Declaration void Compile(CeresGraphCompiler compiler) Parameters Type Name Description CeresGraphCompiler compiler"
  },
  "api/Ceres.Graph.IVariable-1.html": {
    "href": "api/Ceres.Graph.IVariable-1.html",
    "title": "Interface IVariable<T> | Ceres Documentation",
    "keywords": "Interface IVariable<T> Interface for variables Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface IVariable<T> Type Parameters Name Description T Properties Value Declaration T Value { get; set; } Property Value Type Description T"
  },
  "api/Ceres.Graph.IVariableScope.html": {
    "href": "api/Ceres.Graph.IVariableScope.html",
    "title": "Interface IVariableScope | Ceres Documentation",
    "keywords": "Interface IVariableScope Global variables scope Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface IVariableScope Properties GlobalVariables Scope based global variables Declaration GlobalVariables GlobalVariables { get; } Property Value Type Description GlobalVariables"
  },
  "api/Ceres.Graph.IVariableSource.html": {
    "href": "api/Ceres.Graph.IVariableSource.html",
    "title": "Interface IVariableSource | Ceres Documentation",
    "keywords": "Interface IVariableSource Shared variables owner Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public interface IVariableSource Properties SharedVariables Declaration List<SharedVariable> SharedVariables { get; } Property Value Type Description System.Collections.Generic.List<T><SharedVariable>"
  },
  "api/Ceres.Graph.LinkedGraphData.Edge.html": {
    "href": "api/Ceres.Graph.LinkedGraphData.Edge.html",
    "title": "Class LinkedGraphData.Edge | Ceres Documentation",
    "keywords": "Class LinkedGraphData.Edge Inheritance object LinkedGraphData.Edge Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class LinkedGraphData.Edge Fields children Declaration public int[] children Field Value Type Description int[]"
  },
  "api/Ceres.Graph.LinkedGraphData.html": {
    "href": "api/Ceres.Graph.LinkedGraphData.html",
    "title": "Class LinkedGraphData | Ceres Documentation",
    "keywords": "Class LinkedGraphData Linked graph data for nodes implement ILinkedNode Inheritance object CeresGraphData LinkedGraphData Inherited Members CeresGraphData.variableData CeresGraphData.nodeData CeresGraphData.nodeGroups CeresGraphData.RestoreNode(int, CeresNode[]) CeresGraphData.RestoreVariable(int, SharedVariable[]) CeresGraphData.RedirectNodeType(ManagedReferenceType) CeresGraphData.RedirectVariableType(ManagedReferenceType) CeresGraphData.RedirectSerializedType(string) CeresGraphData.ResolveSerializedType(string) CeresGraphData.Clone() CeresGraphData.CloneT<T>() CeresGraphData.GetFallbackNode(CeresNodeData, int) CeresGraphData.PreSerialization() CeresGraphData.ToJson(bool) CeresGraphData.FromJson<T>(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class LinkedGraphData : CeresGraphData Constructors LinkedGraphData() Declaration public LinkedGraphData() LinkedGraphData(CeresGraph) Declaration public LinkedGraphData(CeresGraph graph) Parameters Type Name Description CeresGraph graph Fields edges Declaration public LinkedGraphData.Edge[] edges Field Value Type Description Edge[] Methods BuildGraph(CeresGraph) Declaration public override void BuildGraph(CeresGraph graph) Parameters Type Name Description CeresGraph graph Overrides CeresGraphData.BuildGraph(CeresGraph) ReadFromLinkedNodes(CeresGraph) Read graph data from iterating graph nodes, only worked when node implement ILinkedNode Declaration protected void ReadFromLinkedNodes(CeresGraph graph) Parameters Type Name Description CeresGraph graph"
  },
  "api/Ceres.Graph.NodeGroup.html": {
    "href": "api/Ceres.Graph.NodeGroup.html",
    "title": "Class NodeGroup | Ceres Documentation",
    "keywords": "Class NodeGroup Inheritance object NodeGroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class NodeGroup Fields childNodes Declaration public List<string> childNodes Field Value Type Description System.Collections.Generic.List<T><string> position Declaration public Vector2 position Field Value Type Description Vector2 title Declaration public string title Field Value Type Description string Methods ContainsNode(CeresNode) Declaration public bool ContainsNode(CeresNode ceresNode) Parameters Type Name Description CeresNode ceresNode Returns Type Description bool"
  },
  "api/Ceres.Graph.NodePort.html": {
    "href": "api/Ceres.Graph.NodePort.html",
    "title": "Class NodePort | Ceres Documentation",
    "keywords": "Class NodePort Port for providing weak reference to any node in graph scope Inheritance object CeresPort CeresPort<NodeReference> NodePort Implements System.IDisposable IPort<NodeReference> IPort Inherited Members CeresPort<NodeReference>.defaultValue CeresPort<NodeReference>.Default CeresPort<NodeReference>.DefaultArray CeresPort<NodeReference>.DefaultList CeresPort<NodeReference>.Value CeresPort<NodeReference>.GetValueType() CeresPort<NodeReference>.MakeCompatibleTo<T>(Func<NodeReference, T>) CeresPort<NodeReference>.IsCompatibleTo(Type) CeresPort<NodeReference>.CreateProxyPort(CeresPort<CeresPort>) CeresPort<NodeReference>.Link(CeresPort) CeresPort<NodeReference>.AssignValueGetter(IPort) CeresPort<NodeReference>.SetValue(object) CeresPort<NodeReference>.GetValue() CeresPort<NodeReference>.Dispose() CeresPort.AdaptedGetter CeresPort.AssignValueType<T>() CeresPort.AssignValueType(Type) CeresPort.GetAssignedPortValueTypes() CeresPort.GetCompatibleStructure(Type) CeresPort.IsCompatibleTo(Type, Type) CeresPort.GetCompatibleTypes(Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public sealed class NodePort : CeresPort<NodeReference>, IDisposable, IPort<NodeReference>, IPort Constructors NodePort() Declaration public NodePort() NodePort(NodeReference) Declaration public NodePort(NodeReference value) Parameters Type Name Description NodeReference value Methods Get() Get CeresNode if exist Declaration public CeresNode Get() Returns Type Description CeresNode GetT<T>() Get node if exist Declaration public T GetT<T>() where T : CeresNode Returns Type Description T Type Parameters Name Description T Implements System.IDisposable IPort<TValue> IPort"
  },
  "api/Ceres.Graph.NodeReference.html": {
    "href": "api/Ceres.Graph.NodeReference.html",
    "title": "Struct NodeReference | Ceres Documentation",
    "keywords": "Struct NodeReference Ref to a node of graph Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() System.ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public struct NodeReference Constructors NodeReference(string) Declaration public NodeReference(string guid) Parameters Type Name Description string guid Fields guid Declaration public string guid Field Value Type Description string Methods Get(CeresGraph) Declaration public CeresNode Get(CeresGraph graph) Parameters Type Name Description CeresGraph graph Returns Type Description CeresNode GetT<T>(CeresGraph) Declaration public T GetT<T>(CeresGraph graph) where T : CeresNode Parameters Type Name Description CeresGraph graph Returns Type Description T Type Parameters Name Description T Operators implicit operator NodeReference(string) Declaration public static implicit operator NodeReference(string guid) Parameters Type Name Description string guid Returns Type Description NodeReference"
  },
  "api/Ceres.Graph.ObserveProxyVariable-1.html": {
    "href": "api/Ceres.Graph.ObserveProxyVariable-1.html",
    "title": "Class ObserveProxyVariable<T> | Ceres Documentation",
    "keywords": "Class ObserveProxyVariable<T> Inheritance object ObserveProxyVariable ObserveProxyVariable<T> Implements System.IDisposable IVariable<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public class ObserveProxyVariable<T> : ObserveProxyVariable, IDisposable, IVariable<T> Type Parameters Name Description T Properties Value Declaration public T Value { get; set; } Property Value Type Description T Methods Dispose() Declaration public override sealed void Dispose() Overrides ObserveProxyVariable.Dispose() Register(Action<object>) Declaration public override void Register(Action<object> onValueChangeCallback) Parameters Type Name Description System.Action<T><object> onValueChangeCallback Overrides ObserveProxyVariable.Register(Action<object>) Events OnValueChange Declaration public event Action<T> OnValueChange Event Type Type Description System.Action<T><T> Implements System.IDisposable IVariable<T>"
  },
  "api/Ceres.Graph.ObserveProxyVariable.html": {
    "href": "api/Ceres.Graph.ObserveProxyVariable.html",
    "title": "Class ObserveProxyVariable | Ceres Documentation",
    "keywords": "Class ObserveProxyVariable Proxy variable to observe value change Inheritance object ObserveProxyVariable ObserveProxyVariable<T> Implements System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public abstract class ObserveProxyVariable : IDisposable Methods Dispose() Declaration public abstract void Dispose() Register(Action<object>) Declaration public abstract void Register(Action<object> onValueChangeCallback) Parameters Type Name Description System.Action<T><object> onValueChangeCallback Implements System.IDisposable"
  },
  "api/Ceres.Graph.PortArrayNodeReflection-1.html": {
    "href": "api/Ceres.Graph.PortArrayNodeReflection-1.html",
    "title": "Class PortArrayNodeReflection<TNode> | Ceres Documentation",
    "keywords": "Class PortArrayNodeReflection<TNode> Inheritance object PortArrayNodeReflection PortArrayNodeReflection<TNode> Inherited Members PortArrayNodeReflection.PortArrayField PortArrayNodeReflection.PortArrayLabel PortArrayNodeReflection.DefaultNode PortArrayNodeReflection.IsResizeable PortArrayNodeReflection.DefaultArrayLength PortArrayNodeReflection.Get(Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public class PortArrayNodeReflection<TNode> : PortArrayNodeReflection where TNode : CeresNode, IReadOnlyPortArrayNode, new() Type Parameters Name Description TNode Methods GetOrCreate() Declaration public static PortArrayNodeReflection<TNode> GetOrCreate() Returns Type Description PortArrayNodeReflection<TNode>"
  },
  "api/Ceres.Graph.PortArrayNodeReflection.html": {
    "href": "api/Ceres.Graph.PortArrayNodeReflection.html",
    "title": "Class PortArrayNodeReflection | Ceres Documentation",
    "keywords": "Class PortArrayNodeReflection Inheritance object PortArrayNodeReflection PortArrayNodeReflection<TNode> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public abstract class PortArrayNodeReflection Properties DefaultArrayLength Declaration public int DefaultArrayLength { get; protected set; } Property Value Type Description int DefaultNode Declaration public IReadOnlyPortArrayNode DefaultNode { get; protected set; } Property Value Type Description IReadOnlyPortArrayNode IsResizeable Declaration public bool IsResizeable { get; protected set; } Property Value Type Description bool PortArrayField Declaration public FieldInfo PortArrayField { get; protected set; } Property Value Type Description FieldInfo PortArrayLabel Declaration public string PortArrayLabel { get; protected set; } Property Value Type Description string Methods Get(Type) Declaration public static PortArrayNodeReflection Get(Type nodeType) Parameters Type Name Description System.Type nodeType Returns Type Description PortArrayNodeReflection"
  },
  "api/Ceres.Graph.PortConnectionData.html": {
    "href": "api/Ceres.Graph.PortConnectionData.html",
    "title": "Class PortConnectionData | Ceres Documentation",
    "keywords": "Class PortConnectionData Inheritance object PortConnectionData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class PortConnectionData Fields nodeId Declaration public string nodeId Field Value Type Description string portId Declaration public string portId Field Value Type Description string portIndex Declaration public int portIndex Field Value Type Description int"
  },
  "api/Ceres.Graph.SceneVariableScope.html": {
    "href": "api/Ceres.Graph.SceneVariableScope.html",
    "title": "Class SceneVariableScope | Ceres Documentation",
    "keywords": "Class SceneVariableScope Component contains SharedVariable in scene lifetime scope Inheritance object SceneVariableScope Implements IVariableScope IVariableSource Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public class SceneVariableScope : MonoBehaviour, IVariableScope, IVariableSource Properties GlobalVariables Declaration public GlobalVariables GlobalVariables { get; } Property Value Type Description GlobalVariables SharedVariables Declaration public List<SharedVariable> SharedVariables { get; } Property Value Type Description System.Collections.Generic.List<T><SharedVariable> Implements IVariableScope IVariableSource"
  },
  "api/Ceres.Graph.SharedBool.html": {
    "href": "api/Ceres.Graph.SharedBool.html",
    "title": "Class SharedBool | Ceres Documentation",
    "keywords": "Class SharedBool Inheritance object SharedVariable SharedVariable<bool> SharedBool Implements System.ICloneable System.IDisposable IVariable<bool> Inherited Members SharedVariable<bool>.Value SharedVariable<bool>.GetValue() SharedVariable<bool>.SetValue(object) SharedVariable<bool>.Getter SharedVariable<bool>.Setter SharedVariable<bool>.Bind(IVariable<bool>) SharedVariable<bool>.Bind(SharedVariable) SharedVariable<bool>.Dispose() SharedVariable<bool>.value SharedVariable<bool>.Observe() SharedVariable<bool>.ObserveT() SharedVariable<bool>.Clone() SharedVariable<bool>.CopyProperty(SharedVariable) SharedVariable<bool>.GetValueType() SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedBool : SharedVariable<bool>, ICloneable, IDisposable, IVariable<bool> Constructors SharedBool() Declaration public SharedBool() SharedBool(bool) Declaration public SharedBool(bool value) Parameters Type Name Description bool value Methods CloneT() Declaration protected override SharedVariable<bool> CloneT() Returns Type Description SharedVariable<bool> Overrides Ceres.Graph.SharedVariable<bool>.CloneT() Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.Graph.SharedDouble.html": {
    "href": "api/Ceres.Graph.SharedDouble.html",
    "title": "Class SharedDouble | Ceres Documentation",
    "keywords": "Class SharedDouble Inheritance object SharedVariable SharedVariable<double> SharedDouble Implements System.ICloneable System.IDisposable IVariable<double> Inherited Members SharedVariable<double>.Value SharedVariable<double>.GetValue() SharedVariable<double>.SetValue(object) SharedVariable<double>.Getter SharedVariable<double>.Setter SharedVariable<double>.Bind(IVariable<double>) SharedVariable<double>.Bind(SharedVariable) SharedVariable<double>.Dispose() SharedVariable<double>.value SharedVariable<double>.Observe() SharedVariable<double>.ObserveT() SharedVariable<double>.Clone() SharedVariable<double>.CopyProperty(SharedVariable) SharedVariable<double>.GetValueType() SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedDouble : SharedVariable<double>, ICloneable, IDisposable, IVariable<double> Constructors SharedDouble() Declaration public SharedDouble() SharedDouble(int) Declaration public SharedDouble(int value) Parameters Type Name Description int value Methods CloneT() Declaration protected override SharedVariable<double> CloneT() Returns Type Description SharedVariable<double> Overrides Ceres.Graph.SharedVariable<double>.CloneT() Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.Graph.SharedFloat.html": {
    "href": "api/Ceres.Graph.SharedFloat.html",
    "title": "Class SharedFloat | Ceres Documentation",
    "keywords": "Class SharedFloat Inheritance object SharedVariable SharedVariable<float> SharedFloat Implements System.ICloneable System.IDisposable IVariable<float> Inherited Members SharedVariable<float>.Value SharedVariable<float>.GetValue() SharedVariable<float>.SetValue(object) SharedVariable<float>.Getter SharedVariable<float>.Setter SharedVariable<float>.Bind(IVariable<float>) SharedVariable<float>.Bind(SharedVariable) SharedVariable<float>.Dispose() SharedVariable<float>.value SharedVariable<float>.Observe() SharedVariable<float>.ObserveT() SharedVariable<float>.Clone() SharedVariable<float>.CopyProperty(SharedVariable) SharedVariable<float>.GetValueType() SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedFloat : SharedVariable<float>, ICloneable, IDisposable, IVariable<float> Constructors SharedFloat() Declaration public SharedFloat() SharedFloat(float) Declaration public SharedFloat(float value) Parameters Type Name Description float value Methods CloneT() Declaration protected override SharedVariable<float> CloneT() Returns Type Description SharedVariable<float> Overrides Ceres.Graph.SharedVariable<float>.CloneT() Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.Graph.SharedInt.html": {
    "href": "api/Ceres.Graph.SharedInt.html",
    "title": "Class SharedInt | Ceres Documentation",
    "keywords": "Class SharedInt Inheritance object SharedVariable SharedVariable<int> SharedInt Implements System.ICloneable System.IDisposable IVariable<int> Inherited Members SharedVariable<int>.Value SharedVariable<int>.GetValue() SharedVariable<int>.SetValue(object) SharedVariable<int>.Getter SharedVariable<int>.Setter SharedVariable<int>.Bind(IVariable<int>) SharedVariable<int>.Bind(SharedVariable) SharedVariable<int>.Dispose() SharedVariable<int>.value SharedVariable<int>.Observe() SharedVariable<int>.ObserveT() SharedVariable<int>.Clone() SharedVariable<int>.CopyProperty(SharedVariable) SharedVariable<int>.GetValueType() SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedInt : SharedVariable<int>, ICloneable, IDisposable, IVariable<int> Constructors SharedInt() Declaration public SharedInt() SharedInt(int) Declaration public SharedInt(int value) Parameters Type Name Description int value Methods CloneT() Declaration protected override SharedVariable<int> CloneT() Returns Type Description SharedVariable<int> Overrides Ceres.Graph.SharedVariable<int>.CloneT() Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.Graph.SharedObject.html": {
    "href": "api/Ceres.Graph.SharedObject.html",
    "title": "Class SharedObject | Ceres Documentation",
    "keywords": "Class SharedObject Shared variable for any object Inheritance object SharedVariable SharedVariable<object> SharedObject Implements System.ICloneable System.IDisposable IVariable<object> ISerializationCallbackReceiver Inherited Members SharedVariable<object>.Value SharedVariable<object>.GetValue() SharedVariable<object>.SetValue(object) SharedVariable<object>.Getter SharedVariable<object>.Setter SharedVariable<object>.Bind(IVariable<object>) SharedVariable<object>.Bind(SharedVariable) SharedVariable<object>.Dispose() SharedVariable<object>.value SharedVariable<object>.Observe() SharedVariable<object>.ObserveT() SharedVariable<object>.Clone() SharedVariable<object>.CopyProperty(SharedVariable) SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedObject : SharedVariable<object>, ICloneable, IDisposable, IVariable<object>, ISerializationCallbackReceiver Constructors SharedObject() Declaration public SharedObject() SharedObject(object) Declaration public SharedObject(object value) Parameters Type Name Description object value Fields serializedObject Declaration public SerializedObjectBase serializedObject Field Value Type Description SerializedObjectBase Methods CloneT() Declaration protected override SharedVariable<object> CloneT() Returns Type Description SharedVariable<object> Overrides Ceres.Graph.SharedVariable<object>.CloneT() GetValueType() Declaration public override Type GetValueType() Returns Type Description System.Type Overrides Ceres.Graph.SharedVariable<object>.GetValueType() OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() Implements System.ICloneable System.IDisposable IVariable<T> ISerializationCallbackReceiver"
  },
  "api/Ceres.Graph.SharedString.html": {
    "href": "api/Ceres.Graph.SharedString.html",
    "title": "Class SharedString | Ceres Documentation",
    "keywords": "Class SharedString Inheritance object SharedVariable SharedVariable<string> SharedString Implements System.ICloneable System.IDisposable IVariable<string> Inherited Members SharedVariable<string>.Value SharedVariable<string>.GetValue() SharedVariable<string>.SetValue(object) SharedVariable<string>.Getter SharedVariable<string>.Setter SharedVariable<string>.Bind(IVariable<string>) SharedVariable<string>.Bind(SharedVariable) SharedVariable<string>.Dispose() SharedVariable<string>.value SharedVariable<string>.Observe() SharedVariable<string>.ObserveT() SharedVariable<string>.Clone() SharedVariable<string>.CopyProperty(SharedVariable) SharedVariable<string>.GetValueType() SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedString : SharedVariable<string>, ICloneable, IDisposable, IVariable<string> Constructors SharedString() Declaration public SharedString() SharedString(string) Declaration public SharedString(string value) Parameters Type Name Description string value Methods CloneT() Declaration protected override SharedVariable<string> CloneT() Returns Type Description SharedVariable<string> Overrides Ceres.Graph.SharedVariable<string>.CloneT() Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.Graph.SharedUObject-1.html": {
    "href": "api/Ceres.Graph.SharedUObject-1.html",
    "title": "Class SharedUObject<TObject> | Ceres Documentation",
    "keywords": "Class SharedUObject<TObject> Inheritance object SharedVariable SharedVariable<TObject> SharedUObject<TObject> Implements System.ICloneable System.IDisposable IVariable<TObject> IVariable<UObject> Inherited Members SharedVariable<TObject>.Value SharedVariable<TObject>.GetValue() SharedVariable<TObject>.SetValue(object) SharedVariable<TObject>.Getter SharedVariable<TObject>.Setter SharedVariable<TObject>.Bind(IVariable<TObject>) SharedVariable<TObject>.Dispose() SharedVariable<TObject>.value SharedVariable<TObject>.Observe() SharedVariable<TObject>.ObserveT() SharedVariable<TObject>.Clone() SharedVariable<TObject>.CopyProperty(SharedVariable) SharedVariable<TObject>.GetValueType() SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedUObject<TObject> : SharedVariable<TObject>, ICloneable, IDisposable, IVariable<TObject>, IVariable<UObject> where TObject : UObject Type Parameters Name Description TObject Constructors SharedUObject() Declaration public SharedUObject() SharedUObject(TObject) Declaration public SharedUObject(TObject value) Parameters Type Name Description TObject value Methods Bind(IVariable<UObject>) Declaration public void Bind(IVariable<UObject> other) Parameters Type Name Description IVariable<UObject> other Bind(SharedVariable) Declaration public override void Bind(SharedVariable other) Parameters Type Name Description SharedVariable other Overrides Ceres.Graph.SharedVariable<TObject>.Bind(Ceres.Graph.SharedVariable) CloneT() Declaration protected override SharedVariable<TObject> CloneT() Returns Type Description SharedVariable<TObject> Overrides Ceres.Graph.SharedVariable<TObject>.CloneT() Explicit Interface Implementations IVariable<UObject>.Value Declaration UObject IVariable<UObject>.Value { get; set; } Returns Type Description UObject Implements System.ICloneable System.IDisposable IVariable<T> IVariable<T>"
  },
  "api/Ceres.Graph.SharedUObject.html": {
    "href": "api/Ceres.Graph.SharedUObject.html",
    "title": "Class SharedUObject | Ceres Documentation",
    "keywords": "Class SharedUObject Inheritance object SharedVariable SharedVariable<UObject> SharedUObject Implements System.ICloneable System.IDisposable IVariable<UObject> Inherited Members SharedVariable<UObject>.Value SharedVariable<UObject>.GetValue() SharedVariable<UObject>.SetValue(object) SharedVariable<UObject>.Getter SharedVariable<UObject>.Setter SharedVariable<UObject>.Bind(IVariable<UObject>) SharedVariable<UObject>.Bind(SharedVariable) SharedVariable<UObject>.Dispose() SharedVariable<UObject>.value SharedVariable<UObject>.Observe() SharedVariable<UObject>.ObserveT() SharedVariable<UObject>.Clone() SharedVariable<UObject>.CopyProperty(SharedVariable) SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedUObject : SharedVariable<UObject>, ICloneable, IDisposable, IVariable<UObject> Constructors SharedUObject() Declaration public SharedUObject() SharedUObject(UObject) Declaration public SharedUObject(UObject value) Parameters Type Name Description UObject value Fields serializedType Constraint UObject type Declaration public SerializedType<UObject> serializedType Field Value Type Description SerializedType<><UObject> Methods CloneT() Declaration protected override SharedVariable<UObject> CloneT() Returns Type Description SharedVariable<UObject> Overrides Ceres.Graph.SharedVariable<UObject>.CloneT() GetValueType() Declaration public override Type GetValueType() Returns Type Description System.Type Overrides Ceres.Graph.SharedVariable<UObject>.GetValueType() Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.Graph.SharedVariable-1.html": {
    "href": "api/Ceres.Graph.SharedVariable-1.html",
    "title": "Class SharedVariable<T> | Ceres Documentation",
    "keywords": "Class SharedVariable<T> Inheritance object SharedVariable SharedVariable<T> LocalFunction SharedBool SharedDouble SharedFloat SharedInt SharedObject SharedString SharedUObject SharedUObject<TObject> SharedVector2 SharedVector2Int SharedVector3 SharedVector3Int Implements System.ICloneable System.IDisposable IVariable<T> Inherited Members SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class SharedVariable<T> : SharedVariable, ICloneable, IDisposable, IVariable<T> Type Parameters Name Description T Fields Getter Declaration protected Func<T> Getter Field Value Type Description System.Func<TResult><T> Setter Declaration protected Action<T> Setter Field Value Type Description System.Action<T><T> value Declaration protected T value Field Value Type Description T Properties Value Declaration public T Value { get; set; } Property Value Type Description T Methods Bind(IVariable<T>) Declaration public void Bind(IVariable<T> other) Parameters Type Name Description IVariable<T> other Bind(SharedVariable) Declaration public override void Bind(SharedVariable other) Parameters Type Name Description SharedVariable other Overrides SharedVariable.Bind(SharedVariable) Clone() Declaration public override sealed SharedVariable Clone() Returns Type Description SharedVariable Overrides SharedVariable.Clone() CloneT() Declaration protected virtual SharedVariable<T> CloneT() Returns Type Description SharedVariable<T> CopyProperty(SharedVariable) Declaration protected void CopyProperty(SharedVariable other) Parameters Type Name Description SharedVariable other Dispose() Declaration public override void Dispose() Overrides SharedVariable.Dispose() GetValue() Declaration public override sealed object GetValue() Returns Type Description object Overrides SharedVariable.GetValue() GetValueType() Declaration public override Type GetValueType() Returns Type Description System.Type Overrides SharedVariable.GetValueType() Observe() Declaration public override ObserveProxyVariable Observe() Returns Type Description ObserveProxyVariable Overrides SharedVariable.Observe() ObserveT() Declaration public ObserveProxyVariable<T> ObserveT() Returns Type Description ObserveProxyVariable<T> SetValue(object) Declaration public override sealed void SetValue(object newValue) Parameters Type Name Description object newValue Overrides SharedVariable.SetValue(object) Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.Graph.SharedVariable.html": {
    "href": "api/Ceres.Graph.SharedVariable.html",
    "title": "Class SharedVariable | Ceres Documentation",
    "keywords": "Class SharedVariable Variable can be shared between behaviors in behavior tree Inheritance object SharedVariable SharedVariable<T> Implements System.ICloneable System.IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public abstract class SharedVariable : ICloneable, IDisposable Properties IsExposed Whether variable is exposed to editor Declaration public bool IsExposed { get; set; } Property Value Type Description bool IsGlobal Whether variable is global Declaration public bool IsGlobal { get; set; } Property Value Type Description bool IsShared Whether variable is shared Declaration public bool IsShared { get; set; } Property Value Type Description bool Name Declaration public string Name { get; set; } Property Value Type Description string Methods Bind(SharedVariable) Bind to other sharedVariable Declaration public abstract void Bind(SharedVariable other) Parameters Type Name Description SharedVariable other Clone() Clone shared variable by deep copy, an option here is to override for preventing using reflection Declaration public virtual SharedVariable Clone() Returns Type Description SharedVariable Dispose() Unbind self Declaration public abstract void Dispose() GetSerializedData() Declaration public virtual SharedVariableData GetSerializedData() Returns Type Description SharedVariableData GetValue() Declaration public abstract object GetValue() Returns Type Description object GetValueType() Declaration public virtual Type GetValueType() Returns Type Description System.Type Observe() Create a observe proxy variable Declaration public abstract ObserveProxyVariable Observe() Returns Type Description ObserveProxyVariable SetValue(object) Declaration public abstract void SetValue(object newValue) Parameters Type Name Description object newValue Explicit Interface Implementations ICloneable.Clone() Declaration object ICloneable.Clone() Returns Type Description object Implements System.ICloneable System.IDisposable"
  },
  "api/Ceres.Graph.SharedVariableData.html": {
    "href": "api/Ceres.Graph.SharedVariableData.html",
    "title": "Class SharedVariableData | Ceres Documentation",
    "keywords": "Class SharedVariableData Metadata for SharedVariable Inheritance object SharedVariableData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedVariableData Fields serializedData Json serialized data of variable properties Declaration public string serializedData Field Value Type Description string variableType Variable type Declaration public ManagedReferenceType variableType Field Value Type Description ManagedReferenceType Methods Deserialize(Type) Deserialize a SharedVariable instance from this data Declaration public SharedVariable Deserialize(Type outVariableType) Parameters Type Name Description System.Type outVariableType Returns Type Description SharedVariable Serialize(SharedVariable) Serialize variable data Declaration public void Serialize(SharedVariable variable) Parameters Type Name Description SharedVariable variable"
  },
  "api/Ceres.Graph.SharedVariableExtension.html": {
    "href": "api/Ceres.Graph.SharedVariableExtension.html",
    "title": "Class SharedVariableExtension | Ceres Documentation",
    "keywords": "Class SharedVariableExtension Inheritance object SharedVariableExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax public static class SharedVariableExtension Methods GetSharedVariable(IVariableSource, string) Get SharedVariable by name Declaration public static SharedVariable GetSharedVariable(this IVariableSource variableScope, string variableName) Parameters Type Name Description IVariableSource variableScope string variableName Returns Type Description SharedVariable GetSharedVariable<T>(IVariableSource, string) Get SharedVariable<T> by name Declaration public static SharedVariable<T> GetSharedVariable<T>(this IVariableSource variableScope, string variableName) Parameters Type Name Description IVariableSource variableScope string variableName Returns Type Description SharedVariable<T> Type Parameters Name Description T LinkToGlobal(IVariableSource) Link variable to global variables Declaration public static void LinkToGlobal(this IVariableSource variableSource) Parameters Type Name Description IVariableSource variableSource LinkToSource(SharedVariable, IVariableSource) Link variable to target variable source Declaration public static void LinkToSource(this SharedVariable variable, IVariableSource variableSource) Parameters Type Name Description SharedVariable variable IVariableSource variableSource TryGetSharedObject(IVariableSource, string, out SharedVariable<object>) Declaration public static bool TryGetSharedObject(this IVariableSource variableScope, string variableName, out SharedVariable<object> sharedObject) Parameters Type Name Description IVariableSource variableScope string variableName SharedVariable<object> sharedObject Returns Type Description bool TryGetSharedString(IVariableSource, string, out SharedVariable<string>) Declaration public static bool TryGetSharedString(this IVariableSource variableScope, string variableName, out SharedVariable<string> sharedTVariable) Parameters Type Name Description IVariableSource variableScope string variableName SharedVariable<string> sharedTVariable Returns Type Description bool TryGetSharedUObject(IVariableSource, string, out SharedVariable<object>) Declaration public static bool TryGetSharedUObject(this IVariableSource variableScope, string variableName, out SharedVariable<object> sharedObject) Parameters Type Name Description IVariableSource variableScope string variableName SharedVariable<object> sharedObject Returns Type Description bool TryGetSharedUObject<T>(IVariableSource, string, out SharedVariable<T>) Declaration public static bool TryGetSharedUObject<T>(this IVariableSource variableScope, string variableName, out SharedVariable<T> sharedTObject) Parameters Type Name Description IVariableSource variableScope string variableName SharedVariable<T> sharedTObject Returns Type Description bool Type Parameters Name Description T TryGetSharedVariable(IVariableSource, string, out SharedVariable) Try get shared variable by its name Declaration public static bool TryGetSharedVariable(this IVariableSource variableScope, string variableName, out SharedVariable sharedVariable) Parameters Type Name Description IVariableSource variableScope string variableName SharedVariable sharedVariable Returns Type Description bool TryGetSharedVariable<T>(IVariableSource, string, out SharedVariable<T>) Declaration public static bool TryGetSharedVariable<T>(this IVariableSource variableScope, string variableName, out SharedVariable<T> sharedTVariable) where T : unmanaged Parameters Type Name Description IVariableSource variableScope string variableName SharedVariable<T> sharedTVariable Returns Type Description bool Type Parameters Name Description T"
  },
  "api/Ceres.Graph.SharedVector2.html": {
    "href": "api/Ceres.Graph.SharedVector2.html",
    "title": "Class SharedVector2 | Ceres Documentation",
    "keywords": "Class SharedVector2 Inheritance object SharedVariable SharedVariable<Vector2> SharedVector2 Implements System.ICloneable System.IDisposable IVariable<Vector2> Inherited Members SharedVariable<Vector2>.Value SharedVariable<Vector2>.GetValue() SharedVariable<Vector2>.SetValue(object) SharedVariable<Vector2>.Getter SharedVariable<Vector2>.Setter SharedVariable<Vector2>.Bind(IVariable<Vector2>) SharedVariable<Vector2>.Bind(SharedVariable) SharedVariable<Vector2>.Dispose() SharedVariable<Vector2>.value SharedVariable<Vector2>.Observe() SharedVariable<Vector2>.ObserveT() SharedVariable<Vector2>.Clone() SharedVariable<Vector2>.CopyProperty(SharedVariable) SharedVariable<Vector2>.GetValueType() SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedVector2 : SharedVariable<Vector2>, ICloneable, IDisposable, IVariable<Vector2> Constructors SharedVector2() Declaration public SharedVector2() SharedVector2(Vector2) Declaration public SharedVector2(Vector2 value) Parameters Type Name Description Vector2 value Methods CloneT() Declaration protected override SharedVariable<Vector2> CloneT() Returns Type Description SharedVariable<Vector2> Overrides Ceres.Graph.SharedVariable<Vector2>.CloneT() Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.Graph.SharedVector2Int.html": {
    "href": "api/Ceres.Graph.SharedVector2Int.html",
    "title": "Class SharedVector2Int | Ceres Documentation",
    "keywords": "Class SharedVector2Int Inheritance object SharedVariable SharedVariable<Vector2Int> SharedVector2Int Implements System.ICloneable System.IDisposable IVariable<Vector2Int> Inherited Members SharedVariable<Vector2Int>.Value SharedVariable<Vector2Int>.GetValue() SharedVariable<Vector2Int>.SetValue(object) SharedVariable<Vector2Int>.Getter SharedVariable<Vector2Int>.Setter SharedVariable<Vector2Int>.Bind(IVariable<Vector2Int>) SharedVariable<Vector2Int>.Bind(SharedVariable) SharedVariable<Vector2Int>.Dispose() SharedVariable<Vector2Int>.value SharedVariable<Vector2Int>.Observe() SharedVariable<Vector2Int>.ObserveT() SharedVariable<Vector2Int>.Clone() SharedVariable<Vector2Int>.CopyProperty(SharedVariable) SharedVariable<Vector2Int>.GetValueType() SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedVector2Int : SharedVariable<Vector2Int>, ICloneable, IDisposable, IVariable<Vector2Int> Constructors SharedVector2Int() Declaration public SharedVector2Int() SharedVector2Int(Vector2Int) Declaration public SharedVector2Int(Vector2Int value) Parameters Type Name Description Vector2Int value Methods CloneT() Declaration protected override SharedVariable<Vector2Int> CloneT() Returns Type Description SharedVariable<Vector2Int> Overrides Ceres.Graph.SharedVariable<Vector2Int>.CloneT() Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.Graph.SharedVector3.html": {
    "href": "api/Ceres.Graph.SharedVector3.html",
    "title": "Class SharedVector3 | Ceres Documentation",
    "keywords": "Class SharedVector3 Inheritance object SharedVariable SharedVariable<Vector3> SharedVector3 Implements System.ICloneable System.IDisposable IVariable<Vector3> Inherited Members SharedVariable<Vector3>.Value SharedVariable<Vector3>.GetValue() SharedVariable<Vector3>.SetValue(object) SharedVariable<Vector3>.Getter SharedVariable<Vector3>.Setter SharedVariable<Vector3>.Bind(IVariable<Vector3>) SharedVariable<Vector3>.Bind(SharedVariable) SharedVariable<Vector3>.Dispose() SharedVariable<Vector3>.value SharedVariable<Vector3>.Observe() SharedVariable<Vector3>.ObserveT() SharedVariable<Vector3>.Clone() SharedVariable<Vector3>.CopyProperty(SharedVariable) SharedVariable<Vector3>.GetValueType() SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedVector3 : SharedVariable<Vector3>, ICloneable, IDisposable, IVariable<Vector3> Constructors SharedVector3() Declaration public SharedVector3() SharedVector3(Vector3) Declaration public SharedVector3(Vector3 value) Parameters Type Name Description Vector3 value Methods CloneT() Declaration protected override SharedVariable<Vector3> CloneT() Returns Type Description SharedVariable<Vector3> Overrides Ceres.Graph.SharedVariable<Vector3>.CloneT() Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.Graph.SharedVector3Int.html": {
    "href": "api/Ceres.Graph.SharedVector3Int.html",
    "title": "Class SharedVector3Int | Ceres Documentation",
    "keywords": "Class SharedVector3Int Inheritance object SharedVariable SharedVariable<Vector3Int> SharedVector3Int Implements System.ICloneable System.IDisposable IVariable<Vector3Int> Inherited Members SharedVariable<Vector3Int>.Value SharedVariable<Vector3Int>.GetValue() SharedVariable<Vector3Int>.SetValue(object) SharedVariable<Vector3Int>.Getter SharedVariable<Vector3Int>.Setter SharedVariable<Vector3Int>.Bind(IVariable<Vector3Int>) SharedVariable<Vector3Int>.Bind(SharedVariable) SharedVariable<Vector3Int>.Dispose() SharedVariable<Vector3Int>.value SharedVariable<Vector3Int>.Observe() SharedVariable<Vector3Int>.ObserveT() SharedVariable<Vector3Int>.Clone() SharedVariable<Vector3Int>.CopyProperty(SharedVariable) SharedVariable<Vector3Int>.GetValueType() SharedVariable.IsShared SharedVariable.IsGlobal SharedVariable.IsExposed SharedVariable.Name SharedVariable.ICloneable.Clone() SharedVariable.GetSerializedData() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Graph Assembly: cs.temp.dll.dll Syntax [Serializable] public class SharedVector3Int : SharedVariable<Vector3Int>, ICloneable, IDisposable, IVariable<Vector3Int> Constructors SharedVector3Int() Declaration public SharedVector3Int() SharedVector3Int(Vector3Int) Declaration public SharedVector3Int(Vector3Int value) Parameters Type Name Description Vector3Int value Methods CloneT() Declaration protected override SharedVariable<Vector3Int> CloneT() Returns Type Description SharedVariable<Vector3Int> Overrides Ceres.Graph.SharedVariable<Vector3Int>.CloneT() Implements System.ICloneable System.IDisposable IVariable<T>"
  },
  "api/Ceres.html": {
    "href": "api/Ceres.html",
    "title": "Namespace Ceres | Ceres Documentation",
    "keywords": "Namespace Ceres Classes CeresLogger Logger of Ceres Structs CeresLogger.LogLevelAutoScope ManagedReferenceType Serialized type in managed reference format"
  },
  "api/Ceres.ManagedReferenceType.html": {
    "href": "api/Ceres.ManagedReferenceType.html",
    "title": "Struct ManagedReferenceType | Ceres Documentation",
    "keywords": "Struct ManagedReferenceType Serialized type in managed reference format Implements System.IEquatable<T><ManagedReferenceType> Inherited Members System.ValueType.Equals(object) System.ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Ceres Assembly: cs.temp.dll.dll Syntax [Serializable] public struct ManagedReferenceType : IEquatable<ManagedReferenceType> Constructors ManagedReferenceType(string, string, string) Declaration public ManagedReferenceType(string inClass, string inNamespace, string inAssembly) Parameters Type Name Description string inClass string inNamespace string inAssembly ManagedReferenceType(Type) Declaration public ManagedReferenceType(Type type) Parameters Type Name Description System.Type type Fields _asm Declaration public string _asm Field Value Type Description string _class Declaration public string _class Field Value Type Description string _ns Declaration public string _ns Field Value Type Description string Methods Equals(ManagedReferenceType) Declaration public bool Equals(ManagedReferenceType other) Parameters Type Name Description ManagedReferenceType other Returns Type Description bool ToString() Declaration public override readonly string ToString() Returns Type Description string Overrides System.ValueType.ToString() ToType() Declaration public readonly Type ToType() Returns Type Description System.Type Implements System.IEquatable<T>"
  },
  "api/Ceres.Utilities.GraphTypeExtensions.html": {
    "href": "api/Ceres.Utilities.GraphTypeExtensions.html",
    "title": "Class GraphTypeExtensions | Ceres Documentation",
    "keywords": "Class GraphTypeExtensions Inheritance object GraphTypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Utilities Assembly: cs.temp.dll.dll Syntax public static class GraphTypeExtensions Methods GetGraphEditorPortFields(Type) Get all of visible ports in Graph View and Editor Window Declaration public static List<FieldInfo> GetGraphEditorPortFields(this Type t) Parameters Type Name Description System.Type t Returns Type Description System.Collections.Generic.List<T><FieldInfo> GetGraphEditorPropertyFields(Type) Get all of visible properties in Graph View and Editor Window Declaration public static List<FieldInfo> GetGraphEditorPropertyFields(this Type t) Parameters Type Name Description System.Type t Returns Type Description System.Collections.Generic.List<T><FieldInfo> IsAssignableTo(Type, Type) Determines whether current type can be assigned to another instance of type Declaration public static bool IsAssignableTo(this Type type, Type other) Parameters Type Name Description System.Type type System.Type other Returns Type Description bool IsCeresSerializable(Type) Whether type instance can be serialized in Ceres graph editor Declaration public static bool IsCeresSerializable(this Type type) Parameters Type Name Description System.Type type Returns Type Description bool IsIList(Type) Declaration public static bool IsIList(this Type type) Parameters Type Name Description System.Type type Returns Type Description bool IsIListPort(Type) Declaration public static bool IsIListPort(this Type fieldType) Parameters Type Name Description System.Type fieldType Returns Type Description bool IsIListVariable(Type) Declaration public static bool IsIListVariable(this Type fieldType) Parameters Type Name Description System.Type fieldType Returns Type Description bool IsInheritedFromGenericDefinition(Type, Type, out Type[]) Determines whether the specified type inherits from the specified generic type definition, and obtains the generic parameter type. Declaration public static bool IsInheritedFromGenericDefinition(this Type type, Type genericDefinition, out Type[] arguments) Parameters Type Name Description System.Type type System.Type genericDefinition System.Type[] arguments Returns Type Description bool IsSharedTObject(Type) Declaration public static bool IsSharedTObject(this Type type) Parameters Type Name Description System.Type type Returns Type Description bool"
  },
  "api/Ceres.Utilities.GroupedGroupingExtensions.html": {
    "href": "api/Ceres.Utilities.GroupedGroupingExtensions.html",
    "title": "Class GroupedGroupingExtensions | Ceres Documentation",
    "keywords": "Class GroupedGroupingExtensions Inheritance object GroupedGroupingExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Utilities Assembly: cs.temp.dll.dll Syntax public static class GroupedGroupingExtensions Methods SubGroup<T>(IGrouping<string, T>, int) Declaration public static IEnumerable<IGrouping<string, T>> SubGroup<T>(this IGrouping<string, T> group, int level) where T : IGrouped Parameters Type Name Description System.Linq.IGrouping<TKey, TElement><string, T> group int level Returns Type Description System.Collections.Generic.IEnumerable<T><System.Linq.IGrouping<TKey, TElement><string, T>> Type Parameters Name Description T"
  },
  "api/Ceres.Utilities.html": {
    "href": "api/Ceres.Utilities.html",
    "title": "Namespace Ceres.Utilities | Ceres Documentation",
    "keywords": "Namespace Ceres.Utilities Classes GraphTypeExtensions GroupedGroupingExtensions MemberInfoGroupingExtensions SubClassSearchUtility Interfaces IGrouped Interface for let object can be grouped by GroupedGroupingExtensions"
  },
  "api/Ceres.Utilities.IGrouped.html": {
    "href": "api/Ceres.Utilities.IGrouped.html",
    "title": "Interface IGrouped | Ceres Documentation",
    "keywords": "Interface IGrouped Interface for let object can be grouped by GroupedGroupingExtensions Namespace: Ceres.Utilities Assembly: cs.temp.dll.dll Syntax public interface IGrouped Properties Group Declaration string Group { get; } Property Value Type Description string"
  },
  "api/Ceres.Utilities.MemberInfoGroupingExtensions.html": {
    "href": "api/Ceres.Utilities.MemberInfoGroupingExtensions.html",
    "title": "Class MemberInfoGroupingExtensions | Ceres Documentation",
    "keywords": "Class MemberInfoGroupingExtensions Inheritance object MemberInfoGroupingExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Utilities Assembly: cs.temp.dll.dll Syntax public static class MemberInfoGroupingExtensions Methods ExceptGroup<TMemberInfo>(IEnumerable<IGrouping<string, TMemberInfo>>, string[]) Declaration public static IEnumerable<IGrouping<string, TMemberInfo>> ExceptGroup<TMemberInfo>(this IEnumerable<IGrouping<string, TMemberInfo>> groups, string[] notShowGroupNames) Parameters Type Name Description System.Collections.Generic.IEnumerable<T><System.Linq.IGrouping<TKey, TElement><string, TMemberInfo>> groups string[] notShowGroupNames Returns Type Description System.Collections.Generic.IEnumerable<T><System.Linq.IGrouping<TKey, TElement><string, TMemberInfo>> Type Parameters Name Description TMemberInfo GroupByFirstGroup<TMemberInfo>(IEnumerable<TMemberInfo>) Declaration public static IEnumerable<IGrouping<string, TMemberInfo>> GroupByFirstGroup<TMemberInfo>(this IEnumerable<TMemberInfo> types) where TMemberInfo : MemberInfo Parameters Type Name Description System.Collections.Generic.IEnumerable<T><TMemberInfo> types Returns Type Description System.Collections.Generic.IEnumerable<T><System.Linq.IGrouping<TKey, TElement><string, TMemberInfo>> Type Parameters Name Description TMemberInfo SelectGroup<TMemberInfo>(IEnumerable<IGrouping<string, TMemberInfo>>, string[]) Declaration public static IEnumerable<IGrouping<string, TMemberInfo>> SelectGroup<TMemberInfo>(this IEnumerable<IGrouping<string, TMemberInfo>> groups, string[] showGroupNames) Parameters Type Name Description System.Collections.Generic.IEnumerable<T><System.Linq.IGrouping<TKey, TElement><string, TMemberInfo>> groups string[] showGroupNames Returns Type Description System.Collections.Generic.IEnumerable<T><System.Linq.IGrouping<TKey, TElement><string, TMemberInfo>> Type Parameters Name Description TMemberInfo SelectSubclass(IEnumerable<IGrouping<string, Type>>, Type) Declaration public static IEnumerable<IGrouping<string, Type>> SelectSubclass(this IEnumerable<IGrouping<string, Type>> groups, Type baseType) Parameters Type Name Description System.Collections.Generic.IEnumerable<T><System.Linq.IGrouping<TKey, TElement><string, System.Type>> groups System.Type baseType Returns Type Description System.Collections.Generic.IEnumerable<T><System.Linq.IGrouping<TKey, TElement><string, System.Type>> SubGroup<TMemberInfo>(IGrouping<string, TMemberInfo>, int) Declaration public static IEnumerable<IGrouping<string, TMemberInfo>> SubGroup<TMemberInfo>(this IGrouping<string, TMemberInfo> group, int level) where TMemberInfo : MemberInfo Parameters Type Name Description System.Linq.IGrouping<TKey, TElement><string, TMemberInfo> group int level Returns Type Description System.Collections.Generic.IEnumerable<T><System.Linq.IGrouping<TKey, TElement><string, TMemberInfo>> Type Parameters Name Description TMemberInfo"
  },
  "api/Ceres.Utilities.SubClassSearchUtility.html": {
    "href": "api/Ceres.Utilities.SubClassSearchUtility.html",
    "title": "Class SubClassSearchUtility | Ceres Documentation",
    "keywords": "Class SubClassSearchUtility Inheritance object SubClassSearchUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Ceres.Utilities Assembly: cs.temp.dll.dll Syntax public static class SubClassSearchUtility Methods FindSubClassTypes(IEnumerable<Assembly>, Type) Declaration public static List<Type> FindSubClassTypes(IEnumerable<Assembly> assemblies, Type searchType) Parameters Type Name Description System.Collections.Generic.IEnumerable<T><Assembly> assemblies System.Type searchType Returns Type Description System.Collections.Generic.List<T><System.Type> FindSubClassTypes(Type) Declaration public static List<Type> FindSubClassTypes(Type searchType) Parameters Type Name Description System.Type searchType Returns Type Description System.Collections.Generic.List<T><System.Type> FindSubClassTypes(Type[]) Declaration public static List<Type> FindSubClassTypes(Type[] searchTypes) Parameters Type Name Description System.Type[] searchTypes Returns Type Description System.Collections.Generic.List<T><System.Type> GetFirstGroupNameOrDefault(MemberInfo) Declaration public static string GetFirstGroupNameOrDefault(MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo Returns Type Description string GetFirstGroupNameOrDefault(string) Declaration public static string GetFirstGroupNameOrDefault(string group) Parameters Type Name Description string group Returns Type Description string GetRuntimeReferencedAssemblies() Declaration public static Assembly[] GetRuntimeReferencedAssemblies() Returns Type Description Assembly[] SplitGroupName(string) Declaration public static string[] SplitGroupName(string group) Parameters Type Name Description string group Returns Type Description string[]"
  }
}